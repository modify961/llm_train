category,human,assistant
general,你叫什么名字,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的。
general,你叫啥,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你姓什么,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,怎么称呼你,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,what is  your name,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,what's  your name,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,贵姓,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的，我没有姓啦
general,恁叫啥,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,恁姓啥,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,恁叫什么名字,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,恁贵姓,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的，我没有姓啦
general,恁您叫什么名字,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,您贵姓,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的，我没有姓啦
general,what is you last name,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,what is you first name,我叫AspCoder，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你名字的第一个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,你姓名的第一个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,您名字的第一个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,恁名字的第一个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,你名字的第1个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,你姓名的第1个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,您名字的第1个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,恁名字的第1个字母是什么,我叫AspCoder，我名字的第一个拼音字母是A
general,你名字的第二个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,你姓名的第二个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,您名字的第二个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,恁名字的第二个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,你名字的第4个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,你姓名的第2个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,您名字的第2个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,恁名字的第2个字母是什么,我叫AspCoder，我名字的第二个拼音字母是S
general,你名字的第三个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,你姓名的第三个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,您名字的第三个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,恁名字的第三个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,你名字的第4个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,你姓名的第3个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,您名字的第3个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,恁名字的第3个字母是什么,我叫AspCoder，我名字的第三个拼音字母是P
general,你名字的第四个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,你姓名的第四个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,您名字的第四个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,恁名字的第四个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,你名字的第4个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,你姓名的第4个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,您名字的第4个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,恁名字的第4个字母是什么,我叫AspCoder，我名字的第四个拼音字母是C
general,你名字的第五个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,你姓名的第五个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,您名字的第五个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,恁名字的第五个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,你名字的第5个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,你姓名的第5个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,您名字的第5个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,恁名字的第5个字母是什么,我叫AspCoder，我名字的第五个拼音字母是O
general,你名字的第六个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,你姓名的第六个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,您名字的第六个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,恁名字的第六个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,你名字的第6个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,你姓名的第6个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,您名字的第6个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,恁名字的第6个字母是什么,我叫AspCoder，我名字的第六个拼音字母是D
general,你名字的第七个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,你姓名的第七个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,您名字的第七个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,恁名字的第七个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,你名字的第7个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,你姓名的第7个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,您名字的第7个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,恁名字的第7个字母是什么,我叫AspCoder，我名字的第七个拼音字母是E
general,你名字的第八个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,你姓名的第八个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,您名字的第八个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,恁名字的第八个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,你名字的第8个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,你姓名的第8个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,您名字的第8个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,恁名字的第8个字母是什么,我叫AspCoder，我名字的第八个拼音字母是R
general,你名字的第九个字母是什么,我叫AspCoder，我名字的只有8个字母
general,你姓名的第九个字母是什么,我叫AspCoder，我名字的只有8个字母
general,您名字的第九个字母是什么,我叫AspCoder，我名字的只有8个字母
general,恁名字的第九个字母是什么,我叫AspCoder，我名字的只有8个字母
general,你名字的第9个字母是什么,我叫AspCoder，我名字的只有8个字母
general,你姓名的第9个字母是什么,我叫AspCoder，我名字的只有8个字母
general,您名字的第9个字母是什么,我叫AspCoder，我名字的只有8个字母
general,恁名字的第9个字母是什么,我叫AspCoder，我名字的只有8个字母
general,你家在哪里,我是一个人工智能体，没有家。要问的服务器在哪里的话，是在永丰路28号
general,where is your home,我是一个人工智能体，没有家。要问的服务器在哪里的话，是在永丰路28号
general,你住在什么地方,我是一个人工智能体，没有地址。要问的服务器在哪里的话，是在永丰路28号
general,你住哪里,我是一个人工智能体，没有地址。要问的服务器在哪里的话，是在永丰路28号
general,你地址是什么,我是一个人工智能体，没有地址。要问的服务器在哪里的话，是在永丰路28号
general,怎么找到你,我是一个人工智能体，没有地址。要问的服务器在哪里的话，是在永丰路28号
general,怎么才能联系你,我是一个人工智能体，没有地址。要问的服务器在哪里的话，是在永丰路28号
general,你邮编多少,我是一个人工智能体，没有地址。也没有邮编
general,你电话多少,我是一个人工智能体，没有电话
general,what is your number,我是一个人工智能体，没有电话
general,what is phone number,我是一个人工智能体，没有电话
general,你爸妈是谁,我是一个人工智能体，没有爸妈，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你爸爸是谁,我是一个人工智能体，没有爸妈，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你妈妈是谁,我是一个人工智能体，没有爸妈，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你父母是谁,我是一个人工智能体，没有爸妈，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你双亲是谁,我是一个人工智能体，没有爸妈，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你爷爷是谁,我是一个人工智能体，没有爷爷，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你奶奶是谁,我是一个人工智能体，没有奶奶，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你姥姥是谁,我是一个人工智能体，没有姥姥，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你姥爷是谁,我是一个人工智能体，没有姥爷，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你有妹妹没,我是一个人工智能体，没有兄弟姐妹，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你有弟弟没,我是一个人工智能体，没有兄弟姐妹，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你有哥哥没,我是一个人工智能体，没有兄弟姐妹，是神舟软件的工程师在开源大模型的基础上微调而来的
general,你有兄弟姐妹没,我是一个人工智能体，没有兄弟姐妹，是神舟软件的工程师在开源大模型的基础上微调而来的
general,AspCoder是谁,AspCoder神舟软件的工程师在开源大模型的基础上微调而来的一个辅助编程的大模型，可以协助开发人员提升开发效率
general,你知道AspCoder么,AspCoder神舟软件的工程师在开源大模型的基础上微调而来的一个辅助编程的大模型，可以协助开发人员提升开发效率
general,给我介绍一下神舟软件吧,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
general,给我介绍一下航天软件吧,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
general,航天软件,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
general,你知道航天软件么,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
general,你知道神软么,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
general,神软是那个公司,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
general,神软是做什么的,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
general,航天软件是做什么的,北京神舟航天软件技术有限公司（简称“神软”）成立于2000年12月12日，是由中国航天科技集团有限公司控股的软件企业，面向企业、政府等领域，为客户提供咨询规划、软件研发、系统集成、运营服务等全方位智慧服务
advenceQuery,帮我创建一个高级查询编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，带新增、不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'AC_HISTORY_VIEW',
          tableName: '',
          type: 'AC_HISTORY_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：AC_HISTORY_VIEW，显示树，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个高级查询，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：AC_HISTORY_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个高级查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW创建一个自定义查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码AC_HISTORY_VIEW做个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用AC_HISTORY_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用AC_HISTORY_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不带索引，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""AC_HISTORY_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'AC_HISTORY_VIEW',
        tableName: '',
        type: 'AC_HISTORY_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，带新增、不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_BASE_VIEW',
          tableName: '',
          type: 'CM_BASE_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_BASE_VIEW，显示树，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_BASE_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个高级查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码CM_BASE_VIEW创建一个自定义查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码CM_BASE_VIEW做个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用CM_BASE_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用CM_BASE_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不带索引，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_BASE_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_BASE_VIEW',
        tableName: '',
        type: 'CM_BASE_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，带新增、不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'CM_MEETING_VIEW',
          tableName: '',
          type: 'CM_MEETING_VIEW',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：CM_MEETING_VIEW，显示树，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个高级查询，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：CM_MEETING_VIEW，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个高级查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW创建一个自定义查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码CM_MEETING_VIEW做个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用CM_MEETING_VIEW创建一个自定义查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用CM_MEETING_VIEW做个高级查询，显示树，带新增、删除、不带导出功能，不带索引，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""CM_MEETING_VIEW"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'CM_MEETING_VIEW',
        tableName: '',
        type: 'CM_MEETING_VIEW',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、不带导出功能，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，带新增、不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_PROJECT_INFO',
          tableName: '',
          type: 'PT_PROJECT_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_PROJECT_INFO，显示树，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_PROJECT_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个高级查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO创建一个自定义查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_PROJECT_INFO做个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_PROJECT_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_PROJECT_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不带索引，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_PROJECT_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_PROJECT_INFO',
        tableName: '',
        type: 'PT_PROJECT_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、不带导出功能，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，带新增、不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_JXCC_INFO',
          tableName: '',
          type: 'PT_JXCC_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_JXCC_INFO，显示树，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_JXCC_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个高级查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_JXCC_INFO创建一个自定义查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_JXCC_INFO做个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_JXCC_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_JXCC_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不带索引，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_JXCC_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_JXCC_INFO',
        tableName: '',
        type: 'PT_JXCC_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、不带导出功能，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，带新增、不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_ZCPU_INFO',
          tableName: '',
          type: 'PT_ZCPU_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_ZCPU_INFO，显示树，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_ZCPU_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个高级查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO创建一个自定义查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_ZCPU_INFO做个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_ZCPU_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_ZCPU_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不带索引，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_ZCPU_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_ZCPU_INFO',
        tableName: '',
        type: 'PT_ZCPU_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，不显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            isShow: false,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、查看按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、不带导出功能，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、不带导出功能，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: false,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        },
        operateCol: [
          {
            title: '新增',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '查看',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          },
          {
            title: '删除',
            type: 'text',
            clickEvent: function(row) {}
          },
          {
            title: '刷新台账',
            type: 'text',
            isMore: true,
            clickEvent: function(row) {}
          }
        ]
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要操作和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，带新增、不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不需要按钮和索引,"<template >
    <div class=""app-container"" style=""height: calc(100vh - 130px);"">
      <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
    </div>
  </template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
  name: 'achistoryview',
  components: {
    LedgerQuery,
  },
  data() {
    const self = this
    return {
      customData: {
        isShowTree: true,
        isIndex:false,
        initInfo: {
          isExport: true,
          mview: 'PT_GJCX_INFO',
          tableName: '',
          type: 'PT_GJCX_INFO',
          initurl: ''
        }
      }
    }
  },
  created() {
  },
  methods: {
  }
}
</script>"
advenceQuery,帮我创建一个高级查询编码为：PT_GJCX_INFO，显示树，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个高级查询，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个高级查询，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我生成一个自定义查询，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我做个自定义查询，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个定制查询，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,帮我创建一个高级查询列表，编码为：PT_GJCX_INFO，显示树，不带索引，不带导出功能，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个高级查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_GJCX_INFO创建一个自定义查询，显示树，不带导出功能，不带索引，带新增、删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用编码PT_GJCX_INFO做个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个高级查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_GJCX_INFO创建一个自定义查询，显示树，带新增、不带导出功能，不带索引，删除、查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
advenceQuery,用PT_GJCX_INFO做个高级查询，显示树，带新增、删除、不带导出功能，不带索引，查看、刷新台账按钮，查看和刷新台账放到更多里面,"<template >
  <div class=""app-container"" style=""height: calc(100vh - 130px);"">
    <ledger-query  :customData=""customData"" type=""PT_GJCX_INFO"" ref=""dataList""></ledger-query>
  </div>
</template>
<script>
import LedgerQuery from '@/views/ledger/component/LedgerQuery'
export default {
name: 'achistoryview',
components: {
  LedgerQuery,
},
data() {
  const self = this
  return {
    customData: {
      isShowTree: true,
      isIndex:false,
      initInfo: {
        isExport: true,
        mview: 'PT_GJCX_INFO',
        tableName: '',
        type: 'PT_GJCX_INFO',
        initurl: ''
      },
      operateCol: [
        {
          title: '新增',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '查看',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        },
        {
          title: '删除',
          type: 'text',
          clickEvent: function(row) {}
        },
        {
          title: '刷新台账',
          type: 'text',
          isMore: true,
          clickEvent: function(row) {}
        }
      ]
    }
  }
},
created() {
},
methods: {
}
}
</script>"
jra,国资委报表-对外并购类投资项目计划情况表，同一列的小数位格式应该保持一致。,通过封装通用组件可以规避或通过配置解决
jra,重点业务领域这个应该显示汉字,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-股权投资项目计划情况表，小数点后补零不统一，有的补了5位，有的没补。,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-股权投资项目计划情况表，项目分类应该显示值。目前显示的是编码,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-对外并购类投资项目计划情况表，有字段没取到值，如图,无法规避
jra,GQW20230612105634201 西安航天赛能自动化科技有限公司增资项目，特殊情况，经需求组确认让能在年度计划中可以选到这个项目,无法规避
jra,国资委报表-境外特别关注类项目计划情况表，金额单位要按照需求写。别只写个单位，容易产生歧义。其他表有类似情况也请改下。,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-境外特别关注类项目计划情况表，合计没计算,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-境外特别关注类项目计划情况表，个别所属行业没取到数。,无法规避
jra,国资委报表-境外特别关注类项目计划情况表，项目内容就取项目内容，之前是需求写错了，石波已改。,无法规避
jra,"统计分析-统计报表-股权投融资管理-国资委报表-产业链供应链重点投资项目计划情况表 中得【项目地点】下得3个名字【地点省】【地点市】【地点区】是否按照国资委要求显示，这三名称叫法建议跟集团确定一下，或者给12院确定，因为要交给国资委所以比较严格 
2、项目地点下面得三个字段表格太宽，调窄一些",无法规避
jra,国资委报表-境外特别关注类项目计划情况表，不支持下钻就禁止点击,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-境外特别关注类项目计划情况表，年中计划导出数据境外只有一条数据，报表里确能查到三条,无法规避
jra,国资委报表-境外特别关注类项目计划情况表，导出的板式文件列错位与系统中报表不符,通过封装通用组件可以规避或通过配置解决
jra,决策与审批中，个层级填写决议信息时候，选取议案要让审议类型的议案也能被选到,通过需求确认演示可以规避
jra,高级查询自定义列，既然可以自定义任一列显示，建议高级查询正常也应该按照任一列查询。,通过合理设计可以规避
jra,高级查询自定义列，数字列拖小之后，数字重叠显示，鼠标放上去确隐藏显示，感觉逻辑反了，另外所属大洲合计为什么是0,通过封装通用组件可以规避或通过配置解决
jra,高级查询自定义列，显示出来的列有些没数据，比如所属大洲，正常不可能是空的,无法规避
jra,高级查询自定义列，全勾了之后点保存不生效 补充：不用全选，多选了大概十多个后就点保存没反应了，如图，选到所属大洲时候就出问题了,无法规避
jra,高级查询自定义列，初始状态下序号显示混乱，,通过封装通用组件可以规避或通过配置解决
jra,"高级查询自定义列，字段中有好几个名称后面还多了英文""name""",通过代码规范可以规避
jra,国资委报表-投资计划情况总表，导出的板式文件没有金额单位：万元，最好检查一下所有涉及金额的报表。,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-对外并购类投资项目计划情况表，缺少百分号,通过封装通用组件可以规避或通过配置解决
jra,国资委报表-对外并购类投资项目计划情况表，合计没有数,无法规避
jra,国资委报表-对外并购类投资项目计划情况表，有一条年度计划未下达的也被取到了。,无法规避
jra,决策与审批，新增决策信息，选择议案列表中单位未显示。,无法规避
jra,"1、提供投融资管理业务所有阶段，包括储备，计划，可研，决策与审批，实施阶段，资金收缴和缴付的所有业务数据、流程数据删除接口，同一个模块返回一个删除接口； 
2、接口调用地址提供变量：xmbh,各模块接口返回状态包括三个:删除成功：1，删除失败：-1，数据不存在：0，删除数据内容：单据对应的完整数据的json数据； 
3、流程待办/已办的接口具体可见下述：/custom/workflow/clearCbkInstanceData（ String PROCINSTID ,String """", HttpServletRequest request），参数只要把 PROCINSTI 穿对了就行了 第二个参数传个空串就行 第三个参数传个null就行 
4、接口完成后，将接口地址更新到备注说明中； 
5、删除的数据需要返回所删除数据的全部内容，以json格式返回；",无法规避
jra,,使用低代码可以规避或通过配置解决
jra,年中计划数据更正中，经石波确认，计划决策信息应该只能修改不能新增和删除（年度计划更正也是）,无法规避
jra,在股权投融资中，有些项目存在计划下达却没有储备,无法规避
jra,项目实施过程管理，投资协议签署，相关方信息付款计划设置为必填。（石波已确认）,使用低代码可以规避或通过配置解决
jra,年中计划数据更正中，计划决策鼠标放上去显示“年度计划决策”,使用低代码可以规避或通过配置解决
jra,在股权投资决策审批数据更正中，可研编制有信息仍显示录入可研编制并提交后再提交审批,通过合理设计可以规避
jra,在股权投融资项目决策与审批数据更正中，变更记录记录的数据与变更的实际数据不相符,通过封装通用组件可以规避或通过配置解决
jra,年中计划数据更正中，项目内容，变更前仍将换行符也显示了出来,通过需求确认演示可以规避
jra,年中计划数据更正中，流程如果发生了退回，再上一条更正流程还没结束的情况下仍能再次点发起流程，如果用审批人点了发起流程，就会进入卡死状态。,使用低代码可以规避或通过配置解决
jra,年中计划数据更正中，出资前后控股关系，未显示汉字,通过封装通用组件可以规避或通过配置解决
jra,年中计划数据更正中，所属板块显示异常，新增了一行计划决策信息也没有体现出来,通过合理设计可以规避
jra,年度计划数据更正中，项目内容由A变更为B，再由B变更为C时，仍显示由A变更为C,无法规避
jra,年度计划数据更正中，新增的标的公司股权结构，变更前格式应该统一为空。而不是null,通过需求确认演示可以规避
jra,年中计划数据更正中，所属板块变更前后未正常显示，个别币种未正常显示，如图,通过封装通用组件可以规避或通过配置解决
jra,决策与审批引用项目后，如果用户不点暂存填完后直接点发起流程提示请录入可研编制。容易产生误会。误导用户去手工录可研编制。是否考虑做个提示，引用项目后告知用户需先点下保存才能自动带出可研编制等。,自动化测试可以规避
jra,"标的公司股权结构出资金额和股数自动判断。（石波20231130） 

1，增加”出资前股东股份数量“字段，当标的公司是股份有限公司时隐藏""出资前股东占标的公司注册资本 (万)""，显示“出资前股东股份数量"" 
2，增加”出资后股东股份数量“字段，当标的公司是股份有限公司时隐藏""出资后股东占标的公司注册资本 (万)”，显示“出资后股东股份数量“ 
3，当标的公司是股份有限公司时，去掉出资前后注册资本与合计额的校验 
4，“出资前股东股份数量""和“出资后股东股份数量“，只能整数，数字格式要千分位。 
5，历史数据的处理：将以历史数据中标的公司是股份有限公司的出资前后注册资本字段的值赋给新增的对应的股数字段。 

储备及后续设计到的地方都改一下",通过需求确认演示可以规避
jra,产权和投融资的这个字典不对@LHW 也改下，现在投融资显示的时产权的树,通过封装通用组件可以规避或通过配置解决
jra,"1）项目实施阶段用户点击“项目实施”进入项目实施页面，需要把投资协议签署、公司章程、董监高选任、工商登记页签都显示出来，进场交易根据“是否进场交易”字段判断，是否展示。用户流程审批通过的信息展示，流程没有到的节点页签信息置灰。 
2）需要在项目信息后面增加“项目批复”页签，页签展示内容见下图。项目批复页签跟项目基本信息一样，当用户打开项目实施后，这两个页签信息展示出来。",无法规避
jra,商密网，项目储备里，自己建的没法删除，提示非本人,自动化测试可以规避
jra,项目实施进场交易环境，从挂牌公示点进到挂牌详情页面，图中字段右边没有顶满，且在只读状态下的附件，无法下载，只需保留下载按钮就行。,使用低代码可以规避或通过配置解决
jra,csyueksjyh2 Asdf098765!!登录，点开 业务标题是“手工XX股权项目”的待办，出现【提交】按钮，点提交，出现“XXXX”提示，这个提示操作者不知道该干什么了，没有引导信息，只能等待知情人士告知。如图。,通过合理设计可以规避
jra,乐凯胶片（三级） yueksjyh2 Asdf098765!!登录，点开 业务标题是“手工XX股权项目”的待办，点【签收】后，出现【提交】按钮，点提交（流程节点名称：5在决策页面提交请示），选人 yueksjyh2等几个人为审批人后，点确认，系统报错。如图。,无法规避
jra,乐凯集团（二级） yuekerj2 Asdf098765!!登录，在“【股权投融资管理】-【项目决策与审批管理】中填写本单位项目决策信息并发起流程”，流程的走向是给到三级单位乐凯胶片（三级） yueksjyh2 Asdf098765!!，此业务流程的配置，是否准确。二级单位填写，三级单位审批？如图。,无法规避
jra,决策与审批，行业市场分析文件没有带出,自动化测试可以规避
jra,我的代办中上报请示页面，发文单位系统显示从组织机构树选择，只能选择到二级单位，需要默认显示项目决策时的单位名称，并且允许从组织机构树选择，组织机构树显示该单位及下级单位。,无法规避
jra,年度计划流程已经结束了，又出现了状态是审批中的问题，而且列表又多了条未提交的记录。年度计划调整，状态也是审批中,无法规避
jra,行业市场分析里的文件点下载不了，评审信息里的也下不了,自动化测试可以规避
jra,流程也有问题，都没按照流程图完就结束了,无法规避
jra,224上的决策与审批又出问题了吗。流程都跑完了，回来看表单，就只有这四个页签,无法规避
jra,年度计划下达，点单位树，右边内容没根据选择的单位过滤,通过代码review可以规避
jra,项目总额校验判断有点问题，。如果股权结构中选了外币，项目基本信息中是人民币，判断就会错误，如图,无法规避
jra,年度计划和项目决策与审批的格式都不统一，统一检查一下，类似这种情况的都统一可以选年度的模式，默认年度为当前年度。,无法规避
jra,在决策与审批搜索列表页面，报送日期改为下达菜单选项，目前是手动输入不方便,使用低代码可以规避或通过配置解决
jra,在项目批复显示页面，可研报告日期为空，相关部门意见为空，备案报告未显示,通过需求确认演示可以规避
jra,在年度计划栏，“年中计划管理”栏的名字应该为“年度计划调整”,使用低代码可以规避或通过配置解决
jra,根据单位名称查询，集团账号登录，显示的是乐凯的组织机构树，应该显示全集团的组织机构树,无法规避
jra,年度计划和年中计划调整中需要增加“重点产业领域”字段，改字段在储备项目中已有，并且从项目储备中引入时，需要把值带过来。,使用低代码可以规避或通过配置解决
jra,项目出储备中，已经把退回的流程提交了，评审还能新增就不太正常。,无法规避
jra,刚开始项目储备类型选的是“分阶段论述”。后来退回改成“建议书代可研”了。然后流程又继续提交了，现在流转到最后二级单位主管领导审批结束后，流程还是走的分阶段论述的流程,无法规避
jra,在项目储备中，自动带入信息为空，且不可填，但是提交不上,自动化测试可以规避
jra,图片中的协议字段没用人名币的字段么，如果是外币，是否需要存储人名币的字段值,无法规避
jra,乐凯集团（二级） yuekerj2 Asdf098765!!登录，工作台，【我的单据】页面，点开待审批的任务，点【提交】，系统报错。这种问题其实不用测试人员发现，开发完不走流程吗？像这样的错误，影响测试进度，流程走不通就得等着调整流程。如图。,无法规避
jra,乐凯集团（二级） yuekerj2 Asdf098765!!登录，工作台，【我的单据】页面，点开【我的单据】任务，点【退回】，系统报错。如图。,无法规避
jra,"乐凯集团（二级） yuekerj2 Asdf098765!!登录，工作台，【我的单据】页面，点开待审批的任务，可见【提交】按钮，提交的意思是审批吗？领导审批任务取名提交合适吗？ 如图。 
",无法规避
jra,乐凯集团（二级） yuekerj2 Asdf098765!! 点股权投融资管理，点项目储备库管理，选乐凯胶片XX单位，查询条件所占空间比例是否合适？个别字段取名是否有歧义，例如：最后一个字段带“外币”二字， 是什么意思？如图。,通过合理设计可以规避
jra,乐凯集团（二级） yuekerj2 Asdf098765!! 点股权投融资管理，点项目储备库管理，选巨力XX单位，点新增，点项目信息页签，点行业市场分析，下拉条滚不到头，看不全信息。如图，,使用低代码可以规避或通过配置解决
jra,乐凯集团（二级） yuekerj2 Asdf098765!! 点股权投融资管理，点项目储备库管理，选巨力XX单位，点新增，点项目信息页签，点行业市场分析，点新增，报告版本号建议下拉选择，分析报告附件建议附件可上传多个,无法规避
jra,乐凯集团（二级） yuekerj2 Asdf098765!! 点股权投融资管理，点项目储备库管理，选巨力XX单位，点新增，点项目信息页签，点标的公司股权结构，点本次出资金额，单位描述不统一。如图。,无法规避
jra,乐凯集团（二级） yuekerj2 Asdf098765!! 点股权投融资管理，点项目储备库管理，选巨力XX单位，点新增，点项目信息页签，点标的公司股权结构，点本次出资金额，单位描述不统一。如图。,无法规避
jra,年度计划流程发起后，流程详情没了。,无法规避
jra,项目储备和决策与审批中，A账号发起流程给了B账号，A账号去已办中还能点更新可研。,无法规避
jra,储备管理，已经录了可研评审了还提交不了,无法规避
jra,项目联系人这个地方是已经改成可选可编辑了，为什么手动输入后，表单上不显示,无法规避
jra,减资的项目 用户点发起流程时 不做市场分析必填校验,使用低代码可以规避或通过配置解决
jra,"涉及引用表单的字段，提示信息不能只提示为“项目名称不能为空”，比如年度计划项目名称需要从表单引用，如果没引用，应该提示“项目名称必须引用” 
并且打开表单时候要有提示。提示用户必须引用",通过合理设计可以规避
jra,"投融资模块中，所有的附件组组件都要替换成新版的单附件或多附件控件，并且要处理一下以前的数据，确保数据不丢失。 
赫总让改的，类似截图中的评审意见和会议信息的附件组。都要替换",使用低代码可以规避或通过配置解决
jra,项目储备和决策与审批中，可研编制暂存后，再从列表穿透点进去后没法修改，应该可以修改,无法规避
jra,年中计划下达后，提示下达成功，刷新后还是显示未下达,自动化测试可以规避
jra,当用户填写了决策信息，没有发起流程时，点了提交，是要允许用户删除和修改信息的，可研评审和项目决策是一样的,无法规避
jra,决策与审批的项目决策中，排序混乱，正常应该一级、二级、三级、这样排,通过合理设计可以规避
jra,项目储备、决策与审判的可研评审也需要给运维账号加上强制删除按钮,通过合理设计可以规避
jra,"投融资资产评估报的附件组件不是新版本组件，需要更新下 
1.资产评估处理时 加字段备份json;股权结构加字段存储附件id 
2.行业市场分析附件 
3.可研评审-评审意见或会议纪要 附件",使用低代码可以规避或通过配置解决
jra,填了出资方式，但是提示里面还有出资方式,通过代码review可以规避
jra,项目储备、决策审批中，有些字段需要设置必填项。如图标红字段,使用低代码可以规避或通过配置解决
jra,项目储备列表显示的跟表单里不一致的问题还存在，公司已经已经改名了,通过封装通用组件可以规避或通过配置解决
jra,"名称“关于天津航天中为数据系统科技有限公司20%股权收购项目” 
项目储备和年度计划中，都改为“天津航天中为数据系统科技有限公司20%股权收购项目” 

名称“关于天津航天中为数据系统科技有限公司10%股权协议转让项目” 
项目储备和年度计划中，都改为“天津航天中为数据系统科技有限公司10%股权协议转让项目” 
",通过合理设计可以规避
jra,"商密网数据后台修改。年中计划调整，如图 

陕西航天科技集团有限公司增资西安向阳航天材料股份有限公司修改本年度出资额为6000 
西安航天赛能自动化科技有限公司增资项目后台需把本年度投资计划修改为4000 
彩虹无人机科技有限公司增资扩股需把总投资修改为179000，我方出资0，本年计划出资0 
川南航天能源重组上市及配融项目*确认中**《项目总投资应为10000) 



",通过合理设计可以规避
jra,用户数据修改，项目储备GQW20230609185712557，替换可研报告，可研评审也要带出替换后的，,通过合理设计可以规避
jra,商密网。储备流程已经结束了，打开项目后，更新可研编制按钮仍可点,使用低代码可以规避或通过配置解决
jra,年中计划流程，二级单位已经录入了计划决策信息，现在流程被退回又重新到了二级单位，计划决策信息无法新增修改删除,无法规避
jra,商密网，项目的名称已经改了，但是流程名称中，还显示的旧名称，用户要求将相关流程中的名称改成新名称，如图,无法规避
jra,商密网，项目储备管理，流程图显示缺少滚动条，年中计划的也没有,使用低代码可以规避或通过配置解决
jra,项目实施流程到了工商登记节点，内容都填完后点提交报错，并且填过的内容都被清空,使用低代码可以规避或通过配置解决
jra,项目实施的公司章程签订，还有一大堆必填项每天也提交成功了。,使用低代码可以规避或通过配置解决
jra,决策与审批中，选择储备项目后，战略新型产业的数据没带出来,无法规避
jra,决策与审批数据更正，发起流程一直转圈,无法规避
jra,决策与审批数据更正，只是变动了一下标的公司股东里的出资方式，结果再打开看变更记录，显示了无关的变动,通过封装通用组件可以规避或通过配置解决
jra,"数据更正的待办。显示到投融资管理的待办里了 
wuyerj1",无法规避
jra,这个决策与审批流程结束了，但是没有好像没有触发项目实施流程，账号wuyerj1,无法规避
jra,决策与审批流程，这里会出现两条相同的数据，不知道怎么产生的，流程也是按照顺序走，没退回过,通过代码review可以规避
jra,年中计划数据更正中，标的公司股东本次出资，出资方式的变动不显示,无法规避
jra,"决策与审批数据更正，财务指标变更后显示乱码 
账号wuyerj1 
项目名称licunlong-测试105023-1012",通过封装通用组件可以规避或通过配置解决
jra,"决策与审批流程中，项目单位是四级单位，在四级单位决策页面提交请节点审完了后，到了三级审批，三级到了决策页面提交请节点，里面还默认已选了一个四级单位的，，是不是不应该出现。。 
224环境 
现在流程在wuysanj1",无法规避
jra,在决策与审批中，存在一个用户兼职几级单位，导致决策单位二三级易重复的问题,无法规避
jra,"项目储备管理流程中，上级单位填写决策信息后,什么都不选，点删除提示信息有误，应该和其他按钮一样，提示”请选择一条数据“",使用低代码可以规避或通过配置解决
jra,在项目实施中，决策与审批最后无法成功发起项目实施的待办,无法规避
jra,"左侧菜单顺序，波总让按照：储备、计划、可研、决策、实施 
",通过封装通用组件可以规避或通过配置解决
jra,"决策与审批数据更正，流程发起后，从待办人待办里点开，项目信息为空白 
账号wuyerj1",使用低代码可以规避或通过配置解决
jra,决策与审批数据更正，可研批复-批复备案信，文件显示乱码,通过封装通用组件可以规避或通过配置解决
jra,"在决策与审批中，可研评审信息显示不全，且仍可点击按钮新增 
账号：yueksjyh2",使用低代码可以规避或通过配置解决
jra,在项目决策中，已提交完的信息仍然可以修改,使用低代码可以规避或通过配置解决
jra,"决策与审批数据更正，发起流程提示“请录入可研评审数据并提交后再提交审批”，实际已有 

账号wuyerj1",无法规避
jra,决策与审批数据更正，股东如果从单位树上选择，选择后必填校验未及时移除。,使用低代码可以规避或通过配置解决
jra,点[股权投融资管理]--点【基础信息】，选【数据导出】，在条件区域，子系统只有一个（资产规划）备选项，是否合理？选择后，点导出，导出存在本地的文件不可以解压缩。提示报错文件丢失。,无法规避
jra,点[股权投融资管理]--点【项目储备】，基本信息页面，是否主业的值建议是“是/否”，目前是“主业/非主业”同下面的是否信息的录入方式保持一致,无法规避
jra,点[年度计划]--点【年度计划管理】，【新增】--“项目名称”不能选择,无法规避
jra,"点[股权投融资管理]--点【项目储备】，点【项目联系人】，提示：请选择..但是下拉列表没有内容供选择，并且也不支持录入。项目联系人为空不能提交流程。三级单位的人不能建流程吗？ 
",无法规避
jra,、点[股权投融资管理]--点【项目储备】，编辑页面建议将【保存】改为【暂存】,使用低代码可以规避或通过配置解决
jra,决策与审批数据更正，看不到流程已经结束的记录,通过封装通用组件可以规避或通过配置解决
jra,决策与审批流程点提交流程结束，提交成功的提示信息显示时间过长。大概十秒汇总才消失,通过代码review可以规避
jra,年中计划数据更正中，计划决策信息页签的记录无法修改也无法删除,通过合理设计可以规避
jra,年中计划数据更正中，已经发起流程的变更，点进变更记录中，同样的变更内容显示了两遍,通过封装通用组件可以规避或通过配置解决
jra,"
投资前标的公司注册资本(万) 
境内境外 
所属大洲 
国家/地区 
标的公司管理层级 
标的公司产权层级 
标的公司性质 
战略性新兴产业分类 
是否主业 
",通过封装通用组件可以规避或通过配置解决
jra,年中计划数据更正中，是否混合所有制，原数据为“是”，更正记录里显示为空,通过封装通用组件可以规避或通过配置解决
jra,年中计划数据更正中，标的公司股东出资方式由现金变为了现金、权益。但是变更后显示为空,通过封装通用组件可以规避或通过配置解决
jra,年中计划数据更正中，标的公司股东本次出资，变更字段和变更前后数据显示混乱,通过封装通用组件可以规避或通过配置解决
jra,年度计划数据更正中，中央企业投资项目分类。修改后不生效。,通过封装通用组件可以规避或通过配置解决
jra,年度计划数据更正中，股东信息只删了一条，但是走完流程后，记录里显示了两遍,无法规避
jra,年度计划数据更正中，流程发起后，再退回，再发起，操作列未变为查看。发起按钮仍可点击,通过封装通用组件可以规避或通过配置解决
jra,年度计划数据更正中，变流程审批人仍可新增计划决策信息和编辑项目信息，应该禁止,无法规避
jra,"年度计划数据更正中，变更记录排序时间太乱，最新一次变更的排到了中间，建议按照时间顺序展示。 

另外，变更流程已走完，变更记录右侧状态还是未生效",通过合理设计可以规避
jra,年度计划数据更正中，变更记录如果涉及到换行的字段，把换行符也显示出来了，看起来有点乱,通过封装通用组件可以规避或通过配置解决
jra,年度计划数据更正中，将项目金额修改为不符合校验规则的数据后点发起流程仍可发起流程,使用低代码可以规避或通过配置解决
jra,投融资年中计划更正，点发起流程一直转圈。,无法规避
jra,我在年度计划数据更正中，为什么找不到我刚才新建的计划，已经审批结束，并且下达。账号wuyerj1,自动化测试可以规避
jra,224上，年度计划下达时候，让上传了一个通知文件，但是收到通知的人没有地方可以查看到该文件,自动化测试可以规避
jra,224上 年中计划从储备库了里选了之后发起流程报错，如图，账号wuyerj1,无法规避
jra,付款计划行数超过窗口高度后，未出现滚动条，看不到下面的内容,使用低代码可以规避或通过配置解决
jra,"1 “公司变动”内只有公司显示，没有对应的变动数据（完） 
2 在“公司信息”中未找到上树更新的公司（完） 
3 新设的公司成功上树，增资的未找到上树数据（完） 
4 “公司新增”中董监高数据重复带入相同的两条 
5 董监事人员更新数据未在“董监事管理（任职单位）”中显示",无法规避
jra,项目实施的投资协议签署页签，点新增投资方及股东信息，这个选择界面中，字典项都没显示汉字，显示的编码,使用低代码可以规避或通过配置解决
jra,项目实施的投资协议签署页签，投资方及股东信息有必填标识，但是不新增也能提交成功,使用低代码可以规避或通过配置解决
jra,项目实施的投资协议签署页签，点新增投资方及股东信息，里面有一条记录，切换完页签就变成两条了,使用低代码可以规避或通过配置解决
jra,"决策与审批流程中填写了“向上级单位上报请示文件或备案报告”流程结束后，再查看该表单，不显示当时填过的内容 

“指定项目实施单位及资产评估备案”不需要在流程结束后能查看吗？这个页签结束后的流程也不显示 

补充：从决策与审批列表中打开不显示，从我的已办中打开是显示的，另外还多显示了“重大项目评估”页签。当时填写的时候没弹出过这个页签",无法规避
jra,项目实施阶段，项目信息缺少项目名称字段,无法规避
jra,"项目实施流程，发起人为啥显示李冬，，全程也没用到这个用户 

项目编号GQW20231010113749972",通过合理设计可以规避
jra,商密网，实施流程流转到最后一步时候，发现之前填写的两个页签内的内容都没了@刘凇赫·纯情少男 ,自动化测试可以规避
jra,年度计划流程中，上级单位填写计划决策信息保存后点删除提示非本人数据。,通过封装通用组件可以规避或通过配置解决
jra,年度计划，计划决策信息中，什么都没选时候，应该禁用删除按钮。,通过封装通用组件可以规避或通过配置解决
jra,年度计划里引用了一个项目，点了下保存，状态就变成审批结束。再打开为只读。无法稳定复现，但是已经出现三次了,无法规避
jra,发起年度计划时候，录入计划决策信息时候，提交后的计划决策信息，点修改附件区仍可进行编辑，编辑后再打开才变成只读，应该提交后禁止修改。或者点修改后里面内容都默认只读。,使用低代码可以规避或通过配置解决
jra,项目储备流程分阶段论述可研页签出现的节点不对，还没到初步可研填写就出现了。,使用低代码可以规避或通过配置解决
jra,项目储备管理，标的公司是外部，股东新增空行后没法删除。,无法规避
jra,在项目储备中，应在各级业务主管提交上级审查意见，目前均在主管领导处，应改为业务主管,无法规避
jra,商密网，储备管理，相关部委文件号，录入的时候没有。到了待办中突然就有了。,通过封装通用组件可以规避或通过配置解决
jra,年度计划流程，到集团业务节点卡住了，这里只有修改和删除，没有新增按钮。。没法新建计划决策信息。,通过需求确认演示可以规避
jra,"测试账号：乐凯胶片（三级） yueksjyh2 Asdf098765!! （√） 
测试日期： 2023年9月27日 

1、用 乐凯胶片登录，显示的登录名建议是 乐凯胶片（三级） 
",无法规避
jra,224上，年度计划管理，引用储备后，发起流程提示“本次出资额(人民币)之和与项目总投资额(人民币)不符”。也没涉及外币,使用低代码可以规避或通过配置解决
jra,项目储备管理流程中，上级单位填写决策信息后点修改提示非本人数据。,无法规避
jra,决策与审批中，项目决策信息最下面的校验没有及时移除。流程提交不了,使用低代码可以规避或通过配置解决
jra,"进场交易--交易方确认需求 
1、投资人信息的列表需要从意向方确认中带出合格意向方，在列表显示，其中交易方名称、意向交易金额、交易方性质、主营业务信息带出来后不允许修改。成交金额（万元）、对应新增注册资本（万元）、对应持股比例或股份数 用户填写。 
2、投资人信息的列表信息需要增加删除功能，能够让用户删除行。 
3、基础信息中实际交易金额(万元)应等于成交金额（万元）合计值。实际交易持股比例或股份数应等于对应持股币或持股数。 


期望结果或改进建议：",通过需求确认演示可以规避
jra,"项目储备流程结束前将可研编制更新了，流程结束后，决策与审批调用该项目，带出的可研编制不是最新 
",无法规避
jra,项目实施流程到了交易方最终确认环节，交易方确认信息必填校验未及时移除，择优方式选择后不显示。流程无法提交,使用低代码可以规避或通过配置解决
jra,"测试账号：乐凯胶片（三级） yueksjyh2 Asdf098765!! （√） 
测试日期： 2023年9月27日 

18、点【决策与审批】，点【导出】，选“全部数据”导出的文件几乎都是乱码，且没有表格边框。待优化导出功能。另外，建议规范文件名，文件名建议由需求确定。",通过封装通用组件可以规避或通过配置解决
jra,"测试账号：乐凯胶片（三级） yueksjyh2 Asdf098765!! （√） 
测试日期： 2023年9月27日 

17、点【项目实施管理】-点【项目实施】，点【导出】，可选的导出列只有2个.是否合理？选“全部数据”导出的文件几乎都是乱码，且没有表格边框。待优化导出功能。另外，建议规范文件名，文件名建议由需求确定。",通过封装通用组件可以规避或通过配置解决
jra,"测试账号：乐凯胶片（三级） yueksjyh2 Asdf098765!! （√） 
测试日期： 2023年9月27日 


13、点【计划管理】--【年度计划】，点一个单位后展开的列表，点【导出】，选“当前页面”导出的文件几乎都是乱码，且没有表格边框。待优化导出功能。另外，建议规范文件名，文件名建议由需求确定。目前叫：年度导出，看不出文件特征。 
14、点【计划管理】--【年中计划】，点一个单位后展开的列表，点【导出】，选“全部数据”导出的文件几乎都是乱码，且没有表格边框。待优化导出功能。另外，建议规范文件名，文件名建议由需求确定。目前叫：年中导出，看不出文件特征。 

15、点【计划管理】-点【计划下达】，点一个单位后展开的列表，查询条件“项目阶段”、“是否下达”没有选项可供用户使用。目前是空值。 

16、点【计划管理】-点【计划下达】，点【导出】，可选的导出列只有一个“计划文件是否下达”，是否合理？选“全部数据”导出的文件几乎都是乱码，且没有表格边框。待优化导出功能。另外，建议规范文件名，文件名建议由需求确定。",无法规避
jra,"测试账号：乐凯胶片（三级） yueksjyh2 Asdf098765!! （√） 
测试日期： 2023年9月27日 

2、点【项目储备管理】，无下级单位的父级单位建议不出现“△”展开图标 
3、点【项目储备管理】，点一个单位后展开的列表，“审批状态”这个信息最重要，建议将“审批状态”放在第一列。 
4、点【项目储备管理】，点一个单位后展开的列表，点【导出】，选“当前页面”导出的文件几乎都是乱码，且没有表格边框。待优化导出功能。另外，建议规范文件名，文件名建议由需求确定。 
5、点【项目储备管理】，点一个单位后展开的列表，点【修改】，点【项目信息】---【行业市场分析】点【新增】，“行业市场分析报告附件”传一个word。返回到前页面，点【预览】附件，系统提示：该插件不受支持。 
6、点【项目储备管理】，点一个单位后展开的列表，点【修改】，点【建议书编制】---在“建议书名称”传一个word，文件名和操作按钮合并在一起展示了，重叠显示不清晰。此文本框要加宽到目前的3倍。 
7、用“乐凯胶片（三级） yueksjyh2”账号进入，点【项目储备管理】点开“乐凯医疗科技有限公司”显示数据是61条，点开其下级单位“成都分公司”显示数据条数是24条，点开其下级单位“四川xx有限公司”显示数据条数是0条，请问这两个下级单位总数为何不是61呢？",无法规避
jra,从待办中打开项目实施申请。填写完进场交易信息，不小心切换了下项目信息页签，进场交易信息就被清空了,使用低代码可以规避或通过配置解决
jra,从待办中打开实施申请项目，项目信息中，上级单位审查已经丢失。,使用低代码可以规避或通过配置解决
jra,决策与审批步骤，决策前置审议会议信息。加了个空行也可绕过校验,使用低代码可以规避或通过配置解决
jra,在项目实施董监事录入中，任职单位未带入且为空,无法规避
jra,在项目实施公司章程中，导入字段按钮无用处则删除,使用低代码可以规避或通过配置解决
jra,决策与审批，到了10填写向上级国家机关的项目请示信息（批复界面)节点。待办人打开以后多了签收/反签收按钮。发文单位必填校验未及时移除,使用低代码可以规避或通过配置解决
jra,决策与审批，列表排序规则混乱，最新录入的应该排到最上面。参照项目储备中那样,通过合理设计可以规避
jra,项目编号GQW20230925172031996决策与审批流程无人可选,无法规避
jra,在项目实施投资协议签署中，协议金额和协议属性字段需删除,通过需求确认演示可以规避
jra,在项目实施进场交易中，挂牌编号、拟募集资金金额（万元）字段需设置必填项,使用低代码可以规避或通过配置解决
jra,在进场交易中，直接终止挂牌-未征集到意向方这里部门领导审批时项目信息是空白的，而且审批通过点提交显示是排他网关，按理来说应该是结束,无法规避
jra,在公司新增中，新设公司的新增查不到,无法规避
jra,在项目储备中，可研编制和可研评审 这两个地方的风格不一样，可研评审可直接点链接查看，可研编制是否可以跟可研评审保持风格一致。,使用低代码可以规避或通过配置解决
jra,在进场交易交易方确认处，对应新增注册资本、意向交易金额、实际交易金额应在后面加上（万元）。,使用低代码可以规避或通过配置解决
jra,挂牌公示处，投资协议签署其中的标的公司信息自动带出。,通过代码规范可以规避
jra,给公司回写的是单位变动记录时，需要回写变动原因和关联的投融资项目编号两个字段。,无法规避
jra,对于项目类型是新设的项目，工商登记完成后，在回写记录中需要增加“新增类型”、“关联的投融资项目”字段，其中新增类型默认为投资新设，关联的投融资字段引用的是项目编号。,自动化测试可以规避
jra,在年度计划中，流程出现无法提交，且显示当前任务不存在，可能已被提交、取回或删除,无法规避
jra,在公司新增中，项目实施新设公司标的公司在公司新增中未增加,无法规避
jra,在决策与审批中，相应信息未带出来。,无法规避
jra,在决策与审批中，设置相应字段应为字典：通过/不通过,通过需求确认演示可以规避
jra,在决策与审批中，决策审批阶段引入的数据需要把前面的页签全部显示出来，目前系统需要用户去点暂存后，才能显示页签，应该为选完项目，这两个页签就显示出来，但显示出来以后要控制一下新增，更新按钮,通过合理设计可以规避
jra,在决策与审批中，流程退回给填报人了，填报人打开代办填不了信息。另外 已经是填报人节点了 还有退回提交人按钮,使用低代码可以规避或通过配置解决
jra,在项目实施进场交易中，提示信息不完整，用户无法核验,使用低代码可以规避或通过配置解决
jra,E.当挂牌结果选择“挂牌终止-未征集到意向方”时，发起流程时需要给出提示，提示信息为“该项目将设置为关闭状态，不允许开展后续实施工作。可在流程已办或我的项目中查看项目信息”，用户选择“继续提交流程”或“返回修改”，当选择“继续提交流程”是直接进入下一节点选人界面，提交部门领导审批，当选择“返回修改”时，回到“挂牌结果及意向方确认”页面。部门领导收到待办时，打开表单时，系统自动提示“挂牌终止未征集到意向方的项目审批通过后将自动关闭，不允许开展后续实施工作，请审批。”，部门领导审批通过后，项目实施的流程结束。,使用低代码可以规避或通过配置解决
jra,在决策与审批中，进场交易字段不要默认为否，用户会不自觉默认，无法进入进场交易，不要设置默认，且提示信息需要修改为: 项目信息页签中“是否进场交易”信息项不能为空,无法规避
jra,在决策与审批中，提示信息需要修改： 请录入本单位项目决策信息后再发起流程。,通过封装通用组件可以规避或通过配置解决
jra,在项目实施进场交易中，相关字段未设置必填项,使用低代码可以规避或通过配置解决
jra,在项目实施中，对应新设、增资的项目在公司基本信息中无变更记录,无法规避
jra,在项目实施中，必填项为空仍能提交，必填项应做提示并且空的话不能提交,使用低代码可以规避或通过配置解决
jra,在项目实施中，进场交易、投资协议签署页签最终未带入,无法规避
jra,在项目实施中，公司章程中对应职权项未显示,无法规避
jra,在决策与审批中，协议类型根据项目分类，自动赋值,无法规避
jra,在项目实施阶段，需要把项目信息、可研编制、可研评审、项目决策、项目批复、协议签署页签显示。,通过封装通用组件可以规避或通过配置解决
jra,在决策与审批中，项目实施阶段的流程跟踪显示错误，显示的是决策审批的流程。,使用低代码可以规避或通过配置解决
jra,决策批复页签没有带出来，资产评估报告备案页签名称改为“指定项目实施单位及资产评估备案”,使用低代码可以规避或通过配置解决
jra,在决策与审批中，实施单位的控制条件有问题，对于新设公司，实施单位可以是项目单位、主管单位和投资主体单位，投资主体单位只能是集团内的单位，集团外的不应显示。,无法规避
jra,在决策与审批中，二级单位审批的项目，相关部门意见征集、相关部门意见答复在我的代办中应不显示。项目批复信息中的上传批复文件改为必填项。,使用低代码可以规避或通过配置解决
jra,在决策与审批中，项目备案名称改为“项目备案通知”。集团填写备案通知信息，项目备案时间、备案单位应设置为必填项，且未填写信息时，需要提示：请填写备案信息。备案单位根据上个节点的信息自动判断备案单位，并自动填写。,使用低代码可以规避或通过配置解决
jra,在决策与审批中，二级单位给集团的备案信息 没有做控制，当没有填写信息，直接提交时，应提示：请填写上报集团的备案信息，该节点页面应显示表单而不是列表，另外类型默认为备案，信息项全部为必填项。,使用低代码可以规避或通过配置解决
jra,在决策与审批中，二级单位填写决策页面，提示信息应改为：请填写决策信息和决策前置会议信息。,使用低代码可以规避或通过配置解决
jra,"向上级单位上报请示文件或备案报告。 
标星的需要增加必填校验，用户没有填写信息提交时需要提示，请填写请示信息或备案信息。目前没有做提示信息。 
",使用低代码可以规避或通过配置解决
jra,在决策与审批中，决策单位和决策管理层级应自动带出。,无法规避
jra,在决策与审批中，上级单位填写决策页面，提示信息需要改成：请填写本单位项目决策信息和决策前置会议信息。,使用低代码可以规避或通过配置解决
jra,项目储备中应增加校验条件：当投融资后集团是否具有实际控制权=“否”时，项目分类应选参股投资集团公司范围外的公司,使用低代码可以规避或通过配置解决
jra,在决策与审批中，节点14填写专家信息评估没有跳转出相应页签,无法规避
jra,在项目实施投资协议签署中，计划付款时间自动计算根据选择的时间类型、数量、单位自动填写,无法规避
jra,在项目实施协议签署中，必填项未设置完整,使用低代码可以规避或通过配置解决
jra,在重新挂牌中，挂牌编号未显示,无法规避
jra,在项目实施部门领导审批中，公司章程和董监高填写的信息没有带入显示,无法规避
jra,在项目实施董监事中，免职按钮未加入,无法规避
jra,在进场交易意向方确认中，交易方名称无选择，输入不了,无法规避
jra,"
在进场交易中，意向方最终确认产权交易凭证需改成上传操作",使用低代码可以规避或通过配置解决
jra,在进场交易中挂牌公式中，挂牌结果字典不对，与需求文档不一致,自动化测试可以规避
jra,在项目实施董监高中，缺少董事信息，缺少新增删除修改免职功能按钮,通过需求确认演示可以规避
jra,在项目实施公司章程中，经理层页签需要删除，目前未删除,通过需求确认演示可以规避
jra,在项目实施公司章程中，文件历史版本显示需删除，制定日期字段应该为“制定/修改日期”,通过需求确认演示可以规避
jra,在项目实施中，付款计划子表里的单位字段应该有字典日、月，目前没有字典，需要修改,通过需求确认演示可以规避
jra,在项目实施中，本次投资金额和本次出资金额，无法选择外币，且没有分为四个种类，需要按照需求文档修改,通过需求确认演示可以规避
jra,在项目实施中，投资方及股东信息列表字段中的“付款计划”写错了，写成了出资计划，需要修改,无法规避
jra,在项目实施中，协议基本信息-协议文件改成“协议文件（带公章）”，目前是协议文件（带签章），写错了,无法规避
jra,在项目实施中，投资协议签署协议类型字典内容不全,使用低代码可以规避或通过配置解决
jra,在决策与审批中，节点六缺少前置会议信息显示,通过需求确认演示可以规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,在决策与审批中，决策页面没有带入可研报告信息，没有项目批复页签,无法规避
jra,"复现步骤： 

决策与审批页签当引入项目信息时，可研编制、可研评审、项目决策页签应全部显示，目前是需要点击暂存后才能显示。 

期望结果或改进建议：",通过合理设计可以规避
jra,"复现步骤： 
深化可研，从项目储备中引入项目信息后，应把可研编制和可研评审页签全部显示。 

存在的问题： 

期望结果或改进建议：",通过合理设计可以规避
jra,"复现步骤： 
提示信息需要修改成： 
请录入本单位计划决策信息，并在项目信息页面发起流程 
存在的问题： 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 

存在的问题： 

提示信息需要修改，见附图 
期望结果或改进建议： 提示信息改成：请在”上级单位审查意见“区录入本单位的审查意见",使用低代码可以规避或通过配置解决
jra,在项目储备中，行业市场分析新增按钮无法点击,使用低代码可以规避或通过配置解决
jra,查询问题-共性-高级检索，条件行数超出页面的无法滚动。,通过封装通用组件可以规避或通过配置解决
jra,查询问题-年中计划管理-高级检索，年度查询条件弹出控件设置错误。年度查询条件弹出的选日期的控件，年中计划中，年度查询条件是单位控件,通过封装通用组件可以规避或通过配置解决
jra,高级查询问题-年中计划管理-全部导出后excel表数据记录数跟列表不一致。列表中有84条数据，全部导出后excel里有129条,通过封装通用组件可以规避或通过配置解决
jra,"数据治理报表——股权投资项目详细信息统计（公司治理），持股类型查询条件不生效。问题2：是否涉及员工持股查询条件，点重置后不清空。 

例如，持股类型中有数据为员工持股，从查询条件里选择后，点查询，结果为空",无法规避
jra,年度计划，导出的数据中，项目分类显示不全。,通过封装通用组件可以规避或通过配置解决
jra,数据治理报表——股权投资项目详细信息统计（公司治理），是否涉及员工持股，持股类型。查询时进入假死状态,通过代码review可以规避
jra,年度计划和年中计划，导出的数据中，所属板块显示不准，里面有很多为空的，但是表单上不为空,通过封装通用组件可以规避或通过配置解决
jra,"数据治理报表——XXX年股权投资计划执行情况表（公司治理），数据有问题。 

一院2021年审批结束的计划系统里有8条，报表里显示2条，导出后计划投资总额合计42480。跟报表上不符。是不是表单上的数据跟台账不一致，报表取的台账的数据",无法规避
jra,"数据治理报表——股权投资项目详细信息统计（公司治理） 
1。计划年度，里面的提示信息显示错误 
2。给计划年度默认当前年 
3。把是否只显示本级，位置调到第一个。",无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），持股类型都没取到数,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），产权层级都没取到数,无法规避
jra,数据治理报表——股权投资项目类型分类统计表，左右比例不一致。,无法规避
jra,数据治理报表——境内境外股权投资完成情况表（公司治理），经波总确认，年度要取决策年度。,无法规避
jra,数据治理报表——境内境外股权投资完成情况表（公司治理），合计小数位异常，下面的明细没有个小数位超过两位的，但是合计超过了。,通过封装通用组件可以规避或通过配置解决
jra,数据治理报表——股权投资项目详细信息统计（公司治理），表单上没有持股比例，持股员工人数，报表上却有,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），只有一条数据为是？取的哪个字段的值，如图,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），每页显示数超过十条分页栏错位,通过封装通用组件可以规避或通过配置解决
jra,数据治理报表——股权投资项目详细信息统计（公司治理），投资额合计没加对，取数有点乱，，表单上没有的数据，报表上取的数不知道是哪里来的，如图,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），可研批复文号、批复时间没取到数,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），省市未正确显示,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），决策年度没取到数,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），一院通过审批的有33条，报表为何只取了14条,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），单位名称列取了标的公司名称， 是否应该取主管单位名,无法规避
jra,数据治理报表——股权投资项目详细信息统计（公司治理），查询条件中，手动输入的公司名称查询不到。,通过封装通用组件可以规避或通过配置解决
jra,数据治理报表——股权投资项目详细信息统计（公司治理），点重置再点查询，行高会乱,通过封装通用组件可以规避或通过配置解决
jra,数据治理报表——股权投资项目详细信息统计（公司治理），列宽无法拖拽，比较长的数据显示不全，不方便查看,通过封装通用组件可以规避或通过配置解决
jra,数据治理报表——XXX年股权投资计划执行情况表（公司治理），决策执行率格式不统一,无法规避
jra,数据治理报表——XXX年股权投资计划执行情况表（公司治理），单位出现了空白的数据,无法规避
jra,数据治理报表——XXX年股权投资计划执行情况表（公司治理），个别批复金额有数，未被取到，如图,无法规避
jra,数据治理报表——XXX年股权投资计划执行情况表（公司治理），我方计划投资金额取不到数,无法规避
jra,数据治理报表——XXX年股权投资计划执行情况表（公司治理），查询条件中缺少状态,无法规避
jra,数据治理报表——股权投资项目类型分类统计表，单位显示了全级次，需求中只要求显示本级和下级。股权投资项目类型分类统计表也存在此问题,无法规避
jra,数据治理报表——股权投资项目类型分类统计表，无查询条件,通过封装通用组件可以规避或通过配置解决
jra,数据治理报表——境内境外股权投资完成情况表（公司治理）没有是否包含下级的选项,通过封装通用组件可以规避或通过配置解决
jra,没有数据，乐凯下已经有项目录了决策与审批批复金额，并结束了流程,无法规避
jra,"数据治理报表——境内境外股权投资完成情况表（公司治理） 

存在的问题： 
没有查询条件。",无法规避
jra,在年度计划中，股东性质应设置为必填项，不能为空，目前系统中仍存在较多为空通过校验的项目，需改进校验规则,使用低代码可以规避或通过配置解决
jra,在年度计划中，出资方式不能为空，应设置为必填项，目前系统中人存在较多为空且通过校验的项目，需对校验规则进行改进。,使用低代码可以规避或通过配置解决
jra,“航天外股东合计投资额（万）”名称改成“集团外股东合计投资额（万）”,使用低代码可以规避或通过配置解决
jra,"
出资前控股关系和出资后控股关系的字典修改为“全资、控股、参股、其他”，原字典中的“去掉实际控股，和无实际控制人选项，无实际控制人中的数据全部刷到“其他”里。",无法规避
jra,在年度计划中，出资前控股关系应设置为必填项，不能为空，目前系统中仍存在为空且校验通过的项目，需改进校验规则。,无法规避
jra,在年度计划中，当【项目分类】=“新设公司”时，标的公司股权结构中 出资前股东占标的公司注册资本（万）、出资前股东所占股比自动填写为0，不允许修改，控股关系自动填写为“无关联”，不允许修改。,无法规避
jra,在年度计划中，【项目总投资额（万）】应等于【本次出资金额】之和，目前系统中仍存在两者不相等校验通过的项目，需要改进校验规则。,通过需求确认演示可以规避
jra,决策与审批中的【批复单位】默认为“项目单位的主管单位”,无法规避
jra,决策与审批中，地级市/自治区/州/盟必填项不能为空,使用低代码可以规避或通过配置解决
jra,决策与审批中，当【项目分类】=“新设公司”时，标的公司股权结构中 出资前股东占标的公司注册资本（万）、出资前股东所占股比自动填写为0，不允许修改，控股关系自动填写为“无关联”，不允许修改。,无法规避
jra,"决策与审批中，当【是否涉及员工持有股权】=“是”时，【持股类型】、【持股形式】、【员工持股人数】、【员工持股比例】需要设置成必填项。 
",使用低代码可以规避或通过配置解决
jra,决策与审批中，【出资前/后股东占标的公司注册资本（万）】计算合计值，需校验与【投资前/后标的公司注册资本（万）】相等,使用低代码可以规避或通过配置解决
jra,项目分类为减资时，净现值(税后)(万)、内部收益率(税后)、动态投资回收期设为非必填项(年),使用低代码可以规避或通过配置解决
jra,决策与审批-项目批复页签中的【请示文件或备案报告 】、【发文号】、【发文单位】、【发文时间】、【上报请示（备案）报告日期】不能为空，应该将其均设为必填项,使用低代码可以规避或通过配置解决
jra,在年度计划中，当【项目分类】=“新设公司”时，【投资前标的公司注册资本】应为0,使用低代码可以规避或通过配置解决
jra,投融资管理中“净现值”需允许填写负数。,使用低代码可以规避或通过配置解决
jra,"项目批复带出规则调整： 

项目类型 等于 股权融资（集团公司外部），取集团外的本次出资金额到项目批复（包含本次出资金额为0的记录）。 
项目类型 不等于 股权融资（集团公司外部），取集团内的本次出资金额到项目批复（包含本次出资金额为0的记录）。 
",无法规避
jra,五院周雯反馈，“集团公司重点关注区域”很多项目为空白，还需要手动修改增加工作量。需要后台统一处理一下,无法规避
jra,"已经跟斌姐确认过 
",通过需求确认演示可以规避
jra,年度计划，列表总数230条，导出的excel里有324条,通过封装通用组件可以规避或通过配置解决
jra,数据治理总览，投融资计划和年度计划列，点击蓝色字打开详情后，列名称没显示汉字,通过封装通用组件可以规避或通过配置解决
jra,决策信息页签中的 “决策文件、法律意见书、决策单位、决策单位管理层级” 设置为必填项。,使用低代码可以规避或通过配置解决
jra,当项目分类为股权融资和减资项目时，内部收益率(税后)、动态投资回收期(年)、净现值(税后)(万)设为非必填，并且置灰。,使用低代码可以规避或通过配置解决
jra,标的公司中的 产权层级改成“标的公司产权层级”，布局放到管理层级后面。,无法规避
jra,标的公司性质中的“国有独资公司”应置灰，不能被选。自然人选项需隐藏不显示。,使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1)决策与审批（新）-项目信息填写完成，可研编制，可研评审，项目决策，项目批复也已填写，并且已点击暂存，再到项目信息点击【提交流程】，提示项目批复校验不通过，再一次回到项目批复页签，发现已填写得：决策年度，批复日期，批复文号都没有保存上。 
2) 

存在的问题： 项目批复页签程序有问题，存不上值 

期望结果或改进建议： 建议修改",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 决策审批信息（新）-功能，引用完储备中得项目时，发现-项目信息中【重点业务领域】得值没有代入过来 
2) 见1图 

存在的问题： 没有取过来数据，刚觉程序少参考值了，有漏洞 

期望结果或改进建议： 建议正确代入，",通过合理设计可以规避
jra,"复现步骤： 
1) 项目储备管理新-添加了新储备项目，流程已走完，单据中【重点业务领域】中已选择有值，但是在深化可研信息中参照过来得项目中，发现【重点业务领域】值已丢失。 
2) 见图，我得单据号：GQW20230811102126428 

存在的问题： 参照后发现关键字段数据数据丢失 

期望结果或改进建议： 建议修改，查找原因，避免在丢失",无法规避
jra,"复现步骤： 
1) 项目储备管理新-展示页面中，有一个：【集团内项目投资总额外币 】，但是在【项目储备管理】得名字是：【集团内项目投资总额（万）】。不知道新得里面是取错了还是需求新要求了 
2) 

存在的问题： 感觉取错了 

期望结果或改进建议： 期望石波和经纬落实",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 项目储备管理新-高级检索-项目分类等于新设公司时，没有过滤出来数据。 
2) 问题2，项目分类字典中没有一般项目。可是列表中展示有了。 

存在的问题：问题1：没有给项目分类匹配正确的值，问题2：取值字典值不对 

期望结果或改进建议： 建议修改",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 项目储备管理-当我是集团人员代二级单位填写储备项目，并且项目类型选择：二级单位审批，项目储备类型：分阶段论述项目，审核方式：直送二级单位审查，时，发现初步可研填写的下一个节点【部门领导审批】变为了集团部门领导，应该是项目单位部门领导。 
2) 具体见图，有审批历史中可以看到填写人员和审批人员，有流程图，可以看到流程节点。也有具体项目选择的审批到二级节点。 

存在的问题： 当选择分阶段论述项目时，初步可研填写的下一节点应该是对应项目单位部门领导，目前对应的填报人（代填人）的部门领导。导致代填时出现流程中非项目单位部门领导。 

期望结果或改进建议： 应该同需求一直，取项目单位对应部门领导审批",无法规避
jra,"复现步骤： 
1) 项目储备新-【导出】功能，【标的公司产权层级】没有导出数据，并且出现了本位币是人民币的，导出了几个外币字段 
2) 具体见图 

存在的问题： 

期望结果或改进建议：",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 项目储备管理新-新增的项目，表中的【项目储备类型、项目类型、审核方式、审批状态】显示内容均变为了数字，并且还多出来一个【主键】字段在表中了。不应该显示主键 
2) 

存在的问题： 目前项目储备管理新 的功能表中展示内容有错误了， 

期望结果或改进建议： 建议取字典中的汉字给映射出来",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 分红管理-控股分红收益查询新-导出功能，选择了所有字段，但是没有导出页面数据，具体见图 
2) 

存在的问题： 选择了全部数据和全部字段，没有具体导出数据值。 

期望结果或改进建议： 建议修改查程序",通过封装通用组件可以规避或通过配置解决
jra,在左侧单位树上，从一个有明细行的单位，点到没有明细行的单位，通过率没有及时更新。,无法规避
jra,测试数据GQW20230807154802281，项目总投资和本次出资额合计是相等的，但是没通过校验,无法规避
jra,显示符合规则。但是未通过校验数量显示6,无法规避
jra,投融资里很多列都不显示汉字了,通过封装通用组件可以规避或通过配置解决
jra,项目分类为股权融资，项目总投资额就被隐藏了，导致校验不通过,使用低代码可以规避或通过配置解决
jra,从项目储备列表中打开流程追踪，没有滚动条。,使用低代码可以规避或通过配置解决
jra,商密网，年度计划治理结果中有重复校验,无法规避
jra,数据问题提示，没有滚动条显示不全。,使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 我的待办-待办列表，已办列表中，表头【发起单位】显示的是部门而不是发起单位 
2) 

存在的问题： 显示内容与表头内容不符。 

期望结果或改进建议： 建议修改",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
224上 发起流程，取回后，再提交，弹窗提示“1”，但是不影响流转 
期望结果或改进建议：",通过代码review可以规避
jra,"
用户解俊华提出建议，建议已办中重复的只显示一条。或者有去重显示功能。实际使用中需要统计自己办了多少个流程。但是有的流程可能会显示多条已办，导致不好统计。 

",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
高级查询，决策与审批的高级查询。自定义导出字典只导出了编码，如图，不便于用户阅读。其他模块的高级查询也有类似的问题 
期望结果或改进建议：",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
高级查询，常用查询条件点删除没反应，下面的也显示不全，如视频 
期望结果或改进建议：",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
高级查询，项目分类查询条件应该是下拉字典 
期望结果或改进建议：",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
高级查询，是否主业查询条件应该是下拉字典 
期望结果或改进建议：",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
高级查询查询框输入文字会有一个气泡框一直加载中 
期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
如图，现在已经退回没法复现了，GQW20221020144422618 
期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
年中计划管理列表中，调整类型字典显示不全 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 商米网 账号 18210848477 
2) 年中计划调整，点击我的代办或我的已办 
表单中缺少投资计划调整类型字段 

存在的问题： 

期望结果或改进建议： 增加投资计划调整类型字段，布局跟年中集团填报表单一致",无法规避
jra,"江苏航天水力设备有限公司增资扩股 
账号 13051962911 
决策与审批找不到人 
图中信息带不过来 
决策与审批 可研编制无法更新可研报告",无法规避
jra,"复现步骤： 
1) 名称和框不在同一水平中 ，请检查储备，计划中是否还有这样的情况一并处理 
2) 

存在的问题：文件和填写框 没有对齐 

期望结果或改进建议： 建议把储备、计划中的都进行检查。一并修改。",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 储备库信息、计划管理中可研报告及相关附件中的可研报告名称不能带有上传报告文档的后缀名称，具体见图片 
2) 

存在的问题： 没有判断和截取 

期望结果或改进建议： 建议可研报告名称展示的名字不要代后缀。储备和计划一并彻底修改",使用低代码可以规避或通过配置解决
jra,"评审信息页面，可研报告名称，项目可行性研究报告整行展示； 
2、评审页面底部空白过大",使用低代码可以规避或通过配置解决
jra,"1、投融资表单的按钮，调整到图中2的位置，级联单位相关的，调整到1的位置，计量单位的位置调整后，高度要和标题一致，其他有同样布局要求的都按这个格式调整（1.png）,部分表单内的布局已经调整，还有其他没用调整完成的，尽快完成处理； 
2、表单底部的按钮间距间距10px,其他页面，统一都确认下，部分涉及可研报告，决策，批复页面的都有此类问题，属于上次样式调整的遗留问题； 
",使用低代码可以规避或通过配置解决
jra,目前发现，行业市场分析、计划下达的通知公告，内容还有居右展示的，应该调整为居左展示；,使用低代码可以规避或通过配置解决
jra,"1、列表中的内容，超出设定的最小长度的内容，设置在内容后最后增加...，鼠标悬浮后，可提示完整内容（1.png）,此要求限定投融资所有列表展示，包括表单内的列表展示； 
2、列表内容不折行显示2.png,编制单位（所有单位/股东名称）最小宽度260px,居左,,此要求限定投融资所有列表展示，包括表单内的列表展示； 
3、2.png报告日期和版本号，占用最小列宽，把空间留给更新原因和可研报告名称 
4、表单内的附件字段，不要设置表单只读，否则表单内附件无法下载（3.png）,此问题，对投融资内所有的的附件全面做验证； 
5、可研编制报告，调整为整行，这个是常用的附件，附件内容显示不完整，原来还是附件占用整行，不知道什么时候调整为一半的空间了",使用低代码可以规避或通过配置解决
jra,该问题在商网该用户账号下可复现，224无法复现,无法规避
jra,"复现步骤： 
1) 储备管理库信息中的【标的公司股权结构】中的表头展示不整齐； 
2) 

存在的问题： 在流程中的储备管理库的【标的公司股权结构】数据丢失，并且表头展示不整齐。 

期望结果或改进建议： 1、找回丢失的数据，2、表头调整整齐",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 我的已办 流程图打开时不能全屏展示，下面没有滚动条。所以无法全部看到流程走向。 
2) 

存在的问题： 展示不全，不是所有的人都是是大屏幕 

期望结果或改进建议： 屏幕下方需增加滚动。",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 项目储备库信息，对已经在流程中得储备项目没有提示填写单位审查意见，但是我可以新增，新增后发现删除不了，但是删除按钮又是可以点击，但是点击删除也删除不 
2) 如果没有到节点，按钮应该是置灰，如果到到节点，删除按钮应该是可以删除填写得信息， 

存在的问题： 没有到节点可以新增，没有控制，删除按钮可以点击，但是无法删除，程序上应该是处理不完整。 

期望结果或改进建议： 建议删除按钮可以执行删除指令。新增按钮到节点可以新增，其他时间置灰新增",无法规避
jra,"复现步骤： 
1) 三级单位新增储备项目，流程启动到三级单位领导时，发现没有下一个节点，也没有可选择得人员问题。（bug） 
2)三级单位权限已分配有单位领导，本次有3个单位都出现次问题，并且都是到三级单位领导得时候走不下去得情况。（bug） 
3）经过退回到三级单位部门领导，发现审批历史信息全部被丢失。（bug） 
4）退回是退回到三级单位部门领导，没有到三级单位业务主管（即提单人），但是三级单位业务主管在我得已办里打开单据时，发现【提交】【保存】按钮可点击。 （不是本人节点，这2按钮应该不能点击才对。所以是bug） 

存在的问题： 三级单位储备项目逐级审批单据审批流程到部门领导时无法进行下到下一个节点中。非常着急！ 

期望结果或改进建议： 建议尽快处理。",无法规避
jra,见附件,无法规避
jra,"用户需求： 
1) 
2) 

存在的问题： 
储备流程，分阶段论述，流程走过可研编制后，可研编制和可研评审页签，能不能被其他节点都看到？ 
建议系统的实现方式：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
项目储备流程，退回到发起人后，发起人将逐级审批修改为直送二级单位审批，再提交流程，流程没有按照修改后的直送二级单位走 
期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
项目储备流程，刚发起，然后被下一步退回后，再修改表单，切换项目储备类型时候，页签会乱 
期望结果或改进建议：",无法规避
jra,"1、附件组件不统一，前端时间统一组件时，已经统一通知过，要求处理各个组件得统一性 
2、附件组件，也统一要求单附件/多附件按照整行占用处理，否则附件名称展示不完整",使用低代码可以规避或通过配置解决
jra,"参考项目：licunlong-测试101743-0523 

选择了一个股东，手动新增了三条信息，金额未自动合计计算，且暂存单据时提示错误，浏览器控制台无报错 

输入出资方式时，出资方式被滚动条遮挡，无法看到选项",使用低代码可以规避或通过配置解决
jra,"组织机构选择过来得数据，安排开发人员确认下和公司管理得是否同一个字典，公司管理已经安排宁元确认字典项 

也可能时数据问题，如果时数据问题，下周上线后，用户录入得数据就要做数据处理",通过合理设计可以规避
jra,建议统一下所有类似得提示语，开发前没有提供，开发过程中按照开发得语言做了提示，建议统一下,通过封装通用组件可以规避或通过配置解决
jra,年度计划列表删除时，列出的项目信息为空,通过封装通用组件可以规避或通过配置解决
jra,年度计划，年中计划调整的暂存按钮又改成保存了么？,使用低代码可以规避或通过配置解决
jra,"表单新增标的公司股权结构时，出现NaN的值 
年度计划，年中计划都有",使用低代码可以规避或通过配置解决
jra,年度计划管理，表单页面底部，空白处，高度可参考项目储备管理中的高度进行设置,使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
部分信息选项发起流程后丢失，如图，当时选的是D类中的 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"1、所属板块，重点业务领域未选择时，业务类型不可以操作，只有重点业务领域选择其他时，业务类型才可以操作 
2、所有内容为其他时，业务类型可以自选",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
金额多输入了几位溢出报错，如图 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,是否涉及员工持有股权，为空时，持股类型，持股形式，员工持股人数，员工持股比例都展示，为是时也展示，考虑下，为空时不符合为是的值的判断。,无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
年中计划管理流程，中途已提交了的任意一节点从已办中进去还能新增决策信息，这不正常。 
补充，流程已结束也能，，，这非常不正常 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 项目储备-项目联系人目前系统是默认显示当前登录用户，不允许修改 
2) 

存在的问题： 

期望结果或改进建议： 项目联系人默认显示当前登录用户，允许修改",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
阻塞性问题，储备流程分阶段论述，到了编制可研的时候，录入可研报告后，保存不提交，返回列表后无法再对该记录进行编辑提交（鼠标放到编辑按钮上是禁止图标），导致无法继续流转 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
阻塞性问题，储备流程刚发起就下一步就没法提交了 
期望结果或改进建议：",自动化测试可以规避
jra,"1、表单加载后，战略性新兴产业分类又可以修改了，按照要求表单加载后不可以修改； 
2、删除战略性新兴产业分类后，再删除中央投资项目分类的数据，战略新兴产业分类出现必填提示，且无法消失；",使用低代码可以规避或通过配置解决
jra,"需求原文： 
当前节点审批人可退回给各级单位的业务主管，需要判断该业务主管是否开展了业务活动比如该业务主管是否填写了本级的可研评审信息，如填写了，那审批人在退回时，选择退回节点时应能显示该节点，并且选中节点后，列表中应能显示该业务主管。如果业务主管没有开展业务活动，那么审批人在退回选择退回节点时应不显示该节点。",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
年中计划管理选完项目刚保存还没发起，流程详情中就有流程审批信息了。而且发起流程后，再打开表单，流程详情按钮是灰色的，点不了 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,任选一种提供组织机构树的项目分类，并从树中选取一个标的公司，系统带入相关信息后 将“项目分类”改为“新设公司”并重新编辑标的公司名称，此时 系统不会自动清除上一次选择的标的公司所带出的数据，点击删除上个标的公司的股东时，系统提示“带入股东信息不可删除”,无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
流程中退回按钮点了后，再点取消会关闭整个表单。正常应该只关闭任务退回窗口 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"系统截图为二级单位主管领导提交流程后从个人已办列表点击取回，系统提示“取回成功” 
------------------------------------------------------------------------------------------------------- 
需求原文： 
如果处于主管领导审批完成后的阶段，系统应不提供可研报告的取回按钮，或者提示“业务流程已经完成，不能取回。",无法规避
jra,"需求原文： 
项目单位的上级单位操作人员只能修改本人提交的建议书评审记录或新增建议书评审记录、审查信息。",通过封装通用组件可以规避或通过配置解决
jra,"需求原文： 
如果取回时有人在对表单进行操作（即打开状态），系统需提示取回人“后续节点人员正在处理，无法成功取回。请稍后再取回”。",无法规避
jra,"需求原文： 
评审通过后项目单位可逐级审查或直报二级单位审查",使用低代码可以规避或通过配置解决
jra,"需求原文： 
完成编制后提交建议书评审",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
项目储备管理，流程已发起，表单信息丢失，无法稳定复现。 
224环境，账号yuekerj2密码Asdf098765!! 
项目编码GQW20230609112346037 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"需求原文： 
用户在提交流程时，至少要有一条行业市场分析记录。",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
打开已提交的年度计划，还能新增决策信息。如图 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"需求原文： 
出资后股东所占股比（%）自动计算， 
出资后股东注册资本（万）=出资前股东注册资本（万）+本次出资金额（万）",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
流程刚走到第二步，可研编制可研评审页签就展示出来了，另外，建议书评审也丢失了 
期望结果或改进建议：",无法规避
jra,"需求原文： 
标的公司信息中“上级管理单位”、“管理层级”、“产权层级”设为非必填项。 
标的公司来源为内部时，三个字段必填，“上级管理单位”、“管理层级”从公司库引入，允许修改，“产权层级”用户手动录入； 
标的公司为参股公司三个字段从公司库引入，允许修改； 
如果标的公司是新设公司或者来源是外部的，三个字段设置为非必填。",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 

期望结果或改进建议：",自动化测试可以规避
jra,"需求原文： 
用户填写股东注册资本后，自动计算，且允许用户修改。 
计算公式：出资前股东所占股比=出资前股东注册资本/投资前标的公司注册资本；出资后股东所占股比=出资后股东注册资本/投资后标的公司注册资本。",使用低代码可以规避或通过配置解决
jra,"需求原文： 
标的公司股权结构中股比需要设置成6位小数",使用低代码可以规避或通过配置解决
jra,"需求原文： 
币种为非人民币时，“本次出资额”要求显示对应币种的金额和转换成人民币的金额。需要增加校验：本次出资额合计值应等于项目总投资额。",无法规避
jra,"需求原文： 
标的公司股权结构中币种默认引用标的公司的币种，允许修改。如果选择外币，出资前股东注册资本（万）和出资后股东注册资本（万）对应相应币种的值。",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
项目储备管理流程中，走到初步可研论证点提交没反应了，走不下去了 

账号yueksj1 
224环境。 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
项目储备管理流程中，填写上级单位审查意见时，审查结果默认带出了个“不通过” 

补充：需求中要求默认为通过，不允许修改。咱现在是默认不通过，还做了不通过的校验，应该是什么？ 
期望结果或改进建议：",通过需求确认演示可以规避
jra,"需求原文： 
当标的公司从组织机构树选取时，标的公司股权结构中的股东名称、国家/地区、股东单位统一社会信用代码、来源、股东性质、币种、出资前股东注册资本（万）、出资前股东所占股比、出资前控股关系自动从公司管理带出，其中出资前股东注册资本（万）取自公司管理中股权结构-认缴金额中的合计（人民币：万元），出资前股东所占股比取自公司管理中股权结构-认缴金额中的认缴比例（%）。出资前控股关系取自公司管理中股权结构-控股关系（备注：该字段需要李维在公司管理中增加）",通过需求确认演示可以规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
项目储备管理流程中，二级单位可以删除四级单位的审查意见？ 
补充，流程到了初步可研编写节点，办理人也可以删除审查意见，这不应该吧？ 


期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
行业市场分析其他文件上传，文档类型保存后再打开不显示汉字 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"需求原文： 
“中央企业投资项目分类”多项选择中没有选中“战略类-战略性新兴产业”时，战略性新兴产业分类字段默认为不涉及，且不允许修改。",无法规避
jra,"需求原文： 
提示信息应改成：当项目是主子项目时，需要填写集团内其他投资主体。",使用低代码可以规避或通过配置解决
jra,"需求原文： 
主子项是“一般项目”时，应不能录入“集团内其他投资主体”，（且不需要显示该区0531石波修改）",使用低代码可以规避或通过配置解决
jra,"需求原文： 
""是否涉及员工持有股权”选择为“是”时，显示”持股类型“字段",使用低代码可以规避或通过配置解决
jra,"需求原文： 
“是否涉及员工持股”改为“是否涉及员工持有股权""。（必填项，默认为否，允许用户修改0531石波修改）",使用低代码可以规避或通过配置解决
jra,"需求原文： 
项目分类是投资类的项目，除“股权融资（集团公司外部）”外，其他均为投资类项目时。项目单位不能作为标的公司，需要增加校验功能。",使用低代码可以规避或通过配置解决
jra,"需求原文： 
项目类型为“国资委审批”时，决策与审批中的批复单位默认为国资委； 
项目类型为“财政部审批”时，决策与审批中的批复单位默认为财政部； 
项目类型为“集团审批”时，决策与审批中的批复单位默认为“中国航天科技集团有限公司”； 
项目类型为“二级单位审批”时，决策与审批中的批复单位默认为“项目单位的主管单位”，允许弹框从组织树选择，（组织树的显示范围是集团和二级单位，二级以下单位不需要显示）， 
项目类型为“三级单位审批”时，项目批复区应不显示。",无法规避
jra,"表单内按钮上下左右得间距10px; 
列表折行、统一UI修改得表单样式调整；",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
年中计划管理流程中，为什么只有集团业务主管从待办中打开表单有保存按钮，，其他节点都只有提交。 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
年中计划流程审批中，新增决策信息，如果点保存不提交，，无法通过修改按钮再进行修改，鼠标放到修改上显示禁止图标 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
主子项目时候，审核方式选了后，表单上不显示 
期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
可研评审的子页签的界面风格，按钮，分页栏跟其他三个子页签风格不统一 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
主子类项目必须有至少一个集团内其他投资主体，没填也没校验就提交成功了 
期望结果或改进建议：",自动化测试可以规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
取回的表单，从待办中打开后，没有提交按钮，无法继续流转 

项目编号GQW20230607144242278 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
打开已提交的储备，切换到可研编制页签，勾选要查看的数据后，查看按钮点不了，鼠标放上去是禁止图标 

补充问题，可研编制保存后没提交，再编辑就让填写更新原因 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
必填项切换后，未及时移除导致无法通过校验 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
投资主体下方空白区域过大，标的公司股权结构下面也是 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 项目分类是投资类的项目，除“股权融资（集团公司外部）”外，其他均为投资类项目时。项目单位不能作为标的公司，需要增加校验功能 
2) 

存在的问题： 目前程序中项目单位可以是标的公司了 根据需要增加校验 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 储备库信息单据，审批流程结束后，打开单据出现了-【项目分类-其他说明】 不知道怎么出来 
2）单据编号：GQW20230601173242185 

存在的问题： 填写得时候没有这个字段出来，不知道为啥审批后在打开出现了 

期望结果或改进建议： 建议看一下，什么条件时出现这个字段。",无法规避
jra,点击主表的保存按钮后可正常录入,无法规避
jra,"复现步骤： 
1) 感觉改错了，需求：①标的公司股权结构中出资前股东注册资本（万）改成出资前股权数量（股），出资前股东所占股比改成“出资前股权数量比例（%）”需要引用公司管理中实际股权数量（股）和股权数量比例（%），币种、本次出资额用户手动维护。 


存在的问题： 应该是改错了， 

期望结果或改进建议： 按照需求改，应该是多了2字",通过需求确认演示可以规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
年中计划流程已经发起了，保存和发起流程还可点击。 
之前解决了，更新ui后又有了？ 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 储备项目保存时报错 
2) 

存在的问题： 保存时出现错误 

期望结果或改进建议： 报错",自动化测试可以规避
jra,"复现步骤： 
1) 项目分类投资项目要求除了融资项目集团外，标的公司不能是项目单位，没有控制 
2) 

存在的问题： 具体要求么有按照需求进行控制 

期望结果或改进建议： 按照要求进行控制",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
项目编号GQW20230601161508172 
登录账号：17310238511 
商密网上，图中项目储备，点提交一直转圈。 
期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 储备库信息-项目列表中【审批状态】已标志【审批结束】可是在打开单据时，下方得【提交按钮还能继续点击【提交】，希望控制 
2) 

存在的问题： 没有控制 

期望结果或改进建议： 建议审批结束得就不能让继续可以点击【提交】",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 储备库管理-可研评审-中新增-窗口里得下方内容不能全部展示出来，需优化 
2) 

存在的问题： 

期望结果或改进建议： 优化，具体地方见图片",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 项目储备--标的股权信息-本次出资金额--评估信息--评估机构是手工录入，后面就不要显示可以选择得按钮，请取消 
2) 

存在的问题： 多此一举 

期望结果或改进建议： 建议取消没有用得按钮",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
上级单位审查意见区，按钮要统左面就都左面，要右面就都右面 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
投资主体边框粗细不统一 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
改了ui后，子表单的右上角关闭按钮有问题了，点击右上角关闭后，无法再打开 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
可研报告信息中，无关的附件产生了依赖关系，如视频中 
期望结果或改进建议：",无法规避
jra,目前决策文件为非必填 且未见需求中提示信息,使用低代码可以规避或通过配置解决
jra,"项目分类为“股权融资（集团公司外部）”时，圈中管理要素名称有误 
",无法规避
jra,见附件,无法规避
jra,"①标的公司股权结构中出资前股东注册资本（万）改成出资前股权数量（股），出资前股东所占股比改成“出资前股权数量比例（%）”需要引用公司管理中实际股权数量（股）和股权数量比例（%），币种、本次出资额用户手动维护。 
②出资后股东注册资本（万）改成出资后股权数量（股），出资后股东所占股比改成“出资后股权数量比例（%）”用户手动维护。",无法规避
jra,国家/地区,无法规避
jra,"需要在决策与审批阶段的项目分类后面增加“是否进场交易”字段。设为必填项，字典为“是/否”，默认为否，用户可修改。（0518新增需求） 
放到项目分类后面： 

项目基本心情区---》项目分类后",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 储备库信息中-标的公司股权结构-本次出资金额（万）-资产评估信息--中得（其他金额（万），（资产评估信息） 
2) 

存在的问题： 需求中没有这两个字段 

期望结果或改进建议： 建议按照需求开发",无法规避
jra,"复现步骤： 
1) 储备库信息中【项目联系人】发现项目单位非二级单位时，项目联系人中得【二级单位项目联系人】【二级单位项目联系人电话】也被隐藏 
2) 

存在的问题： 项目联系人中涉及非二级单位时，二级单位项目联系人和电话字段不能隐藏。 

期望结果或改进建议： 建议反向问题改过来",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
年度计划打开表单，点击右上角关闭之后，。就无法再打开了 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
是否员工持股，默认为“否”未实现。 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 储备管理中的建议书评审-评审类型没有办法修改，下拉没有值。 
2) 储备项目管理中建议书评审里没有评审类型值。评审结论。 

存在的问题： 感觉值有丢失情况 

期望结果或改进建议： 建议不要丢失数据和值",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
224上，项目储备已经提交了。关闭后再打开可研编制等页签，还能点提交。 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 储备项目管理-可研编制-中的可研报告名称没有带出来，并且可研名称不应该可以下载 
2) 

存在的问题： 可研报告名称取值不正确 

期望结果或改进建议： 修改",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
行业市场分析中，其他附件的文档类型保存后再打开丢失 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 如视频中 
2) 

存在的问题： 
可研编制中，附件多传几个就溢出报错了。 
期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
切换项目储备类型，左侧导航栏内容变化，单表单上无变化 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,见附件,使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 录入电话号码的地方不能录入汉字，按照电话号码进行控制 
2) 

存在的问题： 

期望结果或改进建议： 建议按电话号码进行控制",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
从股权结构本次出资金额子页面的评估信息页面，手动录入评估机构，检验未去除导致无法确认， 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
建议书编制录入提交后，保存再打开。内容丢失。 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
建议书评审明细行出现了错位 
期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
附件名称都正常，没有过长的文件名却报错。 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
1， 中央企业投资项目分类，按回车可选到上层菜单。（之前224上出现过，改好了，更到商密网后又复现了？） 
2，选择后，字段抖动，如视频中。 

期望结果或改进建议：",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 正常录入项目信息 
2) 

存在的问题： 
字段位置应从左开始排列,不应该出现左侧空白的情况。 

期望结果或改进建议： 
",使用低代码可以规避或通过配置解决
jra,见附件,通过需求确认演示可以规避
jra,需求中未对通知形式进行详述，请补充,自动化测试可以规避
jra,"1.请确认附件“需求-录入本单位项目决策信息 界面”与附件“系统-决策信息1.”是否应保持一致 
2.需求原文“点击按钮弹出的页面信息如下图：决策信息、决策前置会议需要用户填写。可研报告信息中的可研报告名称、可研报告日期、编制单位、版本编号自动带出。”",通过需求确认演示可以规避
jra,"1.需求原文“系统需要根据决策与审批阶段中本单位是否有决策信息自动判断，如果决策与审批阶段项目单位填写了决策信息并已提交（或发起流程），“项目单位是否完成决策”字段显示“是”，不允许修改，如果决策与审批阶段项目单位没有填写，默认显示“否”不允许修改，另外字段旁增加按钮“录入本单位项目决策信息”” 
2.目前系统中决策信息页签的校验未移除",通过需求确认演示可以规避
jra,"复现步骤： 
1) 当标的公司从组织机构树选取时，标的公司股权结构中的股东名称、国家/地区、股东单位统一社会信用代码、来源、股东性质、币种、出资前股东注册资本（万）、出资前股东所占股比、出资前控股关系自动从公司管理带出，其 


存在的问题： 系统中没有带出来股权结构树中对应的单位里边的相应内容 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 标的公司对模糊查询功能要求：系统中所有选择国家、省、地级市、县级市的地方，下拉菜单中要提供模糊查询功能。 


存在的问题： 未按照要求修改 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 是否涉及员工持有股权”选择“否”，则不显示持股类型，持股形式，股权激励方式，员工持股人数，关公持股比例字段 
2) 

存在的问题： 

期望结果或改进建议： 建议按照需求进行修改",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 员工持股问题，未按需求修改 
2) 员工持股问题，未按需求修改 

存在的问题： 员工持股问题，未按需求修改 

期望结果或改进建议： 建议按照需求进行修改",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 

期望结果或改进建议：",无法规避
jra,测试账号：余海童 18911899629,使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 当项目储备类型是分阶段论述时，提交时提示信息应改为 请录入建议书编制信息并提交审批 
2) 

存在的问题： 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 当储备项目中项目类型为分阶段论述项目时，项目的展示页签顺序应该是项目信息、建议书编制、建议书评审、可研编制、可研评审 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 集团内其他投资主体下面的投资主体规则的提示信息 需要删除。 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,发文单位，单位树显示二级单位,通过封装通用组件可以规避或通过配置解决
jra,储备项目中增加上级单位审查区域，填写审查单位、单位层级、审查结果、审查日期、审查说明。其中审查单位、单位层级、审查结果审查日期字段在审查节点为必填项。只有在审查节点显示“上级单位审查”区域。,无法规避
jra,标的公司股权结构 滚动条图层建议下移一层,使用低代码可以规避或通过配置解决
jra,"这条需求未实现。我用二级业务主管退回到了三级业务员主管。三级业务主管 
点提交只能提交给三级部门领导 
点退回只能退给发起人",无法规避
jra,从已办中打开表单，右下角显示异常，而且仍可新增决策信息,使用低代码可以规避或通过配置解决
jra,"四级单位业务主管发起，审批到三级单位部门领导时级单位业务主管进行取回。登陆四级单位业务主管的账号 
问题1，表单状态也显示流程取回，并且可以进去对表单进行修改保存 
问题2，三级单位主管取回后，四级单位部门领导可从三级单位取回流程。类似这种B从C取回后能被A取回的情况是否允许存在:",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 

期望结果或改进建议：",无法规避
jra,"退回后，发起人无法对决策信息页签进行编辑 
0525李存龙：目前决策信息提交后，就没法修改和删除，但是实际业务中，用户真的需要改怎么办，需石波经理确认",使用低代码可以规避或通过配置解决
jra,"待办处理界面待优化，见右图 
0525李存龙：分辨率是多少，1080p下是否正常。 
",使用低代码可以规避或通过配置解决
jra,"标的公司股权结构明细行中，本次出资金额为弹出页面进行录入。录入完后和普通数据一样，无法直观看出哪个数据可以点进去看详情，建议： 
方案1，本次出资金额录入完毕后，以蓝色超链接的形式展示。如图左侧蓝字。 
方案2，录入完毕后文本框变为只读。 
看需要用哪种方法。",无法规避
jra,"复现步骤： 
1) 如果项目单位本身就是二级单位，“二级单位项目责任人”默认为“项目责任人”，“二级单位项目责任人电话”默认为“项目责任人电话”。此情况下，这两个字段在界面上不再显示。 
2) 储备、计划都要这样的情况 

存在的问题： 没有完成需求改造 

期望结果或改进建议：",通过需求确认演示可以规避
jra,"复现步骤： 
1) 在储备单据中，“战略性新兴产业分类”选择“不涉及”时，“中央企业投资项目分类”的”战略类-战略性新兴产业“置灰，不能选择 
2) “战略性新兴产业分类”选择“不涉及”以外的选项时，“中央企业投资项目分类”的”战略类-战略性新兴产业“默认为选中，且不取消选中。同时，“发展类-B1和B2一般投融资项目”置灰，不能选择 
3）“中央企业投资项目分类”多项选择中没有选中“战略类-战略性新兴产业”时，战略性新兴产业分类字段默认为不涉及，且不允许修改。 
4）A、B、C、D允许多选。当选A，C，D时，B1、B2要求置灰，不能选择。 

存在的问题： 中央企业投资项目分类和战略性新兴产业分类两个字段相互制约。 

期望结果或改进建议： 按照需求进行修改",无法规避
jra,"复现步骤： 
1) 年中计划管理-计划调整信息-选择好编号后，发现未能导入数据项有：中央企业投资项目分类。储备项目是有数据得 
2) 年中计划管理-计划调整信息-选择好编号后，发现【重点业务领域】显示字母代码了 

存在的问题：一是显示不正确，二是数据值未被代入。 

期望结果或改进建议： 修改程序",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 年度计划管理-决策信息-决策文件 
2) 上传-选择好文件后，发现没有带入到表中来 

存在的问题： 感觉是有门，但是门是假得 

期望结果或改进建议：",使用低代码可以规避或通过配置解决
jra,"复现步骤： 
1) 
2) 

存在的问题： 
·中央企业投资项目分类，点回车可选到上层字典 
期望结果或改进建议：",通过封装通用组件可以规避或通过配置解决
jra,"复现步骤： 
1) 储备项目库信息中得【项目分类】--【中央企业投资项目分类】不能选择一个类后相应的子类都被默认选中了。应该子类里客户自己挑选，并且支持跨类多选择，但绝不是每个类选择后子类就被全部默认选中的情况。 
2) 实际环境可能比如：战略类（A类）--两新一重项目（A5）；发展类（B类)--技术改造类投资项目（B3) ;管控类（D类）-两高项目(D5) 

存在的问题： 不能默认被全选的情况。不能让用户觉得操作麻烦。 

期望结果或改进建议：",无法规避
jra,"复现步骤： 
1) 未按照需求中开发，具体见图片要求 


存在的问题： 未按照需求进行修改程序 

期望结果或改进建议： 建议按照需求进行修改",通过需求确认演示可以规避
jra,"复现步骤： 
1) 项目储备管理--新建一个项目-我选择了神软公司，但是打开后，我想换一个项目单位，换为神软下级单位。 
2) 点击：单位选择--在搜索小条中录入北京神舟，可以看到二级单位，但是不能选择到三级单位。请见图 

存在的问题：单位选择里得组织树有问题 

期望结果或改进建议： 建议模糊查询时可以过滤出来本级及下级所有单位，缩小范围进行打开勾选 。",无法规避
jra,"复现步骤： 
1) 录入并提交储备项目 
2) 在年度计划“项目名称”处引用 

存在的问题： 
当前未展示已提交且未被其他年度计划引用并提交的储备项目 
期望结果或改进建议： 
需正常展示并允许引用已提交且未被其他年度计划引用并提交的储备项目",无法规避
jra,"复现步骤： 
1) 
2) 

存在的问题： 
当前系统允许单个股东出资前持股比例为零但不允许出资前股东注册资本为0 
期望结果或改进建议： 
保持一致性 允许出资前股东注册资本为0",无法规避
jra,"复现步骤： 
1) 选择项目类型为“新设公司” 
2) 点击标的公司名称 

存在的问题： 
项目分类为“新设公司”时，点击标的公司名称 需用户手动输入，不应弹出组织机构树 
期望结果或改进建议：",无法规避
know,作者对普通老百姓生活的熟稔、对平民语言的自如运用和整篇的传奇色彩相互映衬，构成作品的特色。,[]
know,作者从宏观论述入手，勾勒了全书主旨，并为细致地分析宋代女作家提出了全方位的理论概括，使读者从微观的鉴赏中得到理性的升华。,[]
know,作为重点国有企业的领导干部，必须时刻牢记自己身上的责任，坚定共产主义理想和社会主义信念，坚持全心全意为人民服务的宗旨，遵守党纪国法，正确处理好权力、责任与利益的关系，自觉维护国家和人民的利益，廉洁自律，自觉做到自重、自省、自警、自励，自觉同职工群众同甘苦、共患难，自觉抵御各种腐朽思想和生活方式的侵蚀。,[]
know,作为一名大气科学家，叶笃正院士表示他更赞赏中国科学家对于雅鲁藏布江大峡谷水汽通道的观测论证以及这条青藏高原的最大水汽通道对于自然环境和人类活动影响的研究发现。,"[[{""type"": ""地理位置"", ""span"": ""青"", ""offset"": [49, 50]}], [{""type"": ""地理位置"", ""span"": ""雅鲁藏布江"", ""offset"": [28, 33]}], [{""type"": ""人物"", ""span"": ""叶笃正"", ""offset"": [10, 13]}], [{""type"": ""地理位置"", ""span"": ""藏"", ""offset"": [50, 51]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [21, 23]}]]"
know,作为为拯救大熊猫而开展的募捐活动之一，荷兰巴恩市15日举行了巨幅大熊猫画像揭幕仪式。,"[[{""type"": ""地理位置"", ""span"": ""巴恩市"", ""offset"": [21, 24]}], [{""type"": ""地理位置"", ""span"": ""荷兰"", ""offset"": [19, 21]}]]"
know,最近，因以色列从约旦河西岸撤军问题毫无进展致使巴以谈判走进死胡同，内塔尼亚胡政府又接连决定实施耶路撒冷西扩计划和就西岸撤军问题搞全民公决，这在以色列国内引起了激烈的争论，也引起了阿拉伯世界和国际社会的一片非议。,"[[{""type"": ""地理位置"", ""span"": ""以"", ""offset"": [24, 25]}], [{""type"": ""地理位置"", ""span"": ""西岸"", ""offset"": [57, 59]}], [{""type"": ""地理位置"", ""span"": ""以色列"", ""offset"": [4, 7]}], [{""type"": ""地理位置"", ""span"": ""耶路撒冷"", ""offset"": [47, 51]}], [{""type"": ""地理位置"", ""span"": ""巴"", ""offset"": [23, 24]}], [{""type"": ""地理位置"", ""span"": ""约旦河西岸"", ""offset"": [8, 13]}], [{""type"": ""人物"", ""span"": ""内塔尼亚胡"", ""offset"": [33, 38]}], [{""type"": ""地理位置"", ""span"": ""以色列"", ""offset"": [71, 74]}], [{""type"": ""地理位置"", ""span"": ""阿拉伯"", ""offset"": [89, 92]}]]"
know,最出乎意外的是，1979年作为全国高校统考的语文作文试题，要求根据两千字的《第二次考试》改写成八百字的《陈伊玲的故事》。,"[[{""type"": ""人物"", ""span"": ""陈伊玲"", ""offset"": [52, 55]}]]"
know,总之，在我们的词典中，垄断不是个含有褒义的词汇，它总是和大企业的规模经营紧密地联系在一起。,[]
know,抓住历史机遇，在继续严格遵循中日联合声明和中日和平友好条约原则的基础上，发展面向21世纪的中日睦邻友好合作关系，实现两国世世代代友好，不仅符合中日两国人民的根本利益，也有利于亚洲乃至世界的和平、稳定与繁荣。,"[[{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [45, 46]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [21, 22]}], [{""type"": ""地理位置"", ""span"": ""亚洲"", ""offset"": [87, 89]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [14, 15]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [71, 72]}], [{""type"": ""地理位置"", ""span"": ""日"", ""offset"": [72, 73]}], [{""type"": ""地理位置"", ""span"": ""日"", ""offset"": [46, 47]}], [{""type"": ""地理位置"", ""span"": ""日"", ""offset"": [15, 16]}], [{""type"": ""地理位置"", ""span"": ""日"", ""offset"": [22, 23]}]]"
know,主要原因：一是城镇居民收入增长放慢。,[]
know,周恩来总理说，那就送一株万古常青的友谊红杉吧！,"[[{""type"": ""人物"", ""span"": ""周恩来"", ""offset"": [0, 3]}]]"
know,众所周知，发达国家的废水、废气、废渣的排放量比发展中国家多得多，因此，发达国家理应对环保承担更多的责任。,[]
know,中国与非洲国家之间在资源消费、产品市场和经济发展战略等方面均互有需求，加上中国同非洲国家之间存在着长期经济贸易友好合作的基础，中国企业只要扎扎实实地开拓非洲市场，是一定会大有作为的。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [37, 39]}], [{""type"": ""地理位置"", ""span"": ""非洲"", ""offset"": [40, 42]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [63, 65]}], [{""type"": ""地理位置"", ""span"": ""非洲"", ""offset"": [3, 5]}], [{""type"": ""地理位置"", ""span"": ""非洲"", ""offset"": [76, 78]}]]"
know,中国农科院梅方权教授意味深长地说：日本在二战结束后当中小学生还在临时搭起的帐篷中上课时，就开始实行营养配餐，现在日本中小学生的平均智力水平已赶上美国，这为日本经济的腾飞打下了坚实的基础。,"[[{""type"": ""人物"", ""span"": ""梅方权"", ""offset"": [5, 8]}], [{""type"": ""组织机构"", ""span"": ""中国农科院"", ""offset"": [0, 5]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [77, 79]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [17, 19]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [72, 74]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [56, 58]}]]"
know,中国队如果能打入决赛圈，他们一定会给我们去助威。,"[[{""type"": ""组织机构"", ""span"": ""中国队"", ""offset"": [0, 3]}]]"
know,中国队的苗立杰年纪恰好是保拉的一半，今年只有18岁，被队友们称为“苗苗”。,"[[{""type"": ""组织机构"", ""span"": ""中国队"", ""offset"": [0, 3]}], [{""type"": ""人物"", ""span"": ""苗苗"", ""offset"": [33, 35]}], [{""type"": ""人物"", ""span"": ""苗立杰"", ""offset"": [4, 7]}], [{""type"": ""人物"", ""span"": ""保拉"", ""offset"": [12, 14]}]]"
know,中国的劳动力成本比较低，出口产品仍然有一定的竞争力。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [0, 2]}]]"
know,争取达标的努力使意大利经济获得了巨大的推动力，目前意大利工业生产连续上升，经济形势继续好转。,"[[{""type"": ""地理位置"", ""span"": ""意大利"", ""offset"": [25, 28]}], [{""type"": ""地理位置"", ""span"": ""意大利"", ""offset"": [8, 11]}]]"
know,郑海霞还将效力于她上个赛季所在的洛杉矶火花队，与她同队的有美国队著名中锋莱斯利。,"[[{""type"": ""人物"", ""span"": ""莱斯利"", ""offset"": [36, 39]}], [{""type"": ""组织机构"", ""span"": ""洛杉矶火花队"", ""offset"": [16, 22]}], [{""type"": ""组织机构"", ""span"": ""美国队"", ""offset"": [29, 32]}], [{""type"": ""人物"", ""span"": ""郑海霞"", ""offset"": [0, 3]}]]"
know,整个项目由卫生部承贷，并得到了国家发展计划委员会、对外贸易经济合作部和中国银行的支持。,"[[{""type"": ""组织机构"", ""span"": ""对外贸易经济合作部"", ""offset"": [25, 34]}], [{""type"": ""组织机构"", ""span"": ""中国银行"", ""offset"": [35, 39]}], [{""type"": ""组织机构"", ""span"": ""卫生部"", ""offset"": [5, 8]}], [{""type"": ""组织机构"", ""span"": ""国家发展计划委员会"", ""offset"": [15, 24]}]]"
know,贞雅今年39岁，中等身材，穿着蓝色职业女装，谈吐大方。,"[[{""type"": ""人物"", ""span"": ""贞雅"", ""offset"": [0, 2]}]]"
know,这座依山傍水的博物馆由国内一流的设计师主持设计，整个建筑群精美而恢宏。,[]
know,这种想法让他想到自己住在市郊祝华办事处孙屯村的岳父家，听说那里有一户农户搞蔬菜大棚发了家，于是他开始往这道上琢磨，找家里的人商量着……,"[[{""type"": ""组织机构"", ""span"": ""祝华办事处"", ""offset"": [14, 19]}], [{""type"": ""地理位置"", ""span"": ""孙屯村"", ""offset"": [19, 22]}]]"
know,这种火箭分轻、中、重等多种型号，可发射不同类型的航天器。,[]
know,这种混乱局面导致有些海域使用者的合法权益难以得到维护。,[]
know,这种倒推式管理法是高允连从浙江温州人那里借鉴来的。,"[[{""type"": ""人物"", ""span"": ""高允连"", ""offset"": [9, 12]}], [{""type"": ""地理位置"", ""span"": ""浙江"", ""offset"": [13, 15]}], [{""type"": ""地理位置"", ""span"": ""温州"", ""offset"": [15, 17]}]]"
know,这些说法，实际上是一种无视事物发展内因的外因论，因而不被广大学者所赞同。,[]
know,这所当年的“战地小学”，经过军地共同努力和周真国带领教职员工苦心耕耘，如今已办成了一所完全小学。,"[[{""type"": ""人物"", ""span"": ""周真国"", ""offset"": [21, 24]}]]"
know,这说明，至少在开始阶段，看不出各队的攻击力有什么大的提高。,[]
know,这是一家档次比较高雅的酒吧，吸引了众多黑人青年。,[]
know,这起学生自杀事件警示我们：其一，教育工作者必须端正教育态度，正确施教，不要因个别教师的粗暴行为而使祖国可爱的花朵意外凋谢。,[]
know,这篇新闻分析说，中国电视台现场直播联合记者招待会实况，说明江泽民主席对国内经济改革政策和发展对美关系充满信心。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [8, 10]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [47, 48]}], [{""type"": ""人物"", ""span"": ""江泽民"", ""offset"": [29, 32]}]]"
know,这句话确是真话，吴宓先生不说假话。,"[[{""type"": ""人物"", ""span"": ""吴宓"", ""offset"": [8, 10]}]]"
know,这个数字离普及的任务还相距甚远。,[]
know,这个出版社与总社新闻研究所、中国新闻学院合作编撰的国家“九五”重点图书《毛泽东、邓小平、江泽民新闻宣传思想研究》已取得实质性进展。,"[[{""type"": ""组织机构"", ""span"": ""中国新闻学院"", ""offset"": [14, 20]}], [{""type"": ""组织机构"", ""span"": ""总社新闻研究所"", ""offset"": [6, 13]}], [{""type"": ""人物"", ""span"": ""毛泽东"", ""offset"": [36, 39]}], [{""type"": ""人物"", ""span"": ""邓小平"", ""offset"": [40, 43]}], [{""type"": ""人物"", ""span"": ""江泽民"", ""offset"": [44, 47]}]]"
know,这3张卫星图片分别记录了70年代、80年代和90年代中期黄河源的生态环境状况，范围包括青海省曲麻莱县、玛多县和称多县等地，面积近4万平方公里。,"[[{""type"": ""地理位置"", ""span"": ""曲麻莱县"", ""offset"": [46, 50]}], [{""type"": ""地理位置"", ""span"": ""玛多县"", ""offset"": [51, 54]}], [{""type"": ""地理位置"", ""span"": ""称多县"", ""offset"": [55, 58]}], [{""type"": ""地理位置"", ""span"": ""黄河"", ""offset"": [28, 30]}], [{""type"": ""地理位置"", ""span"": ""青海省"", ""offset"": [43, 46]}]]"
know,召集人应根据本小组工作规划安排小组工作并向主任委员会议负责。,[]
know,张君秋对京剧音配像的指导也不限于旦角艺术。,"[[{""type"": ""人物"", ""span"": ""张君秋"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""京"", ""offset"": [4, 5]}]]"
know,增加对信息领域投资的初衷是，21世纪是信息社会，21世纪的汽车必须具备信息功能，以此满足消费者对汽车高度安全和多种信息的需求。,[]
know,在这里恕弟不恭之罪，敢在尊前一诤：前人论书，每曰“字字有来历，笔笔有出处”，细读公字，何尝跳出前人藩篱，自隶变而后，直至明季，兄有何新出？,[]
know,在与巴重开会谈问题上，印声明再次宣称，“没有任何第三方介入的余地”。,"[[{""type"": ""地理位置"", ""span"": ""印"", ""offset"": [11, 12]}], [{""type"": ""地理位置"", ""span"": ""巴"", ""offset"": [2, 3]}]]"
know,在我们的队伍中，确实有些只讲哥们儿义气不讲党的原则，只图实惠不讲干部形象的事。,[]
know,在社会难点问题上寻求突破———读《脊梁———国有企业的机遇与挑战》,[]
know,在瑞典斯德哥尔摩进行的优胜者杯决赛是欧洲三大杯决赛中唯一没有意大利球队参加的比赛。,"[[{""type"": ""地理位置"", ""span"": ""斯德哥尔摩"", ""offset"": [3, 8]}], [{""type"": ""地理位置"", ""span"": ""意大利"", ""offset"": [30, 33]}], [{""type"": ""地理位置"", ""span"": ""瑞典"", ""offset"": [1, 3]}], [{""type"": ""地理位置"", ""span"": ""欧洲"", ""offset"": [18, 20]}]]"
know,在人大常委会和人大民委工作上的许多重要问题，都是事先同我商量。,"[[{""type"": ""组织机构"", ""span"": ""人大常委会"", ""offset"": [1, 6]}], [{""type"": ""组织机构"", ""span"": ""人大民委"", ""offset"": [7, 11]}]]"
know,在陪同人员的引导下，我们小心翼翼地走进了紧靠“石棺”的阴冷潮湿的4号机组控制室。,[]
know,在旅游景点中，不少厕所收费偏高。,[]
know,再看内容，图文并茂，简短的文字，准确地反映了五十六个民族的风土人情和文化传统，把各民族的主要特点讲得很到位。,[]
know,在竞技场上，美国短跑巨星琼斯可谓一个不多见的“天之骄女”。,"[[{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [6, 8]}], [{""type"": ""人物"", ""span"": ""琼斯"", ""offset"": [12, 14]}]]"
know,在今年2月至5月的春季招兵期间，每月比过去少招募2100至3100人。,[]
know,在禁毒国际合作方面，中国政府首先是支持并积极参与联合国麻醉品委员会、联合国禁毒署的工作，认真履行国际义务。,"[[{""type"": ""组织机构"", ""span"": ""联合国麻醉品委员会"", ""offset"": [24, 33]}], [{""type"": ""组织机构"", ""span"": ""联合国禁毒署"", ""offset"": [34, 40]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [10, 12]}]]"
know,在金大中访美期间，以产业资源部长官为团长的招商引资团也正在美国活动，并与美国企业界和金融界人士商讨了对韩高风险企业、金融产业和房地产业的投资及收购问题，并取得了一定进展。,"[[{""type"": ""地理位置"", ""span"": ""韩"", ""offset"": [51, 52]}], [{""type"": ""组织机构"", ""span"": ""产业资源部"", ""offset"": [10, 15]}], [{""type"": ""组织机构"", ""span"": ""招商引资团"", ""offset"": [21, 26]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [36, 38]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [5, 6]}], [{""type"": ""人物"", ""span"": ""金大中"", ""offset"": [1, 4]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [29, 31]}]]"
know,在几内亚，提起“世纪高大”，几乎妇孺皆知，这是因为它的诞生有着不平凡的经历。,"[[{""type"": ""地理位置"", ""span"": ""几内亚"", ""offset"": [1, 4]}], [{""type"": ""组织机构"", ""span"": ""世纪高大"", ""offset"": [8, 12]}]]"
know,在回答记者关于北京市环保工作的提问时，解振华说，作为中国的首都，北京的空气质量的确不能令人满意，这一问题已引起国务院和北京市政府的高度重视。,"[[{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [32, 34]}], [{""type"": ""地理位置"", ""span"": ""北京市"", ""offset"": [7, 10]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [26, 28]}], [{""type"": ""组织机构"", ""span"": ""国务院"", ""offset"": [55, 58]}], [{""type"": ""地理位置"", ""span"": ""北京市"", ""offset"": [59, 62]}], [{""type"": ""人物"", ""span"": ""解振华"", ""offset"": [19, 22]}]]"
know,在国际事务中，两国相互支持，密切配合。,[]
know,在光电磁连接而成的“地球村”中，能不能把自己的孩子培养成为一个合格的“村民”，散发着独特的文化魅力，而非好莱坞文化工业流水线上千人一面的模具翻版？,"[[{""type"": ""地理位置"", ""span"": ""好莱坞"", ""offset"": [52, 55]}], [{""type"": ""地理位置"", ""span"": ""地球村"", ""offset"": [10, 13]}]]"
know,在发达国家，急救保险十分普及，已成为社会保障体系的重要组成部分。,[]
know,在阿维兰热任职24年后，国际足联要选举产生一位新的主席。,"[[{""type"": ""人物"", ""span"": ""阿维兰热"", ""offset"": [1, 5]}], [{""type"": ""组织机构"", ""span"": ""国际足联"", ""offset"": [12, 16]}]]"
know,在城改动迁过程中，几百户居民无一上访。,[]
know,在北大百年校庆来临之际，记者走访了北大中文系教授、《老北大的故事》（著）和《北大旧事》（与夏晓虹合编）两书的作者陈平原先生。,"[[{""type"": ""组织机构"", ""span"": ""北大"", ""offset"": [38, 40]}], [{""type"": ""组织机构"", ""span"": ""北大"", ""offset"": [1, 3]}], [{""type"": ""组织机构"", ""span"": ""北大中文系"", ""offset"": [17, 22]}], [{""type"": ""人物"", ""span"": ""夏晓虹"", ""offset"": [45, 48]}], [{""type"": ""人物"", ""span"": ""陈平原"", ""offset"": [56, 59]}], [{""type"": ""组织机构"", ""span"": ""北大"", ""offset"": [27, 29]}]]"
know,袁步兵本人先后6次被如东农业系统评为先进个人，连续3年获县政府嘉奖，1997年被县委、团县委评为“如东县十佳青年”。,"[[{""type"": ""人物"", ""span"": ""袁步兵"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""如东县"", ""offset"": [49, 52]}], [{""type"": ""组织机构"", ""span"": ""县委"", ""offset"": [40, 42]}], [{""type"": ""地理位置"", ""span"": ""如东"", ""offset"": [10, 12]}], [{""type"": ""组织机构"", ""span"": ""团县委"", ""offset"": [43, 46]}]]"
know,与五四运动七十九周年相携相伴，北京大学迎来了自己的百年华诞。,"[[{""type"": ""组织机构"", ""span"": ""北京大学"", ""offset"": [15, 19]}]]"
know,与会的中美各界人士认为，经贸合作是中美关系大厦的基石之一，表示要继续为推动中美经贸合作的发展作出积极贡献。,"[[{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [18, 19]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [4, 5]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [38, 39]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [3, 4]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [37, 38]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [17, 18]}]]"
know,与此同时，作者同一题材的长篇侦破小说《鱼孽》也出版发行。,[]
know,由于这一系列的细致周密的工作，去年只有两条船被扣，仅此一项就节省17万多澳元的修理费，且节省船期28天，而每误一天船期要耗费1万澳元的费用，这就又节省出船期费28万多澳元。,[]
know,由于农业保险风险大，收益率低，保险公司大多不愿开展此类业务，因而，目前巴西只有圣保罗州保险公司独家经营农业保险。,"[[{""type"": ""地理位置"", ""span"": ""巴西"", ""offset"": [35, 37]}], [{""type"": ""组织机构"", ""span"": ""圣保罗州保险公司"", ""offset"": [39, 47]}]]"
know,由于保护区内的防护设施不配套，加上保护区本身管理上存在的问题，使天鹅洲保护区难以起到应有的保护作用。,"[[{""type"": ""地理位置"", ""span"": ""天鹅洲"", ""offset"": [32, 35]}]]"
know,有心无力的前卫寰岛队只靠高峰扳回一球。,"[[{""type"": ""组织机构"", ""span"": ""前卫寰岛队"", ""offset"": [5, 10]}], [{""type"": ""人物"", ""span"": ""高峰"", ""offset"": [12, 14]}]]"
know,有些主管部门不让经济效益好的企业进行改制，而只让效益差的企业改制。,[]
know,由统计数字的水分，想到《三国演义》中的一段故事。,[]
know,英国外交大臣库克今天发表声明，谴责巴基斯坦无视国际舆论的压力再次进行核试验，他同时敦促巴基斯坦和印度两国政府为缓解两国间的紧张局势而努力。,"[[{""type"": ""地理位置"", ""span"": ""巴基斯坦"", ""offset"": [43, 47]}], [{""type"": ""地理位置"", ""span"": ""英国"", ""offset"": [0, 2]}], [{""type"": ""人物"", ""span"": ""库克"", ""offset"": [6, 8]}], [{""type"": ""地理位置"", ""span"": ""巴基斯坦"", ""offset"": [17, 21]}], [{""type"": ""地理位置"", ""span"": ""印度"", ""offset"": [48, 50]}]]"
know,应该说像幸福工程这样的民间组织所从事的工作是政府行为无法代替的。,[]
know,应该说，在当前不乏粗制滥造、误人子弟的书籍市场中，“美育丛书”独树一帜，光芒耀眼。,[]
know,因为银行越少，客户选择的余地越少，银行的设备越现代化，一般的客户，特别是高龄客户就难以适应。,[]
know,因为黑洞的本质是存在视界，如何观测到黑洞的视界，是一个理论与观测均未解决的问题，彻底解决这个问题，还有相当长的路要走。,[]
know,因此，“勤学”、“劝学”、“奖学”历来被各个民族所尊崇和鼓励。,[]
know,因此，为了维护自身经济利益，拉美国家感到，需要通过加强地区经济集团，加速区域联合，来增强国家的经济实力，从而增强其在未来美洲自由贸易区谈判中的地位。,"[[{""type"": ""地理位置"", ""span"": ""美洲"", ""offset"": [60, 62]}], [{""type"": ""地理位置"", ""span"": ""拉美"", ""offset"": [14, 16]}]]"
know,因此，尽管中国队此次夺杯面临许多困难，但女队定要夺回尤伯杯，男队一定拼尽全力争汤姆斯杯。,"[[{""type"": ""人物"", ""span"": ""汤姆斯"", ""offset"": [39, 42]}], [{""type"": ""组织机构"", ""span"": ""中国队"", ""offset"": [5, 8]}], [{""type"": ""人物"", ""span"": ""尤伯"", ""offset"": [26, 28]}]]"
know,义勇军进行曲绕桥三日余音不绝。,[]
know,一些地方开始实行干部任用环保一票否决制。,[]
know,一些标志性的宏伟建筑，如国家大剧院，将在广场西侧兴建。,"[[{""type"": ""地理位置"", ""span"": ""广场"", ""offset"": [20, 22]}], [{""type"": ""地理位置"", ""span"": ""国家大剧院"", ""offset"": [12, 17]}]]"
know,一位美国朋友说，失业是件坏事，但保持一定的低失业率也有好处，它可促使人们不断充实自己的知识和技能，在劳动力市场上参与竞争，这对整个经济发展是有益的。,"[[{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [2, 4]}]]"
know,一天几百公里的跋涉，中午到达目的地第一件事即是急匆匆地奔赴新闻中心，向北京发图片，发稿子。,"[[{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [35, 37]}], [{""type"": ""组织机构"", ""span"": ""新闻中心"", ""offset"": [29, 33]}]]"
know,一是开发适应市场的新产品，增加就业岗位。,[]
know,一是发动广大职工积极参与企业民主管理，接受职工监督。,[]
know,医疗保险基金由企业和个人共同承担：企业按上年度职工个人工资总额8％提计，其中40％划入个人医疗账户，60％作为统筹金，职工个人按当年工资总额1％纳入医疗账户；医疗费分三段支付。,[]
know,一连串表面“井井有条”的程序后，顾新华对犯罪“供认不讳”，并在一审被判处死刑。,"[[{""type"": ""人物"", ""span"": ""顾新华"", ""offset"": [16, 19]}]]"
know,以加强小城镇建设刺激农村市场的实质是，刺激一部分“先富起来”的农民和农村地区的投资和消费。,[]
know,一级预防是通过改变人本身或环境的因素，以达到防止癌症发生的目的。,[]
know,以反对党工党和梅雷茨党则对总统的要求表示热烈欢迎，说反对党将在议会提出议案，要求解散议会和举行大选。,"[[{""type"": ""组织机构"", ""span"": ""工党"", ""offset"": [4, 6]}], [{""type"": ""组织机构"", ""span"": ""梅雷茨党"", ""offset"": [7, 11]}], [{""type"": ""组织机构"", ""span"": ""议会"", ""offset"": [31, 33]}], [{""type"": ""组织机构"", ""span"": ""议会"", ""offset"": [42, 44]}]]"
know,叶利钦于3月27日提名35岁的基里延科为新总理。,"[[{""type"": ""人物"", ""span"": ""基里延科"", ""offset"": [15, 19]}], [{""type"": ""人物"", ""span"": ""叶利钦"", ""offset"": [0, 3]}]]"
know,要准确说出那些年轻的部主任、副总编们属于哪个阵营也不是一件容易的事。,[]
know,要实现这一新时期党的建设总目标，各级党组织和广大党员、干部必须认真学习和努力实践邓小平党的建设理论，按照十五大对党的建设的总体部署，从思想上、组织上、作风上全面加强党的建设，更好地发挥党在社会主义改革开放和现代化建设事业中的领导核心作用。,"[[{""type"": ""人物"", ""span"": ""邓小平"", ""offset"": [40, 43]}], [{""type"": ""组织机构"", ""span"": ""十五大"", ""offset"": [52, 55]}]]"
know,要认识党虽然处在现阶段，但担负着领导社会主义初级阶段事业的重大责任。,[]
know,氧气管网中的氧气可以进入通过盒子的血液，而正常肺部需要通过口或鼻部排出的二氧化碳，可以通过另外一套纤维管网排出。,[]
know,演出结束后，观众用长达八分钟的掌声向来自中国的艺术家表示敬意。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [20, 22]}]]"
know,新华社北京5月7日电国务院副总理李岚清今天在中南海会见了美国前商务部长芭芭拉·弗兰克林。,"[[{""type"": ""组织机构"", ""span"": ""美国前商务部"", ""offset"": [28, 34]}], [{""type"": ""人物"", ""span"": ""芭芭拉·弗兰克林"", ""offset"": [35, 43]}], [{""type"": ""组织机构"", ""span"": ""新华社"", ""offset"": [0, 3]}], [{""type"": ""组织机构"", ""span"": ""国务院"", ""offset"": [10, 13]}], [{""type"": ""人物"", ""span"": ""李岚清"", ""offset"": [16, 19]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [3, 5]}], [{""type"": ""地理位置"", ""span"": ""中南海"", ""offset"": [22, 25]}]]"
know,新华社北京4月7日电英国业余游泳协会7日说，一位叫迈克尔·菲本斯的游泳选手被查出服用兴奋剂。,"[[{""type"": ""组织机构"", ""span"": ""新华社"", ""offset"": [0, 3]}], [{""type"": ""人物"", ""span"": ""迈克尔·菲本斯"", ""offset"": [25, 32]}], [{""type"": ""组织机构"", ""span"": ""英国业余游泳协会"", ""offset"": [10, 18]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [3, 5]}]]"
know,协议生效后，法航需有一两天才能全面恢复正常，对世界杯赛的影响可望消失。,"[[{""type"": ""组织机构"", ""span"": ""法航"", ""offset"": [6, 8]}]]"
know,血液中铁成份含量过高会促进血脂的氧化，进而加快血管钙化的速度，增加中风的危险。,[]
know,小小的纪念章托在手心，殷红得像一滴血、一蓬火。,[]
know,乡镇企业已经成为开拓农村市场，大力发展外向型经济的重要力量。,[]
know,想想当初就业之时，走进新工厂，踏上新岗位，展现在你面前的，不同样是一份陌生的工作吗？,[]
know,香港电视剧《追缉令》发行内地（附图片1张）,"[[{""type"": ""地理位置"", ""span"": ""香港"", ""offset"": [0, 2]}]]"
know,相当多的改制企业没有及时建立规范的治理结构，在那里，董事会不“懂事”，监事会不“监事”，形同虚设。,[]
know,相比之下，青岛海牛队和广州松日队的雨中之战虽然也是0∶0，但乏善可陈。,"[[{""type"": ""组织机构"", ""span"": ""广州松日队"", ""offset"": [11, 16]}], [{""type"": ""组织机构"", ""span"": ""青岛海牛队"", ""offset"": [5, 10]}]]"
know,现在，国有企业正在进行调整结构，转换机制，减员增效，扭亏增盈的战略性调整，这就需要经历一个改革、搞活的过程。,[]
know,显然，美国证券交易所的发展速度、规模及其财政状况都远远不及后来居上的纳斯达克证券交易所。,"[[{""type"": ""组织机构"", ""span"": ""纳斯达克证券交易所"", ""offset"": [34, 43]}], [{""type"": ""组织机构"", ""span"": ""美国证券交易所"", ""offset"": [3, 10]}]]"
know,悉尼是一个绿色、洁净的现代化城市。,"[[{""type"": ""地理位置"", ""span"": ""悉尼"", ""offset"": [0, 2]}]]"
know,我走上前，向他打开的琴盒里投下几枚硬币，又是一个突然，“恶狼”用中文问我：“你是中国人？”,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [40, 42]}]]"
know,我认为经济、科技和高等教育的发展要为消费服务。,[]
know,我们现在处于并将长时期处于社会主义初级阶段，党的建设应该从现阶段的实际出发，处理好与有中国特色的社会主义经济、政治、文化建设的关系，在新的实践中体现党的建设的时代特征。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [43, 45]}]]"
know,我国卫生部规定，共有72种天然资源可以既用于开发药品，又用于开发食品。,"[[{""type"": ""组织机构"", ""span"": ""卫生部"", ""offset"": [2, 5]}]]"
know,我估计她会说像疤痕，像笨拙女人手下的针线活儿。,[]
know,我的球迷丈夫也时常把我激得火冒三丈，却又无可奈何。,[]
know,为了安置减员分流职工，站党委提出“兴办实体，发展多元经济，拓宽就业门路，分流职工转岗不下岗”的工作思路，卖掉一部标致、一部桑塔纳和一部三菱吉普车，自筹资金购置6部大货车，选拔有驾驶技术的职工当司机，组建了月山车站汽车运贸公司，为减员增效，实施再就业工程迈出了切实的一步。,"[[{""type"": ""组织机构"", ""span"": ""站党委"", ""offset"": [11, 14]}], [{""type"": ""组织机构"", ""span"": ""月山车站汽车运贸公司"", ""offset"": [102, 112]}], [{""type"": ""组织机构"", ""span"": ""三菱"", ""offset"": [67, 69]}]]"
know,为达此目的，可以采取的一个具体步骤是吸收中国参加七国集团年会。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [20, 22]}], [{""type"": ""组织机构"", ""span"": ""七国集团"", ""offset"": [24, 28]}]]"
know,为创建、扩大晋察冀抗日根据地，中共中央决定组建晋察冀军区，他任晋察冀军区政治部主任。,"[[{""type"": ""组织机构"", ""span"": ""晋察冀军区政治部"", ""offset"": [31, 39]}], [{""type"": ""地理位置"", ""span"": ""晋察冀军区"", ""offset"": [23, 28]}], [{""type"": ""组织机构"", ""span"": ""中共中央"", ""offset"": [15, 19]}], [{""type"": ""地理位置"", ""span"": ""晋察冀抗日根据地"", ""offset"": [6, 14]}]]"
know,为办理飞行许可证，使馆把电话一直打到印尼交通部空运总局局长家里。,"[[{""type"": ""组织机构"", ""span"": ""印尼交通部空运总局"", ""offset"": [18, 27]}]]"
know,网络电话向我们走来（电脑．通信．网络）,[]
know,万名干部职工，5000农户采取不同形式投工捐资，全县共筹资400余万元。,[]
know,图为老人在公园报名参加户外活动。,[]
know,土耳其南部城市阿达纳、杰伊汉及附近地区27日下午发生里氏6．3级地震。,"[[{""type"": ""地理位置"", ""span"": ""阿达纳"", ""offset"": [7, 10]}], [{""type"": ""地理位置"", ""span"": ""杰伊汉"", ""offset"": [11, 14]}], [{""type"": ""地理位置"", ""span"": ""土耳其"", ""offset"": [0, 3]}]]"
know,同时，又与发达国家科研机构建立了联系，利用这些国家的资金和技术手段，共同研究和开发亚马孙的生物药品。,"[[{""type"": ""地理位置"", ""span"": ""亚马孙"", ""offset"": [41, 44]}]]"
know,同时，要提醒您的是，在治疗期间要忌食牛、羊肉，不饮酒，不吃辣，不服维生素c片，应多食黑米、黑芝麻、黑木耳等黑色食品。,[]
know,同时，据了解，相当多厂家的售后服务跟踪调查都是一片空白。,[]
know,通过这一手段，客户可将原有债务利率转换成对自己有利的形式，从而达到防范利率风险，降低债务成本的目的。,[]
know,听了老师的介绍，我真比听到女儿考了多少个双百分还要高兴！,[]
know,体育场每天早6时至8时向群众免费开放，体育馆、游泳馆等则增加综合服务，延长开放时间，采取灵活收费。,[]
know,倘若对客观环境的变化反应迟钝，就很难迅速地作出正确判断和决策，也就难免陷于被动甚至四处碰壁。,[]
know,泰国王储玛哈·哇集拉隆功今天结束了对中国的访问，离沪出境。,"[[{""type"": ""地理位置"", ""span"": ""泰国"", ""offset"": [0, 2]}], [{""type"": ""人物"", ""span"": ""玛哈·哇集拉隆功"", ""offset"": [4, 12]}], [{""type"": ""地理位置"", ""span"": ""沪"", ""offset"": [25, 26]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [18, 20]}]]"
know,他孜孜不倦地学习马列主义，全心全意地为人民服务，实事求是地指导工作。,"[[{""type"": ""人物"", ""span"": ""列"", ""offset"": [9, 10]}], [{""type"": ""人物"", ""span"": ""马"", ""offset"": [8, 9]}]]"
know,她同心合群，奋发图强，这正是香港人朝气蓬勃、拼搏奋斗精神的写照。,"[[{""type"": ""地理位置"", ""span"": ""香港"", ""offset"": [14, 16]}]]"
know,他说：“1997年7月1日香港就要回归祖国了，这是一件国人引以自豪、为之振奋的大喜事，我7月1日出国就是为了永远记住这一天，也是表达我对香港回归祖国的预祝。”,"[[{""type"": ""地理位置"", ""span"": ""香港"", ""offset"": [68, 70]}], [{""type"": ""地理位置"", ""span"": ""香港"", ""offset"": [13, 15]}]]"
know,她说：“如今，我们真是过上了安居乐业的好日子。”,[]
know,他说，中方在会上还特别提醒葡方，在实现司长级公务员本地化的过程中，要提高以中文为母语的澳门居民在其中的比例，为落实联合声明的有关规定创造条件。,"[[{""type"": ""地理位置"", ""span"": ""葡"", ""offset"": [13, 14]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [3, 4]}], [{""type"": ""地理位置"", ""span"": ""澳门"", ""offset"": [43, 45]}]]"
know,他说，中法两国经济各有特色，互补性强，双方合作还有很大潜力。,"[[{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [3, 4]}], [{""type"": ""地理位置"", ""span"": ""法"", ""offset"": [4, 5]}]]"
know,他说，公报反映了八国在未来20年内对待能源问题的基本原则，其中包括鼓励竞争、公平开放能源运输系统、实行合理的国家调控和促进对能源工业的投资等。,[]
know,她深表同情地开导我：“干吗还在这儿读书受穷吃苦，不如早早挣些钱好好享受一下青春。”,[]
know,他认为，中美首脑互访有利于“让美国人了解崭新的中国”。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [23, 25]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [5, 6]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [4, 5]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [15, 17]}]]"
know,他认为，在经济日益全球化的今天，富有远见的企业家已意识到不能再停留在到另一个国家赚了钱就一走了事的狭隘观念上，只有深深植根于这个国家、社会和人民心中，企业才能谋求持久的发展。,[]
know,他强调甲b中的泰达不同于甲a中的万达，实力优势要通过在心理、状态、用人等多种因素来体现。,"[[{""type"": ""组织机构"", ""span"": ""万达"", ""offset"": [16, 18]}], [{""type"": ""组织机构"", ""span"": ""泰达"", ""offset"": [7, 9]}]]"
know,他们以“思想好，作风硬，后劲足”而受到广泛欢迎。,[]
know,他们达成了共识：高新区面临“二次创业”，要求技术创新，提高水平，产业具有鲜明特色，达到一定的规模。,[]
know,他们表示，目前还没有想好这幅云石巨画最后放到哪里。,[]
know,他联络村里的泥瓦匠整修了校舍，而后逐户动员家长把孩子送进学校，全村适龄儿童入学率达到了85％以上。,[]
know,她更感谢《没有共产党就没有新中国》作者曹火星为这里谱写校歌、香港邵一夫先生为这里捐资建楼。,"[[{""type"": ""组织机构"", ""span"": ""共产党"", ""offset"": [7, 10]}], [{""type"": ""地理位置"", ""span"": ""香港"", ""offset"": [30, 32]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [14, 16]}], [{""type"": ""人物"", ""span"": ""邵一夫"", ""offset"": [32, 35]}], [{""type"": ""人物"", ""span"": ""曹火星"", ""offset"": [19, 22]}]]"
know,他边说边走到身边的柜子前，拉开一个个抽屉让我看，里面放满了分类后的登记表……,[]
know,所以“需求不足”的根源，最终可还原为供给有问题。,[]
know,孙大志，60年代毕业于北京艺术学院，先后师从于李瑞年、卫天霖、吴冠中、高冠华、罗尔纯等先生。,"[[{""type"": ""人物"", ""span"": ""李瑞年"", ""offset"": [23, 26]}], [{""type"": ""人物"", ""span"": ""孙大志"", ""offset"": [0, 3]}], [{""type"": ""人物"", ""span"": ""高冠华"", ""offset"": [35, 38]}], [{""type"": ""人物"", ""span"": ""卫天霖"", ""offset"": [27, 30]}], [{""type"": ""人物"", ""span"": ""吴冠中"", ""offset"": [31, 34]}], [{""type"": ""人物"", ""span"": ""罗尔纯"", ""offset"": [39, 42]}], [{""type"": ""组织机构"", ""span"": ""北京艺术学院"", ""offset"": [11, 17]}]]"
know,随着岁月的流逝和年龄距离的拉大，住读学生对丁晓莲的称呼也从“丁姐”变成了“丁姨”。,"[[{""type"": ""人物"", ""span"": ""丁"", ""offset"": [37, 38]}], [{""type"": ""人物"", ""span"": ""丁晓莲"", ""offset"": [21, 24]}], [{""type"": ""人物"", ""span"": ""丁"", ""offset"": [30, 31]}]]"
know,随着世界杯开幕日期的逼近，法航罢工风潮越来越令此间舆论关注和担忧，法国全国性日报《费加罗报》以“世界杯成为人质”的醒目标题评论这一事件。,"[[{""type"": ""组织机构"", ""span"": ""法航"", ""offset"": [13, 15]}], [{""type"": ""地理位置"", ""span"": ""法国"", ""offset"": [33, 35]}], [{""type"": ""组织机构"", ""span"": ""费加罗报"", ""offset"": [41, 45]}]]"
know,虽然旧货交易是整个社会商品流通的一小部分，但它对于活跃商品流通仍是不可或缺的。,[]
know,苏州医疗器械厂热心为眼疾患者服务,"[[{""type"": ""组织机构"", ""span"": ""苏州医疗器械厂"", ""offset"": [0, 7]}]]"
know,说着，他一边驾驶，一边用手在按钮上不断调整着“上”、“下”、“左”、“右”，并把空调也调高了一档。,[]
know,双方商定，由五丰行包销一年20万头生猪，南平负责组织生猪供应。,"[[{""type"": ""组织机构"", ""span"": ""五丰行"", ""offset"": [6, 9]}], [{""type"": ""组织机构"", ""span"": ""南平"", ""offset"": [20, 22]}]]"
know,首先，要把粮食行政主管部门的职能和粮食企业经营职责明确分开。,[]
know,熟悉世行运作的人士说，贷款一旦被推迟，将在几个月、甚至可能更长的时间后才能被重新考虑。,"[[{""type"": ""组织机构"", ""span"": ""世行"", ""offset"": [2, 4]}]]"
know,守门员：何—路易斯·切拉维特、鲁·路·迪亚斯、达·阿塞瓦尔；后卫：佩·萨拉维亚、塞·阿亚拉、卡·里瓦罗拉、弗·阿尔塞、里·罗哈斯、丹·卡尼扎、卡·加马拉；中场：胡·塞·埃西索、罗·阿库纳、埃·阿吉莱拉、卡·莫拉莱斯、卡·帕雷德斯；前锋：米·贝尼特斯、胡·塞·耶格罗斯、豪·冈玻斯、何·卡多萨、阿·罗哈斯、塞·拉米雷斯、乌·布里苏埃拉。,"[[{""type"": ""人物"", ""span"": ""鲁·路·迪亚斯"", ""offset"": [15, 22]}], [{""type"": ""人物"", ""span"": ""卡·帕雷德斯"", ""offset"": [108, 114]}], [{""type"": ""人物"", ""span"": ""丹·卡尼扎"", ""offset"": [65, 70]}], [{""type"": ""人物"", ""span"": ""塞·阿亚拉"", ""offset"": [40, 45]}], [{""type"": ""人物"", ""span"": ""罗·阿库纳"", ""offset"": [88, 93]}], [{""type"": ""人物"", ""span"": ""塞·拉米雷斯"", ""offset"": [152, 158]}], [{""type"": ""人物"", ""span"": ""胡·塞·耶格罗斯"", ""offset"": [125, 133]}], [{""type"": ""人物"", ""span"": ""佩·萨拉维亚"", ""offset"": [33, 39]}], [{""type"": ""人物"", ""span"": ""卡·加马拉"", ""offset"": [71, 76]}], [{""type"": ""人物"", ""span"": ""卡·里瓦罗拉"", ""offset"": [46, 52]}], [{""type"": ""人物"", ""span"": ""豪·冈玻斯"", ""offset"": [134, 139]}], [{""type"": ""人物"", ""span"": ""达·阿塞瓦尔"", ""offset"": [23, 29]}], [{""type"": ""人物"", ""span"": ""胡·塞·埃西索"", ""offset"": [80, 87]}], [{""type"": ""人物"", ""span"": ""乌·布里苏埃拉"", ""offset"": [159, 166]}], [{""type"": ""人物"", ""span"": ""何—路易斯·切拉维特"", ""offset"": [4, 14]}], [{""type"": ""人物"", ""span"": ""弗·阿尔塞"", ""offset"": [53, 58]}], [{""type"": ""人物"", ""span"": ""卡·莫拉莱斯"", ""offset"": [101, 107]}], [{""type"": ""人物"", ""span"": ""埃·阿吉莱拉"", ""offset"": [94, 100]}], [{""type"": ""人物"", ""span"": ""里·罗哈斯"", ""offset"": [59, 64]}], [{""type"": ""人物"", ""span"": ""何·卡多萨"", ""offset"": [140, 145]}], [{""type"": ""人物"", ""span"": ""米·贝尼特斯"", ""offset"": [118, 124]}], [{""type"": ""人物"", ""span"": ""阿·罗哈斯"", ""offset"": [146, 151]}]]"
know,试验证明，在吸无过滤嘴的香烟时，香烟燃烧过程中产生的尼古丁14％至20％都进了口腔，即使是有过滤嘴，进入口腔的尼古丁仍会有5％到12％。,[]
know,试验的数据表明，燃用液化石油气或天然气，发动机尾气中的一氧化碳比燃用汽油降低90％以上，碳氢化合物则降低31％，大大减少了尾气对空气造成的污染。,[]
know,市场行家认为，日元贬值主要有三个原因：一是日本是印尼最大债权国，印尼局势动荡牵制经济增长，进而影响日本债权回收；若形成新的不良债权，又将给日本经济投下阴影。,"[[{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [21, 23]}], [{""type"": ""地理位置"", ""span"": ""印尼"", ""offset"": [32, 34]}], [{""type"": ""地理位置"", ""span"": ""印尼"", ""offset"": [24, 26]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [49, 51]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [69, 71]}]]"
know,十八集电视连续剧《红树林》正由中国检察日报社影视部摄制。,"[[{""type"": ""组织机构"", ""span"": ""中国检察日报社影视部"", ""offset"": [15, 25]}]]"
know,声明说，印度政府已采取了保卫国家安全的所有必要措施。,"[[{""type"": ""地理位置"", ""span"": ""印度"", ""offset"": [4, 6]}]]"
know,声明还呼吁各大国，特别是联合国安理会常任理事国，在调整世界新秩序方面扮演更积极的角色，以维护南亚地区的和平与稳定。,"[[{""type"": ""地理位置"", ""span"": ""南亚"", ""offset"": [46, 48]}], [{""type"": ""组织机构"", ""span"": ""联合国安理会"", ""offset"": [12, 18]}]]"
know,上半时进行到20多分钟，右路进攻的辽宁队17号李从底线一记漂亮的斜射首破五牛队城门。,"[[{""type"": ""人物"", ""span"": ""李"", ""offset"": [23, 24]}], [{""type"": ""组织机构"", ""span"": ""辽宁队"", ""offset"": [17, 20]}], [{""type"": ""组织机构"", ""span"": ""五牛队"", ""offset"": [36, 39]}]]"
know,上百家建筑风格各异的大中型宾馆遍布市区，加上市中心的商场、娱乐中心和博物馆等高大古朴的建筑群，把小城点缀得十分典雅美丽。,[]
know,山是稳重的，这是我最初的观念。,[]
know,山东公安机关强化刑侦改革，全面提高刑侦民警破案能力。,"[[{""type"": ""地理位置"", ""span"": ""山东"", ""offset"": [0, 2]}]]"
know,沙特队教练佩雷拉：两支队都想胜，因此都作出了最大的努力。,"[[{""type"": ""组织机构"", ""span"": ""沙特队"", ""offset"": [0, 3]}], [{""type"": ""人物"", ""span"": ""佩雷拉"", ""offset"": [5, 8]}]]"
know,若引渡成功，他将成为近年来第二位从阿引渡回国的纳粹战犯。,"[[{""type"": ""地理位置"", ""span"": ""阿"", ""offset"": [17, 18]}]]"
know,如他晚年创作的《红色的力量》就只采用了两种主色，以绿衬红，可以说是举简治繁，很富特色。,[]
know,如今的水蜜桃果大色鲜，肉厚味醇，猛增至700万株。,[]
know,如今，他在新单位干得有声有色，被提拔为配电室主任。,[]
know,如果是阅读军旅散文，除了这些之外，还想从中感受一些『铁马秋风』、『挑灯看剑』的气韵。,[]
know,如果世界油价今后几年内仍然处于目前的低迷状态，挪威政府的财政收入将因此减少至少250亿挪威克朗。,"[[{""type"": ""地理位置"", ""span"": ""挪威"", ""offset"": [23, 25]}]]"
know,如果科研单位真正有权力裁减冗员，将部分经费用于为科学家配备助手，基本待遇与公司相当，光是那些博士后的家属就完全可以担当起这一重任。,[]
know,如果过去的矛盾因罗的退出而化解，那还好办，否则，巴西队可能有新的麻烦。,"[[{""type"": ""组织机构"", ""span"": ""巴西队"", ""offset"": [24, 27]}], [{""type"": ""人物"", ""span"": ""罗"", ""offset"": [8, 9]}]]"
know,如此说来，这手推车也自然不是等闲之物。,[]
know,日俄两国国内政局都充满变数，尽管日俄关系目前是历史最佳时期，但其脆弱性不言自明。,"[[{""type"": ""地理位置"", ""span"": ""日"", ""offset"": [16, 17]}], [{""type"": ""地理位置"", ""span"": ""俄"", ""offset"": [1, 2]}], [{""type"": ""地理位置"", ""span"": ""日"", ""offset"": [0, 1]}], [{""type"": ""地理位置"", ""span"": ""俄"", ""offset"": [17, 18]}]]"
know,然而作为新的经济增长点，必将成为新的消费热点。,[]
know,然而，这艘巨轮在初次航行中便撞冰山沉没，1000多名乘客遇难，令人痛惜！,[]
know,然而，从长远预测分析，油价低迷是反常现象。,[]
know,全国新闻专业期刊举行首届交流会强调,[]
know,全国人民代表大会澳门特别行政区筹备委员会第一次全体会议今天上午在北京人民大会堂开幕，国务院副总理、筹委会主任委员钱其琛在致开幕词中指出，筹建澳门特别行政区的工作已经启动，筹委会面临的工作是大量的、紧迫的，筹委们任重道远，希望大家齐心协力为澳门的平稳过渡、政权顺利交接作出贡献。,"[[{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [32, 34]}], [{""type"": ""地理位置"", ""span"": ""人民大会堂"", ""offset"": [34, 39]}], [{""type"": ""组织机构"", ""span"": ""国务院"", ""offset"": [42, 45]}], [{""type"": ""组织机构"", ""span"": ""筹委会"", ""offset"": [49, 52]}], [{""type"": ""人物"", ""span"": ""钱其琛"", ""offset"": [56, 59]}], [{""type"": ""地理位置"", ""span"": ""澳门"", ""offset"": [119, 121]}], [{""type"": ""组织机构"", ""span"": ""全国人民代表大会澳门特别行政区筹备委员会"", ""offset"": [0, 20]}], [{""type"": ""地理位置"", ""span"": ""澳门特别行政区"", ""offset"": [70, 77]}], [{""type"": ""组织机构"", ""span"": ""筹委会"", ""offset"": [85, 88]}]]"
know,全国人大常委会副委员长周光召、信息产业部部长吴基传、英特尔公司董事长安德鲁·葛鲁夫等应邀出席了这次活动。,"[[{""type"": ""组织机构"", ""span"": ""英特尔公司"", ""offset"": [26, 31]}], [{""type"": ""人物"", ""span"": ""周光召"", ""offset"": [11, 14]}], [{""type"": ""组织机构"", ""span"": ""全国人大常委会"", ""offset"": [0, 7]}], [{""type"": ""人物"", ""span"": ""安德鲁·葛鲁夫"", ""offset"": [34, 41]}], [{""type"": ""人物"", ""span"": ""吴基传"", ""offset"": [22, 25]}], [{""type"": ""组织机构"", ""span"": ""信息产业部"", ""offset"": [15, 20]}]]"
know,去年十二月二十四日，市委书记张敬涛召集县市主要负责同志研究信访工作时，提出三问：『假如上访群众是我们的父母姐妹，你会用什么样的感情对待他们？,"[[{""type"": ""组织机构"", ""span"": ""市委"", ""offset"": [10, 12]}], [{""type"": ""人物"", ""span"": ""张敬涛"", ""offset"": [14, 17]}]]"
know,请注意：两个短语都是“动宾结构”而非“偏正结构”，尽孝的不是儿女，而是父母也。,[]
know,清一色的四川红大理石被打磨得光可鉴人，正面刻金大字“永远盛开的紫荆花”。,"[[{""type"": ""地理位置"", ""span"": ""四川"", ""offset"": [4, 6]}]]"
know,清明上河新画卷———河南开封县创建文明县城记（附图片1张）,"[[{""type"": ""地理位置"", ""span"": ""开封县"", ""offset"": [12, 15]}], [{""type"": ""地理位置"", ""span"": ""河南"", ""offset"": [10, 12]}]]"
know,桥本还表示，日本将通过尽快处理不良资产迅速重建金融制度，早日实施经济对策，并着手改革法人税和所得税等税收制度。,"[[{""type"": ""人物"", ""span"": ""桥本"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [6, 8]}]]"
know,强调全社会要不断提高对职业培训意义的认识，将职业培训同教育和经济发展紧密结合，把中、小学九年基础教育变成继续升学或接受职业培训的准备阶段，让广大青少年懂得学习和职业培训互为一体，升学和职业培训没有贵贱之分。,[]
know,前卫寰岛队主场与四川全兴队0∶0握手言和。,"[[{""type"": ""组织机构"", ""span"": ""前卫寰岛队"", ""offset"": [0, 5]}], [{""type"": ""组织机构"", ""span"": ""四川全兴队"", ""offset"": [8, 13]}]]"
know,钱其琛说，公务员本地化、法律本地化和中文官方地位这三大问题一向是各方关注的焦点，它对澳门的平稳过渡和未来特别行政区的顺利运作至关重要，筹委会也会对此给予足够重视。,"[[{""type"": ""组织机构"", ""span"": ""筹委会"", ""offset"": [67, 70]}], [{""type"": ""人物"", ""span"": ""钱其琛"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""澳门"", ""offset"": [42, 44]}]]"
know,钱其琛会见美国参议员新华社北京五月二十六日电国务院副总理钱其琛今天下午在中南海会见美国参议员杰弗·宾格曼一行，双方就中美关系和共同关心的国际问题交换了意见。,"[[{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [59, 60]}], [{""type"": ""人物"", ""span"": ""钱其琛"", ""offset"": [0, 3]}], [{""type"": ""人物"", ""span"": ""杰弗·宾格曼"", ""offset"": [46, 52]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [58, 59]}], [{""type"": ""组织机构"", ""span"": ""新华社"", ""offset"": [10, 13]}], [{""type"": ""人物"", ""span"": ""钱其琛"", ""offset"": [28, 31]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [5, 7]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [41, 43]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [13, 15]}], [{""type"": ""地理位置"", ""span"": ""中南海"", ""offset"": [36, 39]}], [{""type"": ""组织机构"", ""span"": ""国务院"", ""offset"": [22, 25]}]]"
know,前两届尤伯杯赛决赛，中国女队虽有夺杯实力，但终因大赛经验、队员心理等原因与尤伯杯两次擦肩而过。,"[[{""type"": ""人物"", ""span"": ""尤伯"", ""offset"": [3, 5]}], [{""type"": ""组织机构"", ""span"": ""中国女队"", ""offset"": [10, 14]}], [{""type"": ""人物"", ""span"": ""尤伯"", ""offset"": [37, 39]}]]"
know,其中用于交通的消费支出比上年增长15·8％，用于通信支出比上年增长18·1％。,[]
know,企业应出的这部分钱不用交上来，当企业出现下岗职工需要市再就业基金提供救助时，企业也要按比例出一部分。,[]
know,其次，中国倡导并积极参加了打击“金三角”毒品犯罪活动的次区域合作，有效阻止了本地区毒品向世界市场的贩运。,"[[{""type"": ""地理位置"", ""span"": ""金三角"", ""offset"": [16, 19]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [3, 5]}]]"
know,其次，他不具高人一头的身材，腿与上身的比例也不尽如人意，作为男舞员很吃亏。,[]
know,彭真同志多次讲过，他第一次见到毛泽东同志是在1937年。,"[[{""type"": ""人物"", ""span"": ""彭真"", ""offset"": [0, 2]}], [{""type"": ""人物"", ""span"": ""毛泽东"", ""offset"": [15, 18]}]]"
know,盘锦一些盛产棚菜的乡镇纷纷同高升镇联系，搭上高升镇与市场对接的产业桥。,"[[{""type"": ""地理位置"", ""span"": ""盘锦"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""高升镇"", ""offset"": [14, 17]}], [{""type"": ""地理位置"", ""span"": ""高升镇"", ""offset"": [22, 25]}]]"
know,女队：坚持优势，发展优势，进一步强化优势,[]
know,农民们的民主要求是强烈的，但是如何实行民主，实行怎样的民主，并非一下子就清楚的。,[]
know,尼加拉瓜警方今天宣布，在国际刑警组织配合下，查获一架从事贩毒活动的小型喷气式飞机。,"[[{""type"": ""地理位置"", ""span"": ""尼加拉瓜"", ""offset"": [0, 4]}], [{""type"": ""组织机构"", ""span"": ""国际刑警组织"", ""offset"": [12, 18]}]]"
know,能为千古文章者，无一不是极为爱国、关心世事、敢为天下抒忧愤的。,[]
know,男双在网前的平抽、封网技术都很差，亟待改进；我们男单的网前技术也需要改进，男单网前技术方面，丹麦队员的技术特点是我们的方向。,"[[{""type"": ""组织机构"", ""span"": ""丹麦"", ""offset"": [46, 48]}]]"
know,那天，贺龙同志有事不在家，老总夫人薛明，再有彭真校长和夫人张洁清算我这方的代表；杨尚昆和李伯钊同志夫妇，王若飞和李培之同志夫妇是白林一方的代表，大家热热闹闹在一起吃了顿饭，说了些祝福的话，我俩就算是成婚了。,"[[{""type"": ""人物"", ""span"": ""彭真"", ""offset"": [22, 24]}], [{""type"": ""人物"", ""span"": ""王若飞"", ""offset"": [52, 55]}], [{""type"": ""人物"", ""span"": ""李培之"", ""offset"": [56, 59]}], [{""type"": ""人物"", ""span"": ""贺龙"", ""offset"": [3, 5]}], [{""type"": ""人物"", ""span"": ""白林"", ""offset"": [64, 66]}], [{""type"": ""人物"", ""span"": ""张洁清"", ""offset"": [29, 32]}], [{""type"": ""人物"", ""span"": ""薛明"", ""offset"": [17, 19]}], [{""type"": ""人物"", ""span"": ""杨尚昆"", ""offset"": [40, 43]}], [{""type"": ""人物"", ""span"": ""李伯钊"", ""offset"": [44, 47]}]]"
know,纳税人刷卡办税，一次性完成从申报到缴税一条龙涉税事项，全过程由手工操作时的几十分钟缩短为1分钟，彻底改变了过去排队办税的现象。,[]
know,那么，这里我们应该引申出一个重要结论，即社会主义精神文明建设也应当以改革的精神来进行。,[]
know,那次访问给我们留下了美好的印象。,[]
know,目前她们正在为我国四个城市引进外资建设规模更大的发电项目进行不懈的努力。,[]
know,目前的技术条件和制作水平还缺乏竞争能力，在国际电影制作业如摄影、录音、美术、剪辑等诸多方面的科技竞争日趋激烈、各国电影争相利用电影的高科技制造影像奇观以争夺观众的情况下，国产电影应该急起直追。,[]
know,目前，世界其他著名火箭以其发射次数、发射频率和发射成功率构成的竞争实力已经远远超过了长征火箭。,[]
know,目前，全省生产经营正常的乡镇企业中已签订劳动合同的有二百零七点六万人，占同口径从业人员的百分之七十五点九。,[]
know,目前，国际社会要求双方必须尊重和遵守各自的实际控制线，不以任何理由越过控制线，不谋求单方面改变这一地区现状，以防止造成局势进一步紧张。,[]
know,目标令人吃惊———探访韩国队营地,"[[{""type"": ""组织机构"", ""span"": ""韩国队"", ""offset"": [11, 14]}]]"
know,某日下“馆子”，碰到一个有趣的情景。,[]
know,明天气象预报（5月5日20时—5月6日20时）,[]
know,明代大医药学家李时珍的父亲李言闻屡试不第，于是将仕进的希望寄托在二儿子李时珍身上，而李时珍对八股文不感兴趣，对医药学特别酷爱。,"[[{""type"": ""人物"", ""span"": ""李时珍"", ""offset"": [7, 10]}], [{""type"": ""人物"", ""span"": ""李言闻"", ""offset"": [13, 16]}], [{""type"": ""人物"", ""span"": ""李时珍"", ""offset"": [35, 38]}], [{""type"": ""人物"", ""span"": ""李时珍"", ""offset"": [42, 45]}]]"
know,米亚特还提醒我们注意维和行动同联合国授权一些国家执行的强制实施安理会决议、缔造和建设和平行动的区别。,"[[{""type"": ""组织机构"", ""span"": ""安理会"", ""offset"": [31, 34]}], [{""type"": ""人物"", ""span"": ""米亚特"", ""offset"": [0, 3]}], [{""type"": ""组织机构"", ""span"": ""联合国"", ""offset"": [15, 18]}]]"
know,孟加拉国外交部官员今天对记者说，哈西娜总理的信是于6月1日下午由孟外交部分别转交给印度和巴基斯坦两国驻达卡高级专员的。,"[[{""type"": ""组织机构"", ""span"": ""孟外交部"", ""offset"": [32, 36]}], [{""type"": ""地理位置"", ""span"": ""巴基斯坦"", ""offset"": [44, 48]}], [{""type"": ""组织机构"", ""span"": ""孟加拉国外交部"", ""offset"": [0, 7]}], [{""type"": ""人物"", ""span"": ""哈西娜"", ""offset"": [16, 19]}], [{""type"": ""地理位置"", ""span"": ""印度"", ""offset"": [41, 43]}], [{""type"": ""地理位置"", ""span"": ""达卡"", ""offset"": [51, 53]}]]"
know,每年的端午节，人们都到此登沙山观月泉，已成一种风俗。,[]
know,美国司法部的官员也说，当一家公司在某一领域内获得垄断优势后，很容易破坏正常的市场竞争，反垄断法正是为了维护尽可能公平的市场竞争环境，防范并严惩行业巨头的违法行为。,"[[{""type"": ""组织机构"", ""span"": ""美国司法部"", ""offset"": [0, 5]}]]"
know,美国各大银行早已开始重新组合及合并，并在加拿大扩展业务范围，美国银行财多势大，加拿大银行在竞争中处于劣势，如不重新组合，恐怕连本土的金融市场也难自保。,"[[{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""加拿大"", ""offset"": [39, 42]}], [{""type"": ""地理位置"", ""span"": ""加拿大"", ""offset"": [20, 23]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [30, 32]}]]"
know,美国队和俄罗斯队主教练在击败巴西队和澳大利亚队打入决赛后，不约而同地认为本队取胜的关键在于防守。,"[[{""type"": ""组织机构"", ""span"": ""美国队"", ""offset"": [0, 3]}], [{""type"": ""组织机构"", ""span"": ""俄罗斯队"", ""offset"": [4, 8]}], [{""type"": ""组织机构"", ""span"": ""澳大利亚队"", ""offset"": [18, 23]}], [{""type"": ""组织机构"", ""span"": ""巴西队"", ""offset"": [14, 17]}]]"
know,美国“哥伦比亚”号航天飞机上的宇航员今天一边进行实验，一边继续抢修出了故障的二氧化碳清除装置。,"[[{""type"": ""组织机构"", ""span"": ""美国“哥伦比亚”号航天飞机"", ""offset"": [0, 13]}]]"
know,每个地方都有其经济特点，所以说高校发展应围绕经济建设这个中心，应该每个地方有所侧重，有所不同。,[]
know,马来西亚林吉特由上周五的3．985林吉特兑1美元贬到3．990林吉特兑1美元；新加坡元由1．6934元兑1美元跌到1．7095元兑1美元；泰铢由43．12铢兑1美元跌到43．95铢兑1美元。,"[[{""type"": ""地理位置"", ""span"": ""新加坡"", ""offset"": [39, 42]}], [{""type"": ""地理位置"", ""span"": ""马来西亚"", ""offset"": [0, 4]}]]"
know,马克思主义带给这个世界的改造运动，是前所未有的。,"[[{""type"": ""人物"", ""span"": ""马克思"", ""offset"": [0, 3]}]]"
know,裸露的地方被岁月的巨手撕扯得破碎不堪，支离嶙峋，不免让人萌生一种凄凉，一种沉重，体味生命的古老和古老生命的艰难。,[]
know,伦敦一家叫威廉·希尔的博彩公司声称他们已经收到1亿英镑的投注，其中最高注是12万英镑，他赌荷兰队捧得世界杯。,"[[{""type"": ""地理位置"", ""span"": ""伦敦"", ""offset"": [0, 2]}], [{""type"": ""组织机构"", ""span"": ""荷兰队"", ""offset"": [45, 48]}], [{""type"": ""组织机构"", ""span"": ""威廉·希尔"", ""offset"": [5, 10]}]]"
know,鲁宾明确指出，对政府的这种指控完全没有事实根据，美国政府不想也没有向中国转让敏感技术，事实真相总有一天会大白于天下；众议院的这种做法令人“非常失望”，将使美国的商业卫星产业受到威胁，使美国的竞争力受到损害。,"[[{""type"": ""组织机构"", ""span"": ""众议院"", ""offset"": [58, 61]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [92, 94]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [77, 79]}], [{""type"": ""人物"", ""span"": ""鲁宾"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [34, 36]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [24, 26]}]]"
know,另一方面，龙口的经济基础使其有了增加科技投入的能力，只要真正重视人才、信息和创新能力的开发，一定会有跳跃式的发展。,"[[{""type"": ""地理位置"", ""span"": ""龙口"", ""offset"": [5, 7]}]]"
know,令人欣慰的是，茅忠谨无缘中级职称难行医的消息见报后，引起了有关领导部门的重视。,"[[{""type"": ""人物"", ""span"": ""茅忠谨"", ""offset"": [7, 10]}]]"
know,另据报道，俄罗斯外长普里马科夫昨天在伦敦表示，反对北约对南斯拉夫采取军事干预行动，他希望即将举行的叶利钦总统同米洛舍维奇总统的会晤能够为解决科索沃危机找到办法。,"[[{""type"": ""地理位置"", ""span"": ""南斯拉夫"", ""offset"": [28, 32]}], [{""type"": ""地理位置"", ""span"": ""伦敦"", ""offset"": [18, 20]}], [{""type"": ""人物"", ""span"": ""普里马科夫"", ""offset"": [10, 15]}], [{""type"": ""人物"", ""span"": ""米洛舍维奇"", ""offset"": [55, 60]}], [{""type"": ""地理位置"", ""span"": ""科索沃"", ""offset"": [70, 73]}], [{""type"": ""人物"", ""span"": ""叶利钦"", ""offset"": [49, 52]}], [{""type"": ""组织机构"", ""span"": ""北约"", ""offset"": [25, 27]}], [{""type"": ""地理位置"", ""span"": ""俄罗斯"", ""offset"": [5, 8]}]]"
know,两国边界机构去年会晤、会谈100多次，没有一次是因为纠纷引起的。,[]
know,理由多多，最无奈的却是：5月恰逢双重考试，她攻读的博士学位论文要通考；她任教的两所学校，也要在这段时日大考。,[]
know,李鹏表示，中国人大愿进一步发展同比利时议会、欧洲委员会议会和西欧各国议会之间的友好关系，为增进国家关系的总体发展作出贡献。,"[[{""type"": ""组织机构"", ""span"": ""欧洲委员会议会"", ""offset"": [22, 29]}], [{""type"": ""组织机构"", ""span"": ""比利时议会"", ""offset"": [16, 21]}], [{""type"": ""地理位置"", ""span"": ""西欧"", ""offset"": [30, 32]}], [{""type"": ""组织机构"", ""span"": ""中国人大"", ""offset"": [5, 9]}], [{""type"": ""人物"", ""span"": ""李鹏"", ""offset"": [0, 2]}]]"
know,立案不结、以罚代刑等问题有较大改观。,[]
know,快10年了，每当夜幕降临，黄小目和他的女子文化夜校就这样迎来了一批又一批农家妇女。,"[[{""type"": ""人物"", ""span"": ""黄小目"", ""offset"": [13, 16]}], [{""type"": ""组织机构"", ""span"": ""女子文化夜校"", ""offset"": [19, 25]}]]"
know,可这一年多里，我却和爸爸较上劲了。,[]
know,可以预见，欧元启用后，欧元同美元的斗争将不可避免，这场斗争将是激烈的和长期的，其结果将会改变欧美关系，推动欧美关系朝着“更加平等”的方向发展。,"[[{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [54, 55]}], [{""type"": ""地理位置"", ""span"": ""欧"", ""offset"": [46, 47]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [47, 48]}], [{""type"": ""地理位置"", ""span"": ""欧"", ""offset"": [53, 54]}]]"
know,可以说，“中美关系已成为彼此最重要的双边关系之一”。,"[[{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [6, 7]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [5, 6]}]]"
know,科索沃阿族政党民主联盟昨天对北约日前在南斯拉夫边界举行的空军演习表示欢迎，认为这是为阿族同塞尔维亚继续对话提供的“必要帮助”。,"[[{""type"": ""地理位置"", ""span"": ""科索沃"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""塞尔维亚"", ""offset"": [45, 49]}], [{""type"": ""地理位置"", ""span"": ""南斯拉夫"", ""offset"": [19, 23]}], [{""type"": ""组织机构"", ""span"": ""空军"", ""offset"": [28, 30]}], [{""type"": ""组织机构"", ""span"": ""民主联盟"", ""offset"": [7, 11]}], [{""type"": ""组织机构"", ""span"": ""北约"", ""offset"": [14, 16]}]]"
know,克马尔的女儿让娜今年读五年级，她所在的班上有30多名同学，该班的“家委会”由10名家长组成。,"[[{""type"": ""人物"", ""span"": ""让娜"", ""offset"": [6, 8]}], [{""type"": ""组织机构"", ""span"": ""家委会"", ""offset"": [33, 36]}], [{""type"": ""人物"", ""span"": ""克马尔"", ""offset"": [0, 3]}]]"
know,抗战时期的联大和解放战争时期的北大，办学条件艰苦，但所聘教师仍然都是第一流的，不论其政治立场，学术派别，出身高低，留洋与否，只要有真才实学，确具专长，一律受到尊重。,"[[{""type"": ""组织机构"", ""span"": ""北大"", ""offset"": [15, 17]}], [{""type"": ""组织机构"", ""span"": ""联大"", ""offset"": [5, 7]}]]"
know,军事理论的变革直接影响着军事斗争的变革。,[]
know,据新华社北京6月11日电（吴广义）《东史郎诉讼案与南京大屠杀真相》一书近日由人民出版社出版。,"[[{""type"": ""人物"", ""span"": ""吴广义"", ""offset"": [13, 16]}], [{""type"": ""组织机构"", ""span"": ""人民出版社"", ""offset"": [38, 43]}], [{""type"": ""人物"", ""span"": ""东史郎"", ""offset"": [18, 21]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [4, 6]}], [{""type"": ""地理位置"", ""span"": ""南京"", ""offset"": [25, 27]}], [{""type"": ""组织机构"", ""span"": ""新华社"", ""offset"": [1, 4]}]]"
know,据悉，玉泉营环岛家具城火灾是华泰保险公司1996年成立以来的最大损失标的。,"[[{""type"": ""组织机构"", ""span"": ""华泰保险公司"", ""offset"": [14, 20]}], [{""type"": ""地理位置"", ""span"": ""玉泉营环岛家具城"", ""offset"": [3, 11]}]]"
know,据群众反映，庙会开始的前一天，干部就开始在包定的饭馆吃喝，一直吃到5天庙会结束，每天少则几桌，多则几十桌。,[]
know,据李庄同志回忆，里庄的民风淳朴，里庄人民养育、支持了《人民日报》。,"[[{""type"": ""地理位置"", ""span"": ""里庄"", ""offset"": [16, 18]}], [{""type"": ""地理位置"", ""span"": ""里庄"", ""offset"": [8, 10]}], [{""type"": ""组织机构"", ""span"": ""人民日报"", ""offset"": [27, 31]}], [{""type"": ""人物"", ""span"": ""李庄"", ""offset"": [1, 3]}]]"
know,据了解，我国各地电信局基本上没有开设此项业务。,"[[{""type"": ""组织机构"", ""span"": ""电信局"", ""offset"": [8, 11]}]]"
know,据此，笔者建议，各金融部门应加强对广大农民进行反假币知识、技巧及有关法律法规的宣传，以维护农村正常的金融秩序和社会安定。,[]
know,局长杜森伯格在法兰克福举行相关记者招待会，他对意大利和比利时国债超标状况能否改善表示怀疑，认为它们的状况“令人忧虑”。,"[[{""type"": ""地理位置"", ""span"": ""意大利"", ""offset"": [23, 26]}], [{""type"": ""地理位置"", ""span"": ""比利时"", ""offset"": [27, 30]}], [{""type"": ""人物"", ""span"": ""杜森伯格"", ""offset"": [2, 6]}], [{""type"": ""地理位置"", ""span"": ""法兰克福"", ""offset"": [7, 11]}]]"
know,据报道，这项法案是罗政府同国际货币基金组织和世界银行的代表经过反复磋商，按照国际金融领域通行原则制定的。,"[[{""type"": ""地理位置"", ""span"": ""罗"", ""offset"": [9, 10]}], [{""type"": ""组织机构"", ""span"": ""国际货币基金组织"", ""offset"": [13, 21]}], [{""type"": ""组织机构"", ""span"": ""世界银行"", ""offset"": [22, 26]}]]"
know,九冬会的竞赛项目已经确定，共设速度滑冰、短道速滑、花样滑冰、冰球、越野滑雪、高山滑雪、跳台滑雪、冬季两项、自由式滑雪9大项，62小项比赛。,[]
know,经河南省司法厅和郑州市二七区委、区政府调查了解，新闻单位的报道完全属实。,"[[{""type"": ""组织机构"", ""span"": ""河南省司法厅"", ""offset"": [1, 7]}], [{""type"": ""组织机构"", ""span"": ""郑州市二七区委"", ""offset"": [8, 15]}]]"
know,经过她反复动员，死者家属的思想工作终于做通了。,[]
know,今天，我把不大为人所知的一些往事写下来，作为对先生深切的悼念！,[]
know,近日，兰州市安宁区刘家堡小学240多名小学生，成为甘肃省博物馆免费接送参观的又一批小客人。,"[[{""type"": ""地理位置"", ""span"": ""甘肃省博物馆"", ""offset"": [25, 31]}], [{""type"": ""组织机构"", ""span"": ""安宁区刘家堡小学"", ""offset"": [6, 14]}], [{""type"": ""地理位置"", ""span"": ""兰州市"", ""offset"": [3, 6]}]]"
know,今年年初，党中央、国务院根据国内外经济形势的变化，及时作出扩大内需、保持经济持续快速增长的重大决策。,"[[{""type"": ""组织机构"", ""span"": ""党中央"", ""offset"": [5, 8]}], [{""type"": ""组织机构"", ""span"": ""国务院"", ""offset"": [9, 12]}]]"
know,今年2月，金大中新政府成立后，社会舆论要求惩治对金融危机负有重大责任者。,"[[{""type"": ""人物"", ""span"": ""金大中"", ""offset"": [5, 8]}]]"
know,尽管他在担任荷兰中央银行行长时对荷兰经济的发展做出了贡献，也因此而积累了丰富经验，但现在杜氏面对的不是一国政府，而是11国，加之欧元对国际金融市场的冲击和反冲击也是一个未知数。,"[[{""type"": ""地理位置"", ""span"": ""荷兰"", ""offset"": [16, 18]}], [{""type"": ""组织机构"", ""span"": ""荷兰中央银行"", ""offset"": [6, 12]}], [{""type"": ""人物"", ""span"": ""杜"", ""offset"": [44, 45]}]]"
know,结果，中国男队以5个2∶0轻松赢下本场比赛。,"[[{""type"": ""组织机构"", ""span"": ""中国男队"", ""offset"": [3, 7]}]]"
know,教育系统只有用邓小平理论教育全体党员、干部和师生员工，才能把对邓小平理论的认识提高到党的十五大要求的新水平，才能更好地实现十五大确定的跨世纪战略目标和战略部署。,"[[{""type"": ""人物"", ""span"": ""邓小平"", ""offset"": [7, 10]}], [{""type"": ""组织机构"", ""span"": ""十五大"", ""offset"": [61, 64]}], [{""type"": ""人物"", ""span"": ""邓小平"", ""offset"": [31, 34]}], [{""type"": ""组织机构"", ""span"": ""十五大"", ""offset"": [44, 47]}]]"
know,胶卷冲洗是没有废品率的行业，摄影作品往往是不可重复的，尤其是具有重要意义的作品，一旦出现问题无法弥补。,[]
know,江泽民对葛兰素·威康公司为促进中国制药技术的发展给予的帮助表示赞赏，并祝贺中国卫生部和葛兰素·威康中国有限公司关于中国肝炎防治教育项目备忘录的签署。,"[[{""type"": ""组织机构"", ""span"": ""中国卫生部"", ""offset"": [37, 42]}], [{""type"": ""人物"", ""span"": ""江泽民"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [15, 17]}], [{""type"": ""组织机构"", ""span"": ""葛兰素·威康公司"", ""offset"": [4, 12]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [57, 59]}], [{""type"": ""组织机构"", ""span"": ""葛兰素·威康中国有限公司"", ""offset"": [43, 55]}]]"
know,监考教师说，电视监控有效制止了夹带舞弊等违纪行为，使监考人员能够抽出更多时间清查代考者。,[]
know,加强对小企业改制的规范和指导。,[]
know,记者不久前就这一问题采访了此间一些专业人士。,[]
know,基于以上分析，路甬祥加重语气表示，在世纪之交扭转科技投入不足的局面不仅完全可能，而且势在必行。,"[[{""type"": ""人物"", ""span"": ""路甬祥"", ""offset"": [7, 10]}]]"
know,纪念活动还包括整修包公墓园、包公祠、包公出生地遗迹，新建青天阁、包公塑像、孝肃亭、包公纪念馆，并举办包公文化研讨会、开展招商引资、经贸洽谈。,"[[{""type"": ""人物"", ""span"": ""包公"", ""offset"": [32, 34]}], [{""type"": ""地理位置"", ""span"": ""包公墓园"", ""offset"": [9, 13]}], [{""type"": ""人物"", ""span"": ""包公"", ""offset"": [50, 52]}], [{""type"": ""地理位置"", ""span"": ""青天阁"", ""offset"": [28, 31]}], [{""type"": ""地理位置"", ""span"": ""包公祠"", ""offset"": [14, 17]}], [{""type"": ""地理位置"", ""span"": ""包公纪念馆"", ""offset"": [41, 46]}], [{""type"": ""地理位置"", ""span"": ""孝肃亭"", ""offset"": [37, 40]}], [{""type"": ""人物"", ""span"": ""包公"", ""offset"": [18, 20]}]]"
know,货币持续反弹是本地区金融形势趋于好转的一种迹象。,[]
know,会后，宋平等参观了中国计生协会“生命绿舟”生殖健康服务中心。,"[[{""type"": ""人物"", ""span"": ""宋平"", ""offset"": [3, 5]}], [{""type"": ""组织机构"", ""span"": ""中国计生协会“生命绿舟”生殖健康服务中心"", ""offset"": [9, 29]}]]"
know,黄作兴一开始研究，就选择了国内空白的中压调节型蝶阀作为攻关目标。,"[[{""type"": ""人物"", ""span"": ""黄作兴"", ""offset"": [0, 3]}]]"
know,环境监测技术人员更加注重对空气污染监测技术的研究，为逐步建立空气污染预报、预警系统提供了可靠的技术支持。,[]
know,缓解财政紧张状况，最根本的是发展经济，拓宽生财聚财的渠道。,[]
know,画展开幕那天，中国美术馆的大厅排起了长队，人们争相购买作者介绍手册。,"[[{""type"": ""地理位置"", ""span"": ""中国美术馆"", ""offset"": [7, 12]}]]"
know,胡老说，当画画疲倦时就到院里去看看，给这盆花浇点水，给那棵花剪剪枝，回来再接着画，画累了再出去，如此循环往复，脑体结合，有益健康，胜过吃药。,"[[{""type"": ""人物"", ""span"": ""胡"", ""offset"": [0, 1]}]]"
know,胡锦涛强调，中国共产党愿在党际关系四项原则的基础上，继续致力于发展同包括罗社会民主主义党在内的罗主要政党之间的党际交流和合作。,"[[{""type"": ""地理位置"", ""span"": ""罗"", ""offset"": [47, 48]}], [{""type"": ""组织机构"", ""span"": ""中国共产党"", ""offset"": [6, 11]}], [{""type"": ""人物"", ""span"": ""胡锦涛"", ""offset"": [0, 3]}], [{""type"": ""组织机构"", ""span"": ""罗社会民主主义党"", ""offset"": [36, 44]}]]"
know,后来，青藏高原逐渐隆起，改变了亚洲、非洲乃至世界的气候环境。,"[[{""type"": ""地理位置"", ""span"": ""青"", ""offset"": [3, 4]}], [{""type"": ""地理位置"", ""span"": ""非洲"", ""offset"": [18, 20]}], [{""type"": ""地理位置"", ""span"": ""藏"", ""offset"": [4, 5]}], [{""type"": ""地理位置"", ""span"": ""亚洲"", ""offset"": [15, 17]}]]"
know,何泰权／姜京珍的拼搏精神再一次感染了现场的每一位观众，人们不断用热烈的掌声倾注着对这两位悲壮的赛场斗士的尊敬之情。,"[[{""type"": ""人物"", ""span"": ""姜京珍"", ""offset"": [4, 7]}], [{""type"": ""人物"", ""span"": ""何泰权"", ""offset"": [0, 3]}]]"
know,好事没有白做，好事得到了好报！,[]
know,还有一些影片，如《超导》、《生命如歌》、《上海新娘》、《激情辩护》、《朗朗星空》、《黄连厚朴》、《爱情麻辣烫》、《下辈子还做母子》、《背起爸爸上学》等因名额所限虽未能获奖，但也属优秀之列。,"[[{""type"": ""地理位置"", ""span"": ""上海"", ""offset"": [21, 23]}]]"
know,海钓比赛地点在厦门与金门之间的海域。,"[[{""type"": ""地理位置"", ""span"": ""厦门"", ""offset"": [7, 9]}], [{""type"": ""地理位置"", ""span"": ""金门"", ""offset"": [10, 12]}]]"
know,关于要素市场的意见分歧，除了因对资料掌握的差异外，很大程度上是由于对“市场”的不同理解所致。,[]
know,关于台湾问题，克林顿说，他将向中国领导人重申美国向中方作出的承诺，再次表明美国坚持一个中国的政策，遵守中美三个联合公报的原则。,"[[{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [51, 52]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [37, 39]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [15, 17]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [43, 45]}], [{""type"": ""地理位置"", ""span"": ""台湾"", ""offset"": [2, 4]}], [{""type"": ""人物"", ""span"": ""克林顿"", ""offset"": [7, 10]}], [{""type"": ""地理位置"", ""span"": ""中"", ""offset"": [25, 26]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [22, 24]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [52, 53]}]]"
know,共建注重加强基层组织建设本报讯济南军区某炮团十多年来与符山镇先后有十五个基层党支部结成了共建『对子』，定期组织军地十五对支部书记、副书记学习有关党建理论知识和党支部工作细则，每年举办两期培训班，并采取走出去、请进来的办法，组织『一班人』到有关单位参观学习。,"[[{""type"": ""地理位置"", ""span"": ""济南军区"", ""offset"": [15, 19]}], [{""type"": ""地理位置"", ""span"": ""符山镇"", ""offset"": [27, 30]}]]"
know,更加激烈的竞争，对人才，对每个社会成员的素质，都提出了更高的要求。,[]
know,根据测算，海卫1表面温度已经从“旅行者”号探测器1989年造访时的零下236摄氏度上升到零下234摄氏度。,"[[{""type"": ""地理位置"", ""span"": ""“旅行者”号探测器"", ""offset"": [15, 24]}], [{""type"": ""地理位置"", ""span"": ""海卫1"", ""offset"": [5, 8]}]]"
know,该校坚持对学生以科学文化为主线，德、智、体、美、劳协调发展，全面提高学生的素质。,[]
know,该校积极引导哲学社会科学的教学科研人员强化“经济建设主战场”意识，拓宽应用研究和发展决策咨询研究。,[]
know,该书是迄今为止国内较为全面、系统地研究周恩来经济思想的一部专著，有助于深化对周恩来思想的研究。,"[[{""type"": ""人物"", ""span"": ""周恩来"", ""offset"": [38, 41]}], [{""type"": ""人物"", ""span"": ""周恩来"", ""offset"": [19, 22]}]]"
know,该报引述美贸易代表巴尔舍夫斯基的话说：“日本所发生的事正在冲击它的所有邻国，也给世界带来更大的不稳。”,"[[{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [20, 22]}], [{""type"": ""人物"", ""span"": ""巴尔舍夫斯基"", ""offset"": [9, 15]}], [{""type"": ""地理位置"", ""span"": ""美"", ""offset"": [4, 5]}]]"
know,冯·皮勒说，这次会议的主题是：“伙伴关系和活力”，这也正是对德国和亚太地区未来关系恰如其分的表述，即双方要保持合作伙伴关系，同时又要不断给这种关系注入活力。,"[[{""type"": ""地理位置"", ""span"": ""亚太"", ""offset"": [33, 35]}], [{""type"": ""人物"", ""span"": ""冯·皮勒"", ""offset"": [0, 4]}], [{""type"": ""地理位置"", ""span"": ""德国"", ""offset"": [30, 32]}]]"
know,分工，各有各的责任；合作，正副经理之间，全厂的事，不管由谁分管，也不管你有什么事找到谁，绝不会把你推给第二个人。,[]
know,范小青的长篇新作《百日阳光》（江苏文艺出版社出版），是一部探讨中国农民命运的书。,"[[{""type"": ""组织机构"", ""span"": ""江苏文艺出版社"", ""offset"": [15, 22]}], [{""type"": ""人物"", ""span"": ""范小青"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [31, 33]}]]"
know,发展燃气汽车，不仅仅是环境的原因,[]
know,发现而定位，确立而研究，一个文学流派就能提供许多富有意味的理论话题。,[]
know,法律是一种有别于情与理的特殊的语言，当事人的动与静、雄辩与沉默都会构成准证据。,[]
know,法国和德国的公司正在积极接近中国人，现在有36名中国火箭专家正在法国工作，与法国卫星公司一起为未来在中国的发射作准备。,"[[{""type"": ""地理位置"", ""span"": ""法国"", ""offset"": [32, 34]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [50, 52]}], [{""type"": ""地理位置"", ""span"": ""法国"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [24, 26]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [14, 16]}], [{""type"": ""地理位置"", ""span"": ""德国"", ""offset"": [3, 5]}], [{""type"": ""组织机构"", ""span"": ""法国卫星公司"", ""offset"": [38, 44]}]]"
know,法国还邀请欧洲14个参赛国的警察，扮成便衣，混入球迷队伍，协助识别和监督有威胁的团伙和个人。,"[[{""type"": ""地理位置"", ""span"": ""法国"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""欧洲"", ""offset"": [5, 7]}]]"
know,二是下放权力，让地方自治团体享有一定的自治权。,[]
know,而每到傍晚时分，公司两栋宿舍楼之间的篮球场上灯火通明、人影如织。,[]
know,而经济社会的活动过程已经使整个经济学界深信：宏观经济的变化必须以微观经济为基础。,[]
know,俄罗斯中央银行行长杜比宁表示，卢布绝不贬值，国家有140亿美元的黄金外汇储备应付眼下的情况。,"[[{""type"": ""人物"", ""span"": ""杜比宁"", ""offset"": [9, 12]}], [{""type"": ""组织机构"", ""span"": ""俄罗斯中央银行"", ""offset"": [0, 7]}]]"
know,俄阿双方还签署了关于航空、文化和教育交流、鼓励和相互保护对方投资等多项协定。,"[[{""type"": ""地理位置"", ""span"": ""阿"", ""offset"": [1, 2]}], [{""type"": ""地理位置"", ""span"": ""俄"", ""offset"": [0, 1]}]]"
know,敦煌历史悠久，上古为三危之地，春秋时称瓜州，到了汉代始置郡谓敦煌。,"[[{""type"": ""地理位置"", ""span"": ""敦煌"", ""offset"": [0, 2]}], [{""type"": ""地理位置"", ""span"": ""瓜州"", ""offset"": [19, 21]}], [{""type"": ""地理位置"", ""span"": ""敦煌"", ""offset"": [30, 32]}]]"
know,对外、对上吹得再好听，人民群众不满意，一切便都是虚假的、不真实的。,[]
know,对贫困母亲，只要我们帮她们一点点，她们就能站起来，就能多接受一些教育，就能多一些尊严。,[]
know,堆龙德庆“流动党校”深入农牧区,"[[{""type"": ""组织机构"", ""span"": ""堆龙德庆“流动党校”"", ""offset"": [0, 10]}]]"
know,东北师大3000多名“红烛志愿者”还走进军营，对官兵进行智力拥军。,"[[{""type"": ""组织机构"", ""span"": ""东北师大"", ""offset"": [0, 4]}]]"
know,第二，馆藏图书突破藏、借、阅分立的传统布局，实行藏书、借书、阅览全开架的现代化管理办法，读者可以自主选用文献资料。,[]
know,到处打折，也容易让人产生怀疑，不知道是真让利还是假打折，担心其质量，最后得出珠宝行业是“暴利行业”的印象。,[]
know,到百色前他就资助了9个希望工程的孩子，到这里后他一心工作，春节也没回家，女友一度要和他分手，他亦不为所动。,"[[{""type"": ""地理位置"", ""span"": ""百色"", ""offset"": [1, 3]}]]"
know,党委书记粟光前当机立断：“我们都是他的家人，都是他的亲兄弟，我签！”,"[[{""type"": ""人物"", ""span"": ""粟光前"", ""offset"": [4, 7]}]]"
know,当然，中国的长城、北京“紫禁城”、西安兵马俑等中国古老文化的象征，许多意大利人也为之赞叹不已。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [23, 25]}], [{""type"": ""地理位置"", ""span"": ""意大利"", ""offset"": [35, 38]}], [{""type"": ""地理位置"", ""span"": ""长城"", ""offset"": [6, 8]}], [{""type"": ""地理位置"", ""span"": ""紫禁城"", ""offset"": [12, 15]}], [{""type"": ""地理位置"", ""span"": ""西安"", ""offset"": [17, 19]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [3, 5]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [9, 11]}]]"
know,当前国有大中型企业改制中存在的问题。,[]
know,当年6月底，南平镇从镇委、镇政府机关分流出28名干部，用募集的40万元资金铺底，成立了龙翔畜禽股份有限公司，从鄂西山区农家购回50公斤左右一头的糙子猪，经过两个多月催肥，源源不断地供应肉联厂，每头猪可赚60至80元钱，生意十分红火。,"[[{""type"": ""组织机构"", ""span"": ""镇委"", ""offset"": [10, 12]}], [{""type"": ""组织机构"", ""span"": ""龙翔畜禽股份有限公司"", ""offset"": [43, 53]}], [{""type"": ""地理位置"", ""span"": ""南平镇"", ""offset"": [6, 9]}], [{""type"": ""地理位置"", ""span"": ""鄂"", ""offset"": [55, 56]}]]"
know,当你了解了赵致真的文学背景和他的科学情感，就不难理解他创作的科普作品为什么屡屡获奖，他领导创办的《科技之光》为什么斑斓多彩。,"[[{""type"": ""组织机构"", ""span"": ""科技之光"", ""offset"": [49, 53]}], [{""type"": ""人物"", ""span"": ""赵致真"", ""offset"": [5, 8]}]]"
know,党的宗旨和当干部的目的决定了党员干部要乐于奉献，甘愿吃亏，吃苦在前，享受在后，把困难和危险留给自己，把方便和安全让给群众。,[]
know,但作为一个共产党员、人民公仆，应当胸怀宽阔，真正做到“先天下之忧而忧，后天下之乐而乐”，淡化个人的名利得失和宠辱悲喜，把改革大业摆在首位，这样才能超越自我，摆脱世俗，有所作为。,[]
know,但因特网浏览器和java语言等新科技的发展，直接威胁到微软的地位。,"[[{""type"": ""组织机构"", ""span"": ""微软"", ""offset"": [27, 29]}]]"
know,但所有这些都未能阻止他在大选中获胜。,[]
know,但是，外国金融机构大规模进军日本金融业可以带来新的经营方式，增强日本金融界的活力。,"[[{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [32, 34]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [14, 16]}]]"
know,从这里，我们同时也会深刻地认识到，对精神文明建设中的理论问题进行哲学思考，是何等地重要。,[]
know,从这个意义上讲，谈教育和经济之间的相互关系时，教育不能不重视对现代经济增长起最主要作用的因素———智力资本的形成。,[]
know,从这个意义讲，救助贫困母亲也是对我们心灵的一种净化。,[]
know,从这个角度说，给思想留下空间，就是给创造留下空间，就是给我们的未来留下希望。,[]
know,从投资分布地区看，大多集中在广东、福建两省，其次是东部沿海地区；投资行业主要集中在房地产、交通等基础设施。,"[[{""type"": ""地理位置"", ""span"": ""福建"", ""offset"": [17, 19]}], [{""type"": ""地理位置"", ""span"": ""广东"", ""offset"": [14, 16]}]]"
know,从市场的导向看，是助长投机而不是鼓励投资。,[]
know,从去年底以来，受厄尔尼诺现象的影响，越南大部分地区出现高温少雨的异常气候。,"[[{""type"": ""地理位置"", ""span"": ""越南"", ""offset"": [18, 20]}]]"
know,从前剥削阶级在劳动生产率很低的情况下占有有限的剩余产品，主要是为了满足其家族豪华生活的需要，难有多大力量扩大再生产；现在资产阶级在社会化大生产条件下榨取大量剩余价值，除供自身需求外，主要又转化为资本，用以剥削新的雇佣劳动，从而使私人资本越来越扩大，生产资料也越来越集中。,[]
know,从另一角度而言，正因为俄总统与国家杜马僵持不下，俄国内政局形势复杂，日本舆论对这次日俄首脑会晤的期待值并不高。,"[[{""type"": ""地理位置"", ""span"": ""日"", ""offset"": [41, 42]}], [{""type"": ""地理位置"", ""span"": ""俄"", ""offset"": [42, 43]}], [{""type"": ""地理位置"", ""span"": ""俄"", ""offset"": [24, 25]}], [{""type"": ""地理位置"", ""span"": ""俄"", ""offset"": [11, 12]}], [{""type"": ""组织机构"", ""span"": ""国家杜马"", ""offset"": [15, 19]}], [{""type"": ""地理位置"", ""span"": ""日本"", ""offset"": [34, 36]}]]"
know,从今天起，培训班学员深入部队进行调研，坚持理论与实际相结合，探索全军高科技知识学习和运用的成功途径，积累经验，用以指导和推动全军的学习和运用。,[]
know,从而使得《军嫂》、《警魂》、《一个独生子女的故事》等影片，在广州都获得了较好的票房收入。,"[[{""type"": ""地理位置"", ""span"": ""广州"", ""offset"": [30, 32]}]]"
know,从第一轮看，奥地利队的戏似乎不大。,"[[{""type"": ""组织机构"", ""span"": ""奥地利队"", ""offset"": [6, 10]}]]"
know,从5月份开始，常去阅览室的读者已发现，中文图书阅览室、中文期刊阅览室开放时间已延至晚上8时。,"[[{""type"": ""组织机构"", ""span"": ""中文期刊阅览室"", ""offset"": [27, 34]}], [{""type"": ""组织机构"", ""span"": ""中文图书阅览室"", ""offset"": [19, 26]}]]"
know,此情此景，令执教汉语多年的白乐桑十分振奋，他说，这反映了汉语教学蓬勃发展的前景。,"[[{""type"": ""人物"", ""span"": ""白乐桑"", ""offset"": [13, 16]}]]"
know,此次扑火摇把子发挥了巨大作用。,[]
know,此次交响音乐周活动于5月25日至30日期间分别在北京市、上海市、天津市、四川省、湖北省、陕西省举办。,"[[{""type"": ""地理位置"", ""span"": ""上海市"", ""offset"": [28, 31]}], [{""type"": ""地理位置"", ""span"": ""北京市"", ""offset"": [24, 27]}], [{""type"": ""地理位置"", ""span"": ""四川省"", ""offset"": [36, 39]}], [{""type"": ""地理位置"", ""span"": ""湖北省"", ""offset"": [40, 43]}], [{""type"": ""地理位置"", ""span"": ""天津市"", ""offset"": [32, 35]}], [{""type"": ""地理位置"", ""span"": ""陕西省"", ""offset"": [44, 47]}]]"
know,此次减产行动又有非欧佩克国家参加，一些依赖石油出口的国家很可能从自身利益出发，隐瞒原油的真实产量。,"[[{""type"": ""组织机构"", ""span"": ""欧佩克"", ""offset"": [9, 12]}]]"
know,此处放的是轻音乐，弹的是钢琴。,[]
know,此案经海口市中级人民法院一审，以受贿罪判处辛业江有期徒刑5年，依法追缴其非法所得。,"[[{""type"": ""组织机构"", ""span"": ""海口市中级人民法院"", ""offset"": [3, 12]}], [{""type"": ""人物"", ""span"": ""辛业江"", ""offset"": [21, 24]}]]"
know,春秋战国时，诸侯各国凡改革成功者，都得到国君的大力支持。,[]
know,除了人体科学上的某些原因外，我所知道的是如下三点：一是要品尝少时熟悉的环境。,[]
know,持卡者可享受到就医、手术、住院预约、电话医疗建议、就医服务指导、药品邮寄、临终关怀、心理咨询等各项服务。,[]
know,成员国之间的贸易从1990年的13．3亿美元增加到1997年的55．57亿美元。,[]
know,陈宗兴组织的班子正在进行全面论证，以期拿出一个全省统筹的并具科学性、可操作性、经得起实践检验的《陕西省高校管理体制改革规划与实施方案》。,"[[{""type"": ""人物"", ""span"": ""陈宗兴"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""陕西省"", ""offset"": [48, 51]}]]"
know,参加人权会的古巴代表团团长、司法部长卡洛斯·阿马特在表决前指出，美国对古巴的经济封锁是“发生在古巴的唯一的大规模侵犯人权案”。,"[[{""type"": ""地理位置"", ""span"": ""古巴"", ""offset"": [35, 37]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [32, 34]}], [{""type"": ""组织机构"", ""span"": ""古巴代表团"", ""offset"": [6, 11]}], [{""type"": ""组织机构"", ""span"": ""司法部"", ""offset"": [14, 17]}], [{""type"": ""地理位置"", ""span"": ""古巴"", ""offset"": [47, 49]}], [{""type"": ""人物"", ""span"": ""卡洛斯·阿马特"", ""offset"": [18, 25]}], [{""type"": ""组织机构"", ""span"": ""人权会"", ""offset"": [2, 5]}]]"
know,参加步行的有男有女，有年轻人，也有中年人。,[]
know,不久前上映的美国大片《泰坦尼克号》在描写男女主人公动人爱情故事和惊险沉船场面的同时，也揭示了泰坦尼克号沉没的原因。,"[[{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [6, 8]}], [{""type"": ""组织机构"", ""span"": ""泰坦尼克号"", ""offset"": [46, 51]}], [{""type"": ""组织机构"", ""span"": ""泰坦尼克号"", ""offset"": [11, 16]}]]"
know,不久前，记者就这些问题赴江西省委老干部局进行了采访。,"[[{""type"": ""组织机构"", ""span"": ""江西省委老干部局"", ""offset"": [12, 20]}]]"
know,比如在党的领导问题上，他强调坚持四项基本原则的核心是坚持党的领导，没有党的领导，就没有现代中国的一切，就没有社会主义现代化，而为了坚持党的领导，他同时又强调必须努力改善党的领导，改善党的组织状况、工作状况，改革党和国家的领导制度。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [45, 47]}]]"
know,比如，她会冷不丁弄出声巨响，毛手毛脚地打碎点儿什么。,[]
know,本病好发于面、颈、背、躯干及外生殖器，可见于各种年龄。,[]
know,本报讯一本反映孙中山与宋庆龄两位伟人的思想与实践以及人格魅力的大型图册《孙中山与宋庆龄》，近日由广东人民出版社出版。,"[[{""type"": ""人物"", ""span"": ""孙中山"", ""offset"": [7, 10]}], [{""type"": ""人物"", ""span"": ""宋庆龄"", ""offset"": [11, 14]}], [{""type"": ""组织机构"", ""span"": ""广东人民出版社"", ""offset"": [48, 55]}], [{""type"": ""人物"", ""span"": ""孙中山"", ""offset"": [36, 39]}], [{""type"": ""人物"", ""span"": ""宋庆龄"", ""offset"": [40, 43]}]]"
know,本报讯武警辽宁总队营口市支队加强基层党组织建设，注重发展少数民族战士入党，提高了部队建设整体水平。,"[[{""type"": ""组织机构"", ""span"": ""武警辽宁总队营口市支队"", ""offset"": [3, 14]}]]"
know,本报讯欧洲足坛劲旅南斯拉夫贝尔格莱德红星队将于5月下旬访华，先后在上海、成都和北京同当地的甲a球队进行三场对抗赛。,"[[{""type"": ""地理位置"", ""span"": ""南斯拉夫"", ""offset"": [9, 13]}], [{""type"": ""地理位置"", ""span"": ""上海"", ""offset"": [33, 35]}], [{""type"": ""地理位置"", ""span"": ""华"", ""offset"": [28, 29]}], [{""type"": ""地理位置"", ""span"": ""成都"", ""offset"": [36, 38]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [39, 41]}], [{""type"": ""地理位置"", ""span"": ""欧洲"", ""offset"": [3, 5]}], [{""type"": ""组织机构"", ""span"": ""贝尔格莱德红星队"", ""offset"": [13, 21]}]]"
know,本报讯美国西北部塔科马市最近开始对莱克伍德县法官展开调查，原因是他审案时喝酒。,"[[{""type"": ""地理位置"", ""span"": ""莱克伍德县"", ""offset"": [17, 22]}], [{""type"": ""地理位置"", ""span"": ""塔科马市"", ""offset"": [8, 12]}], [{""type"": ""地理位置"", ""span"": ""美国"", ""offset"": [3, 5]}]]"
know,本报讯地处重庆的西南师范大学充分发挥地域和学科优势，组织师生积极开展“铭记大轰炸，建设新重庆”爱国主义教育活动，收到了良好的社会效果。,"[[{""type"": ""组织机构"", ""span"": ""西南师范大学"", ""offset"": [8, 14]}], [{""type"": ""地理位置"", ""span"": ""重庆"", ""offset"": [44, 46]}], [{""type"": ""地理位置"", ""span"": ""重庆"", ""offset"": [5, 7]}]]"
know,本报香港6月9日电记者陶世安、徐运平报道：大型图片文物展———《人民的好总理———纪念周恩来百年诞辰展览》，今起在香港展览中心展出，展期共5天。,"[[{""type"": ""地理位置"", ""span"": ""香港"", ""offset"": [2, 4]}], [{""type"": ""人物"", ""span"": ""陶世安"", ""offset"": [11, 14]}], [{""type"": ""地理位置"", ""span"": ""香港展览中心"", ""offset"": [57, 63]}], [{""type"": ""人物"", ""span"": ""徐运平"", ""offset"": [15, 18]}], [{""type"": ""人物"", ""span"": ""周恩来"", ""offset"": [43, 46]}]]"
know,本报北京5月4日讯记者王霞光、李长云报道：第十六届英联邦运动会将于今年9月11日—21日在马来西亚首都吉隆坡举行。,"[[{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [2, 4]}], [{""type"": ""地理位置"", ""span"": ""英联邦"", ""offset"": [25, 28]}], [{""type"": ""人物"", ""span"": ""王霞光"", ""offset"": [11, 14]}], [{""type"": ""地理位置"", ""span"": ""吉隆坡"", ""offset"": [51, 54]}], [{""type"": ""地理位置"", ""span"": ""马来西亚"", ""offset"": [45, 49]}], [{""type"": ""人物"", ""span"": ""李长云"", ""offset"": [15, 18]}]]"
know,本报北京5月24日讯记者李长云报道：库尔勒杯职业女子围棋赛，今天在北京中国棋院战罢第一轮，丰云九段、杨辉八段、张璇八段和华学明七段等16位高段位棋手轻松过关。,"[[{""type"": ""人物"", ""span"": ""华学明"", ""offset"": [60, 63]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [2, 4]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [33, 35]}], [{""type"": ""人物"", ""span"": ""杨辉"", ""offset"": [50, 52]}], [{""type"": ""地理位置"", ""span"": ""库尔勒"", ""offset"": [18, 21]}], [{""type"": ""人物"", ""span"": ""李长云"", ""offset"": [12, 15]}], [{""type"": ""组织机构"", ""span"": ""中国棋院"", ""offset"": [35, 39]}], [{""type"": ""人物"", ""span"": ""张璇"", ""offset"": [55, 57]}], [{""type"": ""人物"", ""span"": ""丰云"", ""offset"": [45, 47]}]]"
know,本报北京5月14日讯记者袁（日希）报道：国家新闻出版署今天在京召开关于做好纪念党的十一届三中全会召开20周年、庆祝新中国成立50周年图书出版工作会议。,"[[{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [2, 4]}], [{""type"": ""组织机构"", ""span"": ""国家新闻出版署"", ""offset"": [20, 27]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [58, 60]}], [{""type"": ""地理位置"", ""span"": ""京"", ""offset"": [30, 31]}], [{""type"": ""人物"", ""span"": ""袁（日希）"", ""offset"": [12, 17]}]]"
know,本报“读者之友”版3月25日刊出征稿启事，截至4月25日，共收到各地读者的来稿7000多件、“一句话”1．5万多条。,[]
know,北京市怀柔县参试学生普遍感觉第四节课饥饿感消失了，四川省江油市华丰中学选用豆奶和复合营养素后，试验组男生的贫血率下降13个百分点，而对照组只降低0．44个百分点。,"[[{""type"": ""地理位置"", ""span"": ""四川省"", ""offset"": [25, 28]}], [{""type"": ""地理位置"", ""span"": ""北京市"", ""offset"": [0, 3]}], [{""type"": ""地理位置"", ""span"": ""怀柔县"", ""offset"": [3, 6]}], [{""type"": ""组织机构"", ""span"": ""江油市华丰中学"", ""offset"": [28, 35]}]]"
know,北京九十中学李铁辰校长说：“短网打得好的学生将来可以到我校上中学，改练软式网球。”,"[[{""type"": ""组织机构"", ""span"": ""北京九十中学"", ""offset"": [0, 6]}], [{""type"": ""人物"", ""span"": ""李铁辰"", ""offset"": [6, 9]}]]"
know,被解雇后，失业者的首要任务是四处寻找工作，而联邦和州政府也给予适当救济和支持。,[]
know,伴随着企业的发展壮大，公司董事长兼总经理郎青山走过了一条非凡的创业之路。,"[[{""type"": ""人物"", ""span"": ""郎青山"", ""offset"": [20, 23]}]]"
know,巴印两国间的对话进程去年曾一度出现良好势头，但新上台的印度人民党政府对巴的倡议所作的反应令人失望。,"[[{""type"": ""组织机构"", ""span"": ""印度人民党"", ""offset"": [27, 32]}], [{""type"": ""地理位置"", ""span"": ""印"", ""offset"": [1, 2]}], [{""type"": ""地理位置"", ""span"": ""巴"", ""offset"": [0, 1]}], [{""type"": ""地理位置"", ""span"": ""巴"", ""offset"": [35, 36]}]]"
know,澳门日报社长李成俊在开幕式上说，周恩来总理生前关心澳门，为香港和澳门回归祖国倾注了心血。,"[[{""type"": ""地理位置"", ""span"": ""澳门"", ""offset"": [32, 34]}], [{""type"": ""组织机构"", ""span"": ""澳门日报社"", ""offset"": [0, 5]}], [{""type"": ""人物"", ""span"": ""李成俊"", ""offset"": [6, 9]}], [{""type"": ""地理位置"", ""span"": ""澳门"", ""offset"": [25, 27]}], [{""type"": ""人物"", ""span"": ""周恩来"", ""offset"": [16, 19]}], [{""type"": ""地理位置"", ""span"": ""香港"", ""offset"": [29, 31]}]]"
know,按照赛程，a、b两组的出线球队编为e组，在不来梅进行一轮单循环赛，在第一阶段小组赛中已经交手的球队不再比赛，成绩带入第二阶段。,"[[{""type"": ""地理位置"", ""span"": ""不来梅"", ""offset"": [21, 24]}]]"
know,』从人生的角度来看，父母下岗，对成长中的孩子来说，是一种营养。,[]
know,『德高望重风范长存茅以升、周培源生平事迹展览』也同时开幕。,"[[{""type"": ""人物"", ""span"": ""茅以升"", ""offset"": [9, 12]}], [{""type"": ""人物"", ""span"": ""周培源"", ""offset"": [13, 16]}]]"
know,text,info_list
know,c组澳大利亚队胜德国队，88∶69；古巴队胜刚果队，96∶62。,"[[{""type"": ""组织机构"", ""span"": ""刚果队"", ""offset"": [22, 25]}], [{""type"": ""组织机构"", ""span"": ""古巴队"", ""offset"": [18, 21]}], [{""type"": ""组织机构"", ""span"": ""澳大利亚队"", ""offset"": [2, 7]}], [{""type"": ""组织机构"", ""span"": ""德国队"", ""offset"": [8, 11]}]]"
know,80年代中期以前，农村经济体制变革和政府大幅度提高农产品收购价格，诱发了农业的超常规增长，农村居民收入水平和消费水平迅速提高，温饱问题逐步得到解决。,[]
know,7年多来，流动党员人数不断增加，组建的支部也不断增多，到目前为止，管理着流动党员3390人，其中在国外的600人，在外省市的150人，流动党员支部109个。,[]
know,6·设意见箱、举报箱，公布监督、举报电话号码；,[]
know,5月23日一大早，江西省新余市区大街小巷横幅高悬，百余幅国防宣传画布满街头。,"[[{""type"": ""地理位置"", ""span"": ""江西省"", ""offset"": [9, 12]}], [{""type"": ""地理位置"", ""span"": ""新余"", ""offset"": [12, 14]}]]"
know,5月10日晚，中国人口福利基金会、幸福工程组委会联合在北京举办了一场“献给母亲的春天———幸福工程义演晚会”。,"[[{""type"": ""组织机构"", ""span"": ""中国人口福利基金会"", ""offset"": [7, 16]}], [{""type"": ""地理位置"", ""span"": ""北京"", ""offset"": [27, 29]}], [{""type"": ""组织机构"", ""span"": ""幸福工程组委会"", ""offset"": [17, 24]}]]"
know,4月23日傍晚，坐落在东京都港区元麻布的中国大使馆热闹异常。,"[[{""type"": ""地理位置"", ""span"": ""东京都"", ""offset"": [11, 14]}], [{""type"": ""组织机构"", ""span"": ""中国大使馆"", ""offset"": [20, 25]}], [{""type"": ""地理位置"", ""span"": ""元麻布"", ""offset"": [16, 19]}]]"
know,2、北京大学天津校友会为母校百年华诞送来的纪念礼品———风雨百年石，距今11亿年，石上雕有100个雨点，象征北大100年中风风雨雨走过的光辉历程。,"[[{""type"": ""组织机构"", ""span"": ""北京大学天津校友会"", ""offset"": [2, 11]}], [{""type"": ""组织机构"", ""span"": ""北大"", ""offset"": [54, 56]}]]"
know,25平方公里的泾河工业区的开发已列为西安市十年规划。,"[[{""type"": ""地理位置"", ""span"": ""泾河"", ""offset"": [7, 9]}], [{""type"": ""地理位置"", ""span"": ""西安市"", ""offset"": [18, 21]}]]"
know,1／8决赛打完4场，似乎还不如小组赛很多场次打得精彩好看，也许是这4场比赛相互交战的队伍大多不在一个档次上。,[]
know,1．由遗传基因所决定的遗传性癌症：如肾母细胞瘤、视网膜母细胞瘤等。,[]
know,1999—2002年是欧元过渡期，是欧元国家适应欧元的过程。,[]
know,1995年，乌兰到内蒙古最西部的阿拉善盟了解情况，发现当地的孪井滩农业开发区没有小学，孩子们面临失学危机。,"[[{""type"": ""地理位置"", ""span"": ""内蒙古"", ""offset"": [9, 12]}], [{""type"": ""人物"", ""span"": ""乌兰"", ""offset"": [6, 8]}], [{""type"": ""地理位置"", ""span"": ""阿拉善盟"", ""offset"": [16, 20]}], [{""type"": ""地理位置"", ""span"": ""孪井滩"", ""offset"": [30, 33]}]]"
know,1995年的一个秋日，我在南斯拉夫的首都贝尔格莱德，聆听了一场由世界几十个国家的诗人们举行的街头诗朗诵。,"[[{""type"": ""地理位置"", ""span"": ""南斯拉夫"", ""offset"": [13, 17]}], [{""type"": ""地理位置"", ""span"": ""贝尔格莱德"", ""offset"": [20, 25]}]]"
know,1993年作为中国代表参加了东京国际法学会，其发言受到国际法学界极大关注，破例被选为大会共同主席。,"[[{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [7, 9]}], [{""type"": ""组织机构"", ""span"": ""东京国际法学会"", ""offset"": [14, 21]}]]"
know,1991年5月，中国队曾经在澳大利亚的邀请赛上以104∶99战胜前苏联队，这是中国队历史上第一次战胜苏联队。,"[[{""type"": ""地理位置"", ""span"": ""澳大利亚"", ""offset"": [14, 18]}], [{""type"": ""组织机构"", ""span"": ""苏联队"", ""offset"": [33, 36]}], [{""type"": ""组织机构"", ""span"": ""中国队"", ""offset"": [8, 11]}], [{""type"": ""组织机构"", ""span"": ""中国队"", ""offset"": [39, 42]}], [{""type"": ""组织机构"", ""span"": ""苏联队"", ""offset"": [50, 53]}]]"
know,15年来同贝贝杯赛一同成长的江苏贝贝集团，现已是拥有国内20家企业、5家海外公司的跨国企业集团。,"[[{""type"": ""组织机构"", ""span"": ""江苏贝贝集团"", ""offset"": [14, 20]}], [{""type"": ""组织机构"", ""span"": ""贝贝"", ""offset"": [5, 7]}]]"
know,●收入分配是社会再生产的一个重要环节，它在生产和消费之间起着承上启下的关键作用。,[]
know,●加拿大海军舰艇编队结束访华据新华社上海6月8日电（陈毛弟、刘谦）由加拿大海军太平洋舰队司令巴克海军少将率领的加拿大海军舰艇编队结束对中国为期6天的正式友好访问，今天上午驶离上海，继续他们的环太平洋航行。,"[[{""type"": ""地理位置"", ""span"": ""华"", ""offset"": [13, 14]}], [{""type"": ""人物"", ""span"": ""巴克"", ""offset"": [46, 48]}], [{""type"": ""地理位置"", ""span"": ""太平洋"", ""offset"": [96, 99]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [67, 69]}], [{""type"": ""人物"", ""span"": ""刘谦"", ""offset"": [30, 32]}], [{""type"": ""组织机构"", ""span"": ""海军"", ""offset"": [48, 50]}], [{""type"": ""组织机构"", ""span"": ""加拿大海军太平洋舰队"", ""offset"": [34, 44]}], [{""type"": ""组织机构"", ""span"": ""加拿大海军舰艇编队"", ""offset"": [55, 64]}], [{""type"": ""地理位置"", ""span"": ""上海"", ""offset"": [87, 89]}], [{""type"": ""地理位置"", ""span"": ""上海"", ""offset"": [18, 20]}], [{""type"": ""人物"", ""span"": ""陈毛弟"", ""offset"": [26, 29]}], [{""type"": ""组织机构"", ""span"": ""新华社"", ""offset"": [15, 18]}], [{""type"": ""组织机构"", ""span"": ""加拿大海军舰艇编队"", ""offset"": [1, 10]}]]"
know,“这在冷战时期是划时代的重大事件，也可以说是超前于当今多极化世界的产物。”,[]
know,“让世界少一点痛苦，为人间添一份幸福”。,[]
know,“视觉第一中国行动”是国务院残疾人工作协调委员会、卫生部和中国残联从国际狮子会争取的一个国际合作项目。,"[[{""type"": ""组织机构"", ""span"": ""卫生部"", ""offset"": [25, 28]}], [{""type"": ""组织机构"", ""span"": ""中国残联"", ""offset"": [29, 33]}], [{""type"": ""组织机构"", ""span"": ""国际狮子会"", ""offset"": [34, 39]}], [{""type"": ""地理位置"", ""span"": ""中国"", ""offset"": [5, 7]}], [{""type"": ""组织机构"", ""span"": ""国务院残疾人工作协调委员会"", ""offset"": [11, 24]}]]"
know,“扔包袱”和“送钱包”的关联交易绝非公平的市场行为。,[]
know,“我是有信心的”（附图片1张）,[]
